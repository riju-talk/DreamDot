
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model favorites
 * 
 */
export type favorites = $Result.DefaultSelection<Prisma.$favoritesPayload>
/**
 * Model items
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type items = $Result.DefaultSelection<Prisma.$itemsPayload>
/**
 * Model monetization
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type monetization = $Result.DefaultSelection<Prisma.$monetizationPayload>
/**
 * Model pay_per_view_access
 * 
 */
export type pay_per_view_access = $Result.DefaultSelection<Prisma.$pay_per_view_accessPayload>
/**
 * Model reviews
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type reviews = $Result.DefaultSelection<Prisma.$reviewsPayload>
/**
 * Model transactions
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type transactions = $Result.DefaultSelection<Prisma.$transactionsPayload>
/**
 * Model password_reset_tokens
 * 
 */
export type password_reset_tokens = $Result.DefaultSelection<Prisma.$password_reset_tokensPayload>
/**
 * Model user_analytics
 * 
 */
export type user_analytics = $Result.DefaultSelection<Prisma.$user_analyticsPayload>
/**
 * Model user_audit_logs
 * 
 */
export type user_audit_logs = $Result.DefaultSelection<Prisma.$user_audit_logsPayload>
/**
 * Model user_blocklist
 * 
 */
export type user_blocklist = $Result.DefaultSelection<Prisma.$user_blocklistPayload>
/**
 * Model user_certificates
 * 
 */
export type user_certificates = $Result.DefaultSelection<Prisma.$user_certificatesPayload>
/**
 * Model user_profile
 * 
 */
export type user_profile = $Result.DefaultSelection<Prisma.$user_profilePayload>
/**
 * Model user_security
 * 
 */
export type user_security = $Result.DefaultSelection<Prisma.$user_securityPayload>
/**
 * Model user_sessions
 * 
 */
export type user_sessions = $Result.DefaultSelection<Prisma.$user_sessionsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Favorites
 * const favorites = await prisma.favorites.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Favorites
   * const favorites = await prisma.favorites.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.favorites`: Exposes CRUD operations for the **favorites** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorites.findMany()
    * ```
    */
  get favorites(): Prisma.favoritesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.items`: Exposes CRUD operations for the **items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.items.findMany()
    * ```
    */
  get items(): Prisma.itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.monetization`: Exposes CRUD operations for the **monetization** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Monetizations
    * const monetizations = await prisma.monetization.findMany()
    * ```
    */
  get monetization(): Prisma.monetizationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pay_per_view_access`: Exposes CRUD operations for the **pay_per_view_access** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pay_per_view_accesses
    * const pay_per_view_accesses = await prisma.pay_per_view_access.findMany()
    * ```
    */
  get pay_per_view_access(): Prisma.pay_per_view_accessDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reviews`: Exposes CRUD operations for the **reviews** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.reviews.findMany()
    * ```
    */
  get reviews(): Prisma.reviewsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactions`: Exposes CRUD operations for the **transactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transactions.findMany()
    * ```
    */
  get transactions(): Prisma.transactionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.password_reset_tokens`: Exposes CRUD operations for the **password_reset_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Password_reset_tokens
    * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
    * ```
    */
  get password_reset_tokens(): Prisma.password_reset_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_analytics`: Exposes CRUD operations for the **user_analytics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_analytics
    * const user_analytics = await prisma.user_analytics.findMany()
    * ```
    */
  get user_analytics(): Prisma.user_analyticsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_audit_logs`: Exposes CRUD operations for the **user_audit_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_audit_logs
    * const user_audit_logs = await prisma.user_audit_logs.findMany()
    * ```
    */
  get user_audit_logs(): Prisma.user_audit_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_blocklist`: Exposes CRUD operations for the **user_blocklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_blocklists
    * const user_blocklists = await prisma.user_blocklist.findMany()
    * ```
    */
  get user_blocklist(): Prisma.user_blocklistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_certificates`: Exposes CRUD operations for the **user_certificates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_certificates
    * const user_certificates = await prisma.user_certificates.findMany()
    * ```
    */
  get user_certificates(): Prisma.user_certificatesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_profile`: Exposes CRUD operations for the **user_profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_profiles
    * const user_profiles = await prisma.user_profile.findMany()
    * ```
    */
  get user_profile(): Prisma.user_profileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_security`: Exposes CRUD operations for the **user_security** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_securities
    * const user_securities = await prisma.user_security.findMany()
    * ```
    */
  get user_security(): Prisma.user_securityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_sessions`: Exposes CRUD operations for the **user_sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_sessions
    * const user_sessions = await prisma.user_sessions.findMany()
    * ```
    */
  get user_sessions(): Prisma.user_sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    favorites: 'favorites',
    items: 'items',
    monetization: 'monetization',
    pay_per_view_access: 'pay_per_view_access',
    reviews: 'reviews',
    transactions: 'transactions',
    password_reset_tokens: 'password_reset_tokens',
    user_analytics: 'user_analytics',
    user_audit_logs: 'user_audit_logs',
    user_blocklist: 'user_blocklist',
    user_certificates: 'user_certificates',
    user_profile: 'user_profile',
    user_security: 'user_security',
    user_sessions: 'user_sessions',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "favorites" | "items" | "monetization" | "pay_per_view_access" | "reviews" | "transactions" | "password_reset_tokens" | "user_analytics" | "user_audit_logs" | "user_blocklist" | "user_certificates" | "user_profile" | "user_security" | "user_sessions" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      favorites: {
        payload: Prisma.$favoritesPayload<ExtArgs>
        fields: Prisma.favoritesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.favoritesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.favoritesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          findFirst: {
            args: Prisma.favoritesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.favoritesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          findMany: {
            args: Prisma.favoritesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>[]
          }
          create: {
            args: Prisma.favoritesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          createMany: {
            args: Prisma.favoritesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.favoritesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>[]
          }
          delete: {
            args: Prisma.favoritesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          update: {
            args: Prisma.favoritesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          deleteMany: {
            args: Prisma.favoritesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.favoritesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.favoritesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>[]
          }
          upsert: {
            args: Prisma.favoritesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$favoritesPayload>
          }
          aggregate: {
            args: Prisma.FavoritesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorites>
          }
          groupBy: {
            args: Prisma.favoritesGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritesGroupByOutputType>[]
          }
          count: {
            args: Prisma.favoritesCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritesCountAggregateOutputType> | number
          }
        }
      }
      items: {
        payload: Prisma.$itemsPayload<ExtArgs>
        fields: Prisma.itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          findFirst: {
            args: Prisma.itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          findMany: {
            args: Prisma.itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>[]
          }
          create: {
            args: Prisma.itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          createMany: {
            args: Prisma.itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.itemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>[]
          }
          delete: {
            args: Prisma.itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          update: {
            args: Prisma.itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          deleteMany: {
            args: Prisma.itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.itemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>[]
          }
          upsert: {
            args: Prisma.itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemsPayload>
          }
          aggregate: {
            args: Prisma.ItemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItems>
          }
          groupBy: {
            args: Prisma.itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.itemsCountArgs<ExtArgs>
            result: $Utils.Optional<ItemsCountAggregateOutputType> | number
          }
        }
      }
      monetization: {
        payload: Prisma.$monetizationPayload<ExtArgs>
        fields: Prisma.monetizationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.monetizationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.monetizationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          findFirst: {
            args: Prisma.monetizationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.monetizationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          findMany: {
            args: Prisma.monetizationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>[]
          }
          create: {
            args: Prisma.monetizationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          createMany: {
            args: Prisma.monetizationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.monetizationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>[]
          }
          delete: {
            args: Prisma.monetizationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          update: {
            args: Prisma.monetizationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          deleteMany: {
            args: Prisma.monetizationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.monetizationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.monetizationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>[]
          }
          upsert: {
            args: Prisma.monetizationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$monetizationPayload>
          }
          aggregate: {
            args: Prisma.MonetizationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMonetization>
          }
          groupBy: {
            args: Prisma.monetizationGroupByArgs<ExtArgs>
            result: $Utils.Optional<MonetizationGroupByOutputType>[]
          }
          count: {
            args: Prisma.monetizationCountArgs<ExtArgs>
            result: $Utils.Optional<MonetizationCountAggregateOutputType> | number
          }
        }
      }
      pay_per_view_access: {
        payload: Prisma.$pay_per_view_accessPayload<ExtArgs>
        fields: Prisma.pay_per_view_accessFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pay_per_view_accessFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pay_per_view_accessFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          findFirst: {
            args: Prisma.pay_per_view_accessFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pay_per_view_accessFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          findMany: {
            args: Prisma.pay_per_view_accessFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>[]
          }
          create: {
            args: Prisma.pay_per_view_accessCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          createMany: {
            args: Prisma.pay_per_view_accessCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pay_per_view_accessCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>[]
          }
          delete: {
            args: Prisma.pay_per_view_accessDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          update: {
            args: Prisma.pay_per_view_accessUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          deleteMany: {
            args: Prisma.pay_per_view_accessDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pay_per_view_accessUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pay_per_view_accessUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>[]
          }
          upsert: {
            args: Prisma.pay_per_view_accessUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pay_per_view_accessPayload>
          }
          aggregate: {
            args: Prisma.Pay_per_view_accessAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePay_per_view_access>
          }
          groupBy: {
            args: Prisma.pay_per_view_accessGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pay_per_view_accessGroupByOutputType>[]
          }
          count: {
            args: Prisma.pay_per_view_accessCountArgs<ExtArgs>
            result: $Utils.Optional<Pay_per_view_accessCountAggregateOutputType> | number
          }
        }
      }
      reviews: {
        payload: Prisma.$reviewsPayload<ExtArgs>
        fields: Prisma.reviewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reviewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reviewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          findFirst: {
            args: Prisma.reviewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reviewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          findMany: {
            args: Prisma.reviewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>[]
          }
          create: {
            args: Prisma.reviewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          createMany: {
            args: Prisma.reviewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reviewsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>[]
          }
          delete: {
            args: Prisma.reviewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          update: {
            args: Prisma.reviewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          deleteMany: {
            args: Prisma.reviewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reviewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reviewsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>[]
          }
          upsert: {
            args: Prisma.reviewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reviewsPayload>
          }
          aggregate: {
            args: Prisma.ReviewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReviews>
          }
          groupBy: {
            args: Prisma.reviewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.reviewsCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewsCountAggregateOutputType> | number
          }
        }
      }
      transactions: {
        payload: Prisma.$transactionsPayload<ExtArgs>
        fields: Prisma.transactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          findFirst: {
            args: Prisma.transactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          findMany: {
            args: Prisma.transactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          create: {
            args: Prisma.transactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          createMany: {
            args: Prisma.transactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transactionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          delete: {
            args: Prisma.transactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          update: {
            args: Prisma.transactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          deleteMany: {
            args: Prisma.transactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transactionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          upsert: {
            args: Prisma.transactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          aggregate: {
            args: Prisma.TransactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactions>
          }
          groupBy: {
            args: Prisma.transactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.transactionsCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionsCountAggregateOutputType> | number
          }
        }
      }
      password_reset_tokens: {
        payload: Prisma.$password_reset_tokensPayload<ExtArgs>
        fields: Prisma.password_reset_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.password_reset_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findFirst: {
            args: Prisma.password_reset_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.password_reset_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findMany: {
            args: Prisma.password_reset_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          create: {
            args: Prisma.password_reset_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          createMany: {
            args: Prisma.password_reset_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.password_reset_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          delete: {
            args: Prisma.password_reset_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          update: {
            args: Prisma.password_reset_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          deleteMany: {
            args: Prisma.password_reset_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.password_reset_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          upsert: {
            args: Prisma.password_reset_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          aggregate: {
            args: Prisma.Password_reset_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePassword_reset_tokens>
          }
          groupBy: {
            args: Prisma.password_reset_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.password_reset_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensCountAggregateOutputType> | number
          }
        }
      }
      user_analytics: {
        payload: Prisma.$user_analyticsPayload<ExtArgs>
        fields: Prisma.user_analyticsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_analyticsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_analyticsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          findFirst: {
            args: Prisma.user_analyticsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_analyticsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          findMany: {
            args: Prisma.user_analyticsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>[]
          }
          create: {
            args: Prisma.user_analyticsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          createMany: {
            args: Prisma.user_analyticsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_analyticsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>[]
          }
          delete: {
            args: Prisma.user_analyticsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          update: {
            args: Prisma.user_analyticsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          deleteMany: {
            args: Prisma.user_analyticsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_analyticsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_analyticsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>[]
          }
          upsert: {
            args: Prisma.user_analyticsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_analyticsPayload>
          }
          aggregate: {
            args: Prisma.User_analyticsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_analytics>
          }
          groupBy: {
            args: Prisma.user_analyticsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_analyticsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_analyticsCountArgs<ExtArgs>
            result: $Utils.Optional<User_analyticsCountAggregateOutputType> | number
          }
        }
      }
      user_audit_logs: {
        payload: Prisma.$user_audit_logsPayload<ExtArgs>
        fields: Prisma.user_audit_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_audit_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_audit_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          findFirst: {
            args: Prisma.user_audit_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_audit_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          findMany: {
            args: Prisma.user_audit_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>[]
          }
          create: {
            args: Prisma.user_audit_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          createMany: {
            args: Prisma.user_audit_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_audit_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>[]
          }
          delete: {
            args: Prisma.user_audit_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          update: {
            args: Prisma.user_audit_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          deleteMany: {
            args: Prisma.user_audit_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_audit_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_audit_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>[]
          }
          upsert: {
            args: Prisma.user_audit_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_audit_logsPayload>
          }
          aggregate: {
            args: Prisma.User_audit_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_audit_logs>
          }
          groupBy: {
            args: Prisma.user_audit_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_audit_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_audit_logsCountArgs<ExtArgs>
            result: $Utils.Optional<User_audit_logsCountAggregateOutputType> | number
          }
        }
      }
      user_blocklist: {
        payload: Prisma.$user_blocklistPayload<ExtArgs>
        fields: Prisma.user_blocklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_blocklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_blocklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          findFirst: {
            args: Prisma.user_blocklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_blocklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          findMany: {
            args: Prisma.user_blocklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>[]
          }
          create: {
            args: Prisma.user_blocklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          createMany: {
            args: Prisma.user_blocklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_blocklistCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>[]
          }
          delete: {
            args: Prisma.user_blocklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          update: {
            args: Prisma.user_blocklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          deleteMany: {
            args: Prisma.user_blocklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_blocklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_blocklistUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>[]
          }
          upsert: {
            args: Prisma.user_blocklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_blocklistPayload>
          }
          aggregate: {
            args: Prisma.User_blocklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_blocklist>
          }
          groupBy: {
            args: Prisma.user_blocklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_blocklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_blocklistCountArgs<ExtArgs>
            result: $Utils.Optional<User_blocklistCountAggregateOutputType> | number
          }
        }
      }
      user_certificates: {
        payload: Prisma.$user_certificatesPayload<ExtArgs>
        fields: Prisma.user_certificatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_certificatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_certificatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          findFirst: {
            args: Prisma.user_certificatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_certificatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          findMany: {
            args: Prisma.user_certificatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>[]
          }
          create: {
            args: Prisma.user_certificatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          createMany: {
            args: Prisma.user_certificatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_certificatesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>[]
          }
          delete: {
            args: Prisma.user_certificatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          update: {
            args: Prisma.user_certificatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          deleteMany: {
            args: Prisma.user_certificatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_certificatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_certificatesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>[]
          }
          upsert: {
            args: Prisma.user_certificatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_certificatesPayload>
          }
          aggregate: {
            args: Prisma.User_certificatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_certificates>
          }
          groupBy: {
            args: Prisma.user_certificatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_certificatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_certificatesCountArgs<ExtArgs>
            result: $Utils.Optional<User_certificatesCountAggregateOutputType> | number
          }
        }
      }
      user_profile: {
        payload: Prisma.$user_profilePayload<ExtArgs>
        fields: Prisma.user_profileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_profileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_profileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          findFirst: {
            args: Prisma.user_profileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_profileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          findMany: {
            args: Prisma.user_profileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>[]
          }
          create: {
            args: Prisma.user_profileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          createMany: {
            args: Prisma.user_profileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_profileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>[]
          }
          delete: {
            args: Prisma.user_profileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          update: {
            args: Prisma.user_profileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          deleteMany: {
            args: Prisma.user_profileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_profileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_profileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>[]
          }
          upsert: {
            args: Prisma.user_profileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilePayload>
          }
          aggregate: {
            args: Prisma.User_profileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_profile>
          }
          groupBy: {
            args: Prisma.user_profileGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_profileGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_profileCountArgs<ExtArgs>
            result: $Utils.Optional<User_profileCountAggregateOutputType> | number
          }
        }
      }
      user_security: {
        payload: Prisma.$user_securityPayload<ExtArgs>
        fields: Prisma.user_securityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_securityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_securityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          findFirst: {
            args: Prisma.user_securityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_securityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          findMany: {
            args: Prisma.user_securityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>[]
          }
          create: {
            args: Prisma.user_securityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          createMany: {
            args: Prisma.user_securityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_securityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>[]
          }
          delete: {
            args: Prisma.user_securityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          update: {
            args: Prisma.user_securityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          deleteMany: {
            args: Prisma.user_securityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_securityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_securityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>[]
          }
          upsert: {
            args: Prisma.user_securityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_securityPayload>
          }
          aggregate: {
            args: Prisma.User_securityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_security>
          }
          groupBy: {
            args: Prisma.user_securityGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_securityGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_securityCountArgs<ExtArgs>
            result: $Utils.Optional<User_securityCountAggregateOutputType> | number
          }
        }
      }
      user_sessions: {
        payload: Prisma.$user_sessionsPayload<ExtArgs>
        fields: Prisma.user_sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          findFirst: {
            args: Prisma.user_sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          findMany: {
            args: Prisma.user_sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          create: {
            args: Prisma.user_sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          createMany: {
            args: Prisma.user_sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          delete: {
            args: Prisma.user_sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          update: {
            args: Prisma.user_sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          deleteMany: {
            args: Prisma.user_sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          upsert: {
            args: Prisma.user_sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          aggregate: {
            args: Prisma.User_sessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_sessions>
          }
          groupBy: {
            args: Prisma.user_sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_sessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<User_sessionsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    favorites?: favoritesOmit
    items?: itemsOmit
    monetization?: monetizationOmit
    pay_per_view_access?: pay_per_view_accessOmit
    reviews?: reviewsOmit
    transactions?: transactionsOmit
    password_reset_tokens?: password_reset_tokensOmit
    user_analytics?: user_analyticsOmit
    user_audit_logs?: user_audit_logsOmit
    user_blocklist?: user_blocklistOmit
    user_certificates?: user_certificatesOmit
    user_profile?: user_profileOmit
    user_security?: user_securityOmit
    user_sessions?: user_sessionsOmit
    users?: usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ItemsCountOutputType
   */

  export type ItemsCountOutputType = {
    favorites: number
    monetization: number
    pay_per_view_access: number
    reviews: number
    transactions: number
  }

  export type ItemsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favorites?: boolean | ItemsCountOutputTypeCountFavoritesArgs
    monetization?: boolean | ItemsCountOutputTypeCountMonetizationArgs
    pay_per_view_access?: boolean | ItemsCountOutputTypeCountPay_per_view_accessArgs
    reviews?: boolean | ItemsCountOutputTypeCountReviewsArgs
    transactions?: boolean | ItemsCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemsCountOutputType
     */
    select?: ItemsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritesWhereInput
  }

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountMonetizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monetizationWhereInput
  }

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountPay_per_view_accessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pay_per_view_accessWhereInput
  }

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
  }

  /**
   * ItemsCountOutputType without action
   */
  export type ItemsCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    favorites: number
    items: number
    pay_per_view_access: number
    reviews: number
    transactions: number
    password_reset_tokens: number
    user_audit_logs: number
    user_blocklist_user_blocklist_blocked_byTousers: number
    user_sessions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favorites?: boolean | UsersCountOutputTypeCountFavoritesArgs
    items?: boolean | UsersCountOutputTypeCountItemsArgs
    pay_per_view_access?: boolean | UsersCountOutputTypeCountPay_per_view_accessArgs
    reviews?: boolean | UsersCountOutputTypeCountReviewsArgs
    transactions?: boolean | UsersCountOutputTypeCountTransactionsArgs
    password_reset_tokens?: boolean | UsersCountOutputTypeCountPassword_reset_tokensArgs
    user_audit_logs?: boolean | UsersCountOutputTypeCountUser_audit_logsArgs
    user_blocklist_user_blocklist_blocked_byTousers?: boolean | UsersCountOutputTypeCountUser_blocklist_user_blocklist_blocked_byTousersArgs
    user_sessions?: boolean | UsersCountOutputTypeCountUser_sessionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: itemsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPay_per_view_accessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pay_per_view_accessWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPassword_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_audit_logsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_blocklistWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sessionsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model favorites
   */

  export type AggregateFavorites = {
    _count: FavoritesCountAggregateOutputType | null
    _min: FavoritesMinAggregateOutputType | null
    _max: FavoritesMaxAggregateOutputType | null
  }

  export type FavoritesMinAggregateOutputType = {
    favorite_id: string | null
    user_id: string | null
    item_id: string | null
    created_at: Date | null
  }

  export type FavoritesMaxAggregateOutputType = {
    favorite_id: string | null
    user_id: string | null
    item_id: string | null
    created_at: Date | null
  }

  export type FavoritesCountAggregateOutputType = {
    favorite_id: number
    user_id: number
    item_id: number
    created_at: number
    _all: number
  }


  export type FavoritesMinAggregateInputType = {
    favorite_id?: true
    user_id?: true
    item_id?: true
    created_at?: true
  }

  export type FavoritesMaxAggregateInputType = {
    favorite_id?: true
    user_id?: true
    item_id?: true
    created_at?: true
  }

  export type FavoritesCountAggregateInputType = {
    favorite_id?: true
    user_id?: true
    item_id?: true
    created_at?: true
    _all?: true
  }

  export type FavoritesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favorites to aggregate.
     */
    where?: favoritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favorites to fetch.
     */
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: favoritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned favorites
    **/
    _count?: true | FavoritesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritesMaxAggregateInputType
  }

  export type GetFavoritesAggregateType<T extends FavoritesAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorites]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorites[P]>
      : GetScalarType<T[P], AggregateFavorites[P]>
  }




  export type favoritesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: favoritesWhereInput
    orderBy?: favoritesOrderByWithAggregationInput | favoritesOrderByWithAggregationInput[]
    by: FavoritesScalarFieldEnum[] | FavoritesScalarFieldEnum
    having?: favoritesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritesCountAggregateInputType | true
    _min?: FavoritesMinAggregateInputType
    _max?: FavoritesMaxAggregateInputType
  }

  export type FavoritesGroupByOutputType = {
    favorite_id: string
    user_id: string
    item_id: string
    created_at: Date | null
    _count: FavoritesCountAggregateOutputType | null
    _min: FavoritesMinAggregateOutputType | null
    _max: FavoritesMaxAggregateOutputType | null
  }

  type GetFavoritesGroupByPayload<T extends favoritesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritesGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritesGroupByOutputType[P]>
        }
      >
    >


  export type favoritesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    favorite_id?: boolean
    user_id?: boolean
    item_id?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorites"]>

  export type favoritesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    favorite_id?: boolean
    user_id?: boolean
    item_id?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorites"]>

  export type favoritesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    favorite_id?: boolean
    user_id?: boolean
    item_id?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorites"]>

  export type favoritesSelectScalar = {
    favorite_id?: boolean
    user_id?: boolean
    item_id?: boolean
    created_at?: boolean
  }

  export type favoritesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"favorite_id" | "user_id" | "item_id" | "created_at", ExtArgs["result"]["favorites"]>
  export type favoritesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type favoritesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type favoritesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $favoritesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "favorites"
    objects: {
      items: Prisma.$itemsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      favorite_id: string
      user_id: string
      item_id: string
      created_at: Date | null
    }, ExtArgs["result"]["favorites"]>
    composites: {}
  }

  type favoritesGetPayload<S extends boolean | null | undefined | favoritesDefaultArgs> = $Result.GetResult<Prisma.$favoritesPayload, S>

  type favoritesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<favoritesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoritesCountAggregateInputType | true
    }

  export interface favoritesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['favorites'], meta: { name: 'favorites' } }
    /**
     * Find zero or one Favorites that matches the filter.
     * @param {favoritesFindUniqueArgs} args - Arguments to find a Favorites
     * @example
     * // Get one Favorites
     * const favorites = await prisma.favorites.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends favoritesFindUniqueArgs>(args: SelectSubset<T, favoritesFindUniqueArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favorites that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {favoritesFindUniqueOrThrowArgs} args - Arguments to find a Favorites
     * @example
     * // Get one Favorites
     * const favorites = await prisma.favorites.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends favoritesFindUniqueOrThrowArgs>(args: SelectSubset<T, favoritesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesFindFirstArgs} args - Arguments to find a Favorites
     * @example
     * // Get one Favorites
     * const favorites = await prisma.favorites.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends favoritesFindFirstArgs>(args?: SelectSubset<T, favoritesFindFirstArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorites that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesFindFirstOrThrowArgs} args - Arguments to find a Favorites
     * @example
     * // Get one Favorites
     * const favorites = await prisma.favorites.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends favoritesFindFirstOrThrowArgs>(args?: SelectSubset<T, favoritesFindFirstOrThrowArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorites.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorites.findMany({ take: 10 })
     * 
     * // Only select the `favorite_id`
     * const favoritesWithFavorite_idOnly = await prisma.favorites.findMany({ select: { favorite_id: true } })
     * 
     */
    findMany<T extends favoritesFindManyArgs>(args?: SelectSubset<T, favoritesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favorites.
     * @param {favoritesCreateArgs} args - Arguments to create a Favorites.
     * @example
     * // Create one Favorites
     * const Favorites = await prisma.favorites.create({
     *   data: {
     *     // ... data to create a Favorites
     *   }
     * })
     * 
     */
    create<T extends favoritesCreateArgs>(args: SelectSubset<T, favoritesCreateArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favorites.
     * @param {favoritesCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorites = await prisma.favorites.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends favoritesCreateManyArgs>(args?: SelectSubset<T, favoritesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {favoritesCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorites = await prisma.favorites.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `favorite_id`
     * const favoritesWithFavorite_idOnly = await prisma.favorites.createManyAndReturn({
     *   select: { favorite_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends favoritesCreateManyAndReturnArgs>(args?: SelectSubset<T, favoritesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favorites.
     * @param {favoritesDeleteArgs} args - Arguments to delete one Favorites.
     * @example
     * // Delete one Favorites
     * const Favorites = await prisma.favorites.delete({
     *   where: {
     *     // ... filter to delete one Favorites
     *   }
     * })
     * 
     */
    delete<T extends favoritesDeleteArgs>(args: SelectSubset<T, favoritesDeleteArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favorites.
     * @param {favoritesUpdateArgs} args - Arguments to update one Favorites.
     * @example
     * // Update one Favorites
     * const favorites = await prisma.favorites.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends favoritesUpdateArgs>(args: SelectSubset<T, favoritesUpdateArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favorites.
     * @param {favoritesDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorites.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends favoritesDeleteManyArgs>(args?: SelectSubset<T, favoritesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorites = await prisma.favorites.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends favoritesUpdateManyArgs>(args: SelectSubset<T, favoritesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites and returns the data updated in the database.
     * @param {favoritesUpdateManyAndReturnArgs} args - Arguments to update many Favorites.
     * @example
     * // Update many Favorites
     * const favorites = await prisma.favorites.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favorites and only return the `favorite_id`
     * const favoritesWithFavorite_idOnly = await prisma.favorites.updateManyAndReturn({
     *   select: { favorite_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends favoritesUpdateManyAndReturnArgs>(args: SelectSubset<T, favoritesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favorites.
     * @param {favoritesUpsertArgs} args - Arguments to update or create a Favorites.
     * @example
     * // Update or create a Favorites
     * const favorites = await prisma.favorites.upsert({
     *   create: {
     *     // ... data to create a Favorites
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorites we want to update
     *   }
     * })
     */
    upsert<T extends favoritesUpsertArgs>(args: SelectSubset<T, favoritesUpsertArgs<ExtArgs>>): Prisma__favoritesClient<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorites.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends favoritesCountArgs>(
      args?: Subset<T, favoritesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritesAggregateArgs>(args: Subset<T, FavoritesAggregateArgs>): Prisma.PrismaPromise<GetFavoritesAggregateType<T>>

    /**
     * Group by Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {favoritesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends favoritesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: favoritesGroupByArgs['orderBy'] }
        : { orderBy?: favoritesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, favoritesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the favorites model
   */
  readonly fields: favoritesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for favorites.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__favoritesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemsDefaultArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the favorites model
   */ 
  interface favoritesFieldRefs {
    readonly favorite_id: FieldRef<"favorites", 'String'>
    readonly user_id: FieldRef<"favorites", 'String'>
    readonly item_id: FieldRef<"favorites", 'String'>
    readonly created_at: FieldRef<"favorites", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * favorites findUnique
   */
  export type favoritesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter, which favorites to fetch.
     */
    where: favoritesWhereUniqueInput
  }

  /**
   * favorites findUniqueOrThrow
   */
  export type favoritesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter, which favorites to fetch.
     */
    where: favoritesWhereUniqueInput
  }

  /**
   * favorites findFirst
   */
  export type favoritesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter, which favorites to fetch.
     */
    where?: favoritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favorites to fetch.
     */
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favorites.
     */
    cursor?: favoritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favorites.
     */
    distinct?: FavoritesScalarFieldEnum | FavoritesScalarFieldEnum[]
  }

  /**
   * favorites findFirstOrThrow
   */
  export type favoritesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter, which favorites to fetch.
     */
    where?: favoritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favorites to fetch.
     */
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for favorites.
     */
    cursor?: favoritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of favorites.
     */
    distinct?: FavoritesScalarFieldEnum | FavoritesScalarFieldEnum[]
  }

  /**
   * favorites findMany
   */
  export type favoritesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter, which favorites to fetch.
     */
    where?: favoritesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of favorites to fetch.
     */
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing favorites.
     */
    cursor?: favoritesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` favorites.
     */
    skip?: number
    distinct?: FavoritesScalarFieldEnum | FavoritesScalarFieldEnum[]
  }

  /**
   * favorites create
   */
  export type favoritesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * The data needed to create a favorites.
     */
    data: XOR<favoritesCreateInput, favoritesUncheckedCreateInput>
  }

  /**
   * favorites createMany
   */
  export type favoritesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many favorites.
     */
    data: favoritesCreateManyInput | favoritesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * favorites createManyAndReturn
   */
  export type favoritesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * The data used to create many favorites.
     */
    data: favoritesCreateManyInput | favoritesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * favorites update
   */
  export type favoritesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * The data needed to update a favorites.
     */
    data: XOR<favoritesUpdateInput, favoritesUncheckedUpdateInput>
    /**
     * Choose, which favorites to update.
     */
    where: favoritesWhereUniqueInput
  }

  /**
   * favorites updateMany
   */
  export type favoritesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update favorites.
     */
    data: XOR<favoritesUpdateManyMutationInput, favoritesUncheckedUpdateManyInput>
    /**
     * Filter which favorites to update
     */
    where?: favoritesWhereInput
    /**
     * Limit how many favorites to update.
     */
    limit?: number
  }

  /**
   * favorites updateManyAndReturn
   */
  export type favoritesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * The data used to update favorites.
     */
    data: XOR<favoritesUpdateManyMutationInput, favoritesUncheckedUpdateManyInput>
    /**
     * Filter which favorites to update
     */
    where?: favoritesWhereInput
    /**
     * Limit how many favorites to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * favorites upsert
   */
  export type favoritesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * The filter to search for the favorites to update in case it exists.
     */
    where: favoritesWhereUniqueInput
    /**
     * In case the favorites found by the `where` argument doesn't exist, create a new favorites with this data.
     */
    create: XOR<favoritesCreateInput, favoritesUncheckedCreateInput>
    /**
     * In case the favorites was found with the provided `where` argument, update it with this data.
     */
    update: XOR<favoritesUpdateInput, favoritesUncheckedUpdateInput>
  }

  /**
   * favorites delete
   */
  export type favoritesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    /**
     * Filter which favorites to delete.
     */
    where: favoritesWhereUniqueInput
  }

  /**
   * favorites deleteMany
   */
  export type favoritesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which favorites to delete
     */
    where?: favoritesWhereInput
    /**
     * Limit how many favorites to delete.
     */
    limit?: number
  }

  /**
   * favorites without action
   */
  export type favoritesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
  }


  /**
   * Model items
   */

  export type AggregateItems = {
    _count: ItemsCountAggregateOutputType | null
    _avg: ItemsAvgAggregateOutputType | null
    _sum: ItemsSumAggregateOutputType | null
    _min: ItemsMinAggregateOutputType | null
    _max: ItemsMaxAggregateOutputType | null
  }

  export type ItemsAvgAggregateOutputType = {
    price: Decimal | null
  }

  export type ItemsSumAggregateOutputType = {
    price: Decimal | null
  }

  export type ItemsMinAggregateOutputType = {
    item_id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    media_url: string | null
    category: string | null
    price: Decimal | null
    monetization_type: string | null
    availability: boolean | null
    created_at: Date | null
  }

  export type ItemsMaxAggregateOutputType = {
    item_id: string | null
    user_id: string | null
    title: string | null
    description: string | null
    media_url: string | null
    category: string | null
    price: Decimal | null
    monetization_type: string | null
    availability: boolean | null
    created_at: Date | null
  }

  export type ItemsCountAggregateOutputType = {
    item_id: number
    user_id: number
    title: number
    description: number
    media_url: number
    category: number
    price: number
    monetization_type: number
    availability: number
    created_at: number
    _all: number
  }


  export type ItemsAvgAggregateInputType = {
    price?: true
  }

  export type ItemsSumAggregateInputType = {
    price?: true
  }

  export type ItemsMinAggregateInputType = {
    item_id?: true
    user_id?: true
    title?: true
    description?: true
    media_url?: true
    category?: true
    price?: true
    monetization_type?: true
    availability?: true
    created_at?: true
  }

  export type ItemsMaxAggregateInputType = {
    item_id?: true
    user_id?: true
    title?: true
    description?: true
    media_url?: true
    category?: true
    price?: true
    monetization_type?: true
    availability?: true
    created_at?: true
  }

  export type ItemsCountAggregateInputType = {
    item_id?: true
    user_id?: true
    title?: true
    description?: true
    media_url?: true
    category?: true
    price?: true
    monetization_type?: true
    availability?: true
    created_at?: true
    _all?: true
  }

  export type ItemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which items to aggregate.
     */
    where?: itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemsOrderByWithRelationInput | itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned items
    **/
    _count?: true | ItemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemsMaxAggregateInputType
  }

  export type GetItemsAggregateType<T extends ItemsAggregateArgs> = {
        [P in keyof T & keyof AggregateItems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItems[P]>
      : GetScalarType<T[P], AggregateItems[P]>
  }




  export type itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: itemsWhereInput
    orderBy?: itemsOrderByWithAggregationInput | itemsOrderByWithAggregationInput[]
    by: ItemsScalarFieldEnum[] | ItemsScalarFieldEnum
    having?: itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemsCountAggregateInputType | true
    _avg?: ItemsAvgAggregateInputType
    _sum?: ItemsSumAggregateInputType
    _min?: ItemsMinAggregateInputType
    _max?: ItemsMaxAggregateInputType
  }

  export type ItemsGroupByOutputType = {
    item_id: string
    user_id: string
    title: string
    description: string | null
    media_url: string | null
    category: string | null
    price: Decimal | null
    monetization_type: string | null
    availability: boolean | null
    created_at: Date | null
    _count: ItemsCountAggregateOutputType | null
    _avg: ItemsAvgAggregateOutputType | null
    _sum: ItemsSumAggregateOutputType | null
    _min: ItemsMinAggregateOutputType | null
    _max: ItemsMaxAggregateOutputType | null
  }

  type GetItemsGroupByPayload<T extends itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemsGroupByOutputType[P]>
            : GetScalarType<T[P], ItemsGroupByOutputType[P]>
        }
      >
    >


  export type itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    item_id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    media_url?: boolean
    category?: boolean
    price?: boolean
    monetization_type?: boolean
    availability?: boolean
    created_at?: boolean
    favorites?: boolean | items$favoritesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    monetization?: boolean | items$monetizationArgs<ExtArgs>
    pay_per_view_access?: boolean | items$pay_per_view_accessArgs<ExtArgs>
    reviews?: boolean | items$reviewsArgs<ExtArgs>
    transactions?: boolean | items$transactionsArgs<ExtArgs>
    _count?: boolean | ItemsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["items"]>

  export type itemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    item_id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    media_url?: boolean
    category?: boolean
    price?: boolean
    monetization_type?: boolean
    availability?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["items"]>

  export type itemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    item_id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    media_url?: boolean
    category?: boolean
    price?: boolean
    monetization_type?: boolean
    availability?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["items"]>

  export type itemsSelectScalar = {
    item_id?: boolean
    user_id?: boolean
    title?: boolean
    description?: boolean
    media_url?: boolean
    category?: boolean
    price?: boolean
    monetization_type?: boolean
    availability?: boolean
    created_at?: boolean
  }

  export type itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"item_id" | "user_id" | "title" | "description" | "media_url" | "category" | "price" | "monetization_type" | "availability" | "created_at", ExtArgs["result"]["items"]>
  export type itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favorites?: boolean | items$favoritesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    monetization?: boolean | items$monetizationArgs<ExtArgs>
    pay_per_view_access?: boolean | items$pay_per_view_accessArgs<ExtArgs>
    reviews?: boolean | items$reviewsArgs<ExtArgs>
    transactions?: boolean | items$transactionsArgs<ExtArgs>
    _count?: boolean | ItemsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type itemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type itemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "items"
    objects: {
      favorites: Prisma.$favoritesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
      monetization: Prisma.$monetizationPayload<ExtArgs>[]
      pay_per_view_access: Prisma.$pay_per_view_accessPayload<ExtArgs>[]
      reviews: Prisma.$reviewsPayload<ExtArgs>[]
      transactions: Prisma.$transactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      item_id: string
      user_id: string
      title: string
      description: string | null
      media_url: string | null
      category: string | null
      price: Prisma.Decimal | null
      monetization_type: string | null
      availability: boolean | null
      created_at: Date | null
    }, ExtArgs["result"]["items"]>
    composites: {}
  }

  type itemsGetPayload<S extends boolean | null | undefined | itemsDefaultArgs> = $Result.GetResult<Prisma.$itemsPayload, S>

  type itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemsCountAggregateInputType | true
    }

  export interface itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['items'], meta: { name: 'items' } }
    /**
     * Find zero or one Items that matches the filter.
     * @param {itemsFindUniqueArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends itemsFindUniqueArgs>(args: SelectSubset<T, itemsFindUniqueArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {itemsFindUniqueOrThrowArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsFindFirstArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends itemsFindFirstArgs>(args?: SelectSubset<T, itemsFindFirstArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsFindFirstOrThrowArgs} args - Arguments to find a Items
     * @example
     * // Get one Items
     * const items = await prisma.items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.items.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.items.findMany({ take: 10 })
     * 
     * // Only select the `item_id`
     * const itemsWithItem_idOnly = await prisma.items.findMany({ select: { item_id: true } })
     * 
     */
    findMany<T extends itemsFindManyArgs>(args?: SelectSubset<T, itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Items.
     * @param {itemsCreateArgs} args - Arguments to create a Items.
     * @example
     * // Create one Items
     * const Items = await prisma.items.create({
     *   data: {
     *     // ... data to create a Items
     *   }
     * })
     * 
     */
    create<T extends itemsCreateArgs>(args: SelectSubset<T, itemsCreateArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Items.
     * @param {itemsCreateManyArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const items = await prisma.items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends itemsCreateManyArgs>(args?: SelectSubset<T, itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Items and returns the data saved in the database.
     * @param {itemsCreateManyAndReturnArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const items = await prisma.items.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Items and only return the `item_id`
     * const itemsWithItem_idOnly = await prisma.items.createManyAndReturn({
     *   select: { item_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends itemsCreateManyAndReturnArgs>(args?: SelectSubset<T, itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Items.
     * @param {itemsDeleteArgs} args - Arguments to delete one Items.
     * @example
     * // Delete one Items
     * const Items = await prisma.items.delete({
     *   where: {
     *     // ... filter to delete one Items
     *   }
     * })
     * 
     */
    delete<T extends itemsDeleteArgs>(args: SelectSubset<T, itemsDeleteArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Items.
     * @param {itemsUpdateArgs} args - Arguments to update one Items.
     * @example
     * // Update one Items
     * const items = await prisma.items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends itemsUpdateArgs>(args: SelectSubset<T, itemsUpdateArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Items.
     * @param {itemsDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends itemsDeleteManyArgs>(args?: SelectSubset<T, itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const items = await prisma.items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends itemsUpdateManyArgs>(args: SelectSubset<T, itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items and returns the data updated in the database.
     * @param {itemsUpdateManyAndReturnArgs} args - Arguments to update many Items.
     * @example
     * // Update many Items
     * const items = await prisma.items.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Items and only return the `item_id`
     * const itemsWithItem_idOnly = await prisma.items.updateManyAndReturn({
     *   select: { item_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends itemsUpdateManyAndReturnArgs>(args: SelectSubset<T, itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Items.
     * @param {itemsUpsertArgs} args - Arguments to update or create a Items.
     * @example
     * // Update or create a Items
     * const items = await prisma.items.upsert({
     *   create: {
     *     // ... data to create a Items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Items we want to update
     *   }
     * })
     */
    upsert<T extends itemsUpsertArgs>(args: SelectSubset<T, itemsUpsertArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.items.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends itemsCountArgs>(
      args?: Subset<T, itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemsAggregateArgs>(args: Subset<T, ItemsAggregateArgs>): Prisma.PrismaPromise<GetItemsAggregateType<T>>

    /**
     * Group by Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: itemsGroupByArgs['orderBy'] }
        : { orderBy?: itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the items model
   */
  readonly fields: itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    favorites<T extends items$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, items$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    monetization<T extends items$monetizationArgs<ExtArgs> = {}>(args?: Subset<T, items$monetizationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pay_per_view_access<T extends items$pay_per_view_accessArgs<ExtArgs> = {}>(args?: Subset<T, items$pay_per_view_accessArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends items$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, items$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactions<T extends items$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, items$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the items model
   */ 
  interface itemsFieldRefs {
    readonly item_id: FieldRef<"items", 'String'>
    readonly user_id: FieldRef<"items", 'String'>
    readonly title: FieldRef<"items", 'String'>
    readonly description: FieldRef<"items", 'String'>
    readonly media_url: FieldRef<"items", 'String'>
    readonly category: FieldRef<"items", 'String'>
    readonly price: FieldRef<"items", 'Decimal'>
    readonly monetization_type: FieldRef<"items", 'String'>
    readonly availability: FieldRef<"items", 'Boolean'>
    readonly created_at: FieldRef<"items", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * items findUnique
   */
  export type itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where: itemsWhereUniqueInput
  }

  /**
   * items findUniqueOrThrow
   */
  export type itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where: itemsWhereUniqueInput
  }

  /**
   * items findFirst
   */
  export type itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where?: itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemsOrderByWithRelationInput | itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for items.
     */
    cursor?: itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of items.
     */
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }

  /**
   * items findFirstOrThrow
   */
  export type itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where?: itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemsOrderByWithRelationInput | itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for items.
     */
    cursor?: itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of items.
     */
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }

  /**
   * items findMany
   */
  export type itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where?: itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemsOrderByWithRelationInput | itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing items.
     */
    cursor?: itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }

  /**
   * items create
   */
  export type itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a items.
     */
    data: XOR<itemsCreateInput, itemsUncheckedCreateInput>
  }

  /**
   * items createMany
   */
  export type itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many items.
     */
    data: itemsCreateManyInput | itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * items createManyAndReturn
   */
  export type itemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * The data used to create many items.
     */
    data: itemsCreateManyInput | itemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * items update
   */
  export type itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a items.
     */
    data: XOR<itemsUpdateInput, itemsUncheckedUpdateInput>
    /**
     * Choose, which items to update.
     */
    where: itemsWhereUniqueInput
  }

  /**
   * items updateMany
   */
  export type itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update items.
     */
    data: XOR<itemsUpdateManyMutationInput, itemsUncheckedUpdateManyInput>
    /**
     * Filter which items to update
     */
    where?: itemsWhereInput
    /**
     * Limit how many items to update.
     */
    limit?: number
  }

  /**
   * items updateManyAndReturn
   */
  export type itemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * The data used to update items.
     */
    data: XOR<itemsUpdateManyMutationInput, itemsUncheckedUpdateManyInput>
    /**
     * Filter which items to update
     */
    where?: itemsWhereInput
    /**
     * Limit how many items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * items upsert
   */
  export type itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the items to update in case it exists.
     */
    where: itemsWhereUniqueInput
    /**
     * In case the items found by the `where` argument doesn't exist, create a new items with this data.
     */
    create: XOR<itemsCreateInput, itemsUncheckedCreateInput>
    /**
     * In case the items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<itemsUpdateInput, itemsUncheckedUpdateInput>
  }

  /**
   * items delete
   */
  export type itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    /**
     * Filter which items to delete.
     */
    where: itemsWhereUniqueInput
  }

  /**
   * items deleteMany
   */
  export type itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which items to delete
     */
    where?: itemsWhereInput
    /**
     * Limit how many items to delete.
     */
    limit?: number
  }

  /**
   * items.favorites
   */
  export type items$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    where?: favoritesWhereInput
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    cursor?: favoritesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritesScalarFieldEnum | FavoritesScalarFieldEnum[]
  }

  /**
   * items.monetization
   */
  export type items$monetizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    where?: monetizationWhereInput
    orderBy?: monetizationOrderByWithRelationInput | monetizationOrderByWithRelationInput[]
    cursor?: monetizationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MonetizationScalarFieldEnum | MonetizationScalarFieldEnum[]
  }

  /**
   * items.pay_per_view_access
   */
  export type items$pay_per_view_accessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    where?: pay_per_view_accessWhereInput
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    cursor?: pay_per_view_accessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pay_per_view_accessScalarFieldEnum | Pay_per_view_accessScalarFieldEnum[]
  }

  /**
   * items.reviews
   */
  export type items$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    cursor?: reviewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * items.transactions
   */
  export type items$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    cursor?: transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * items without action
   */
  export type itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
  }


  /**
   * Model monetization
   */

  export type AggregateMonetization = {
    _count: MonetizationCountAggregateOutputType | null
    _avg: MonetizationAvgAggregateOutputType | null
    _sum: MonetizationSumAggregateOutputType | null
    _min: MonetizationMinAggregateOutputType | null
    _max: MonetizationMaxAggregateOutputType | null
  }

  export type MonetizationAvgAggregateOutputType = {
    price: Decimal | null
  }

  export type MonetizationSumAggregateOutputType = {
    price: Decimal | null
  }

  export type MonetizationMinAggregateOutputType = {
    monetization_id: string | null
    item_id: string | null
    type: string | null
    price: Decimal | null
    currency: string | null
    created_at: Date | null
  }

  export type MonetizationMaxAggregateOutputType = {
    monetization_id: string | null
    item_id: string | null
    type: string | null
    price: Decimal | null
    currency: string | null
    created_at: Date | null
  }

  export type MonetizationCountAggregateOutputType = {
    monetization_id: number
    item_id: number
    type: number
    price: number
    currency: number
    created_at: number
    _all: number
  }


  export type MonetizationAvgAggregateInputType = {
    price?: true
  }

  export type MonetizationSumAggregateInputType = {
    price?: true
  }

  export type MonetizationMinAggregateInputType = {
    monetization_id?: true
    item_id?: true
    type?: true
    price?: true
    currency?: true
    created_at?: true
  }

  export type MonetizationMaxAggregateInputType = {
    monetization_id?: true
    item_id?: true
    type?: true
    price?: true
    currency?: true
    created_at?: true
  }

  export type MonetizationCountAggregateInputType = {
    monetization_id?: true
    item_id?: true
    type?: true
    price?: true
    currency?: true
    created_at?: true
    _all?: true
  }

  export type MonetizationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which monetization to aggregate.
     */
    where?: monetizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monetizations to fetch.
     */
    orderBy?: monetizationOrderByWithRelationInput | monetizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: monetizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monetizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monetizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned monetizations
    **/
    _count?: true | MonetizationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MonetizationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MonetizationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MonetizationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MonetizationMaxAggregateInputType
  }

  export type GetMonetizationAggregateType<T extends MonetizationAggregateArgs> = {
        [P in keyof T & keyof AggregateMonetization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMonetization[P]>
      : GetScalarType<T[P], AggregateMonetization[P]>
  }




  export type monetizationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: monetizationWhereInput
    orderBy?: monetizationOrderByWithAggregationInput | monetizationOrderByWithAggregationInput[]
    by: MonetizationScalarFieldEnum[] | MonetizationScalarFieldEnum
    having?: monetizationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MonetizationCountAggregateInputType | true
    _avg?: MonetizationAvgAggregateInputType
    _sum?: MonetizationSumAggregateInputType
    _min?: MonetizationMinAggregateInputType
    _max?: MonetizationMaxAggregateInputType
  }

  export type MonetizationGroupByOutputType = {
    monetization_id: string
    item_id: string
    type: string | null
    price: Decimal | null
    currency: string | null
    created_at: Date | null
    _count: MonetizationCountAggregateOutputType | null
    _avg: MonetizationAvgAggregateOutputType | null
    _sum: MonetizationSumAggregateOutputType | null
    _min: MonetizationMinAggregateOutputType | null
    _max: MonetizationMaxAggregateOutputType | null
  }

  type GetMonetizationGroupByPayload<T extends monetizationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MonetizationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MonetizationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MonetizationGroupByOutputType[P]>
            : GetScalarType<T[P], MonetizationGroupByOutputType[P]>
        }
      >
    >


  export type monetizationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monetization_id?: boolean
    item_id?: boolean
    type?: boolean
    price?: boolean
    currency?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["monetization"]>

  export type monetizationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monetization_id?: boolean
    item_id?: boolean
    type?: boolean
    price?: boolean
    currency?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["monetization"]>

  export type monetizationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monetization_id?: boolean
    item_id?: boolean
    type?: boolean
    price?: boolean
    currency?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["monetization"]>

  export type monetizationSelectScalar = {
    monetization_id?: boolean
    item_id?: boolean
    type?: boolean
    price?: boolean
    currency?: boolean
    created_at?: boolean
  }

  export type monetizationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"monetization_id" | "item_id" | "type" | "price" | "currency" | "created_at", ExtArgs["result"]["monetization"]>
  export type monetizationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }
  export type monetizationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }
  export type monetizationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }

  export type $monetizationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "monetization"
    objects: {
      items: Prisma.$itemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      monetization_id: string
      item_id: string
      type: string | null
      price: Prisma.Decimal | null
      currency: string | null
      created_at: Date | null
    }, ExtArgs["result"]["monetization"]>
    composites: {}
  }

  type monetizationGetPayload<S extends boolean | null | undefined | monetizationDefaultArgs> = $Result.GetResult<Prisma.$monetizationPayload, S>

  type monetizationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<monetizationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MonetizationCountAggregateInputType | true
    }

  export interface monetizationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['monetization'], meta: { name: 'monetization' } }
    /**
     * Find zero or one Monetization that matches the filter.
     * @param {monetizationFindUniqueArgs} args - Arguments to find a Monetization
     * @example
     * // Get one Monetization
     * const monetization = await prisma.monetization.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends monetizationFindUniqueArgs>(args: SelectSubset<T, monetizationFindUniqueArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Monetization that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {monetizationFindUniqueOrThrowArgs} args - Arguments to find a Monetization
     * @example
     * // Get one Monetization
     * const monetization = await prisma.monetization.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends monetizationFindUniqueOrThrowArgs>(args: SelectSubset<T, monetizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Monetization that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationFindFirstArgs} args - Arguments to find a Monetization
     * @example
     * // Get one Monetization
     * const monetization = await prisma.monetization.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends monetizationFindFirstArgs>(args?: SelectSubset<T, monetizationFindFirstArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Monetization that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationFindFirstOrThrowArgs} args - Arguments to find a Monetization
     * @example
     * // Get one Monetization
     * const monetization = await prisma.monetization.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends monetizationFindFirstOrThrowArgs>(args?: SelectSubset<T, monetizationFindFirstOrThrowArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Monetizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Monetizations
     * const monetizations = await prisma.monetization.findMany()
     * 
     * // Get first 10 Monetizations
     * const monetizations = await prisma.monetization.findMany({ take: 10 })
     * 
     * // Only select the `monetization_id`
     * const monetizationWithMonetization_idOnly = await prisma.monetization.findMany({ select: { monetization_id: true } })
     * 
     */
    findMany<T extends monetizationFindManyArgs>(args?: SelectSubset<T, monetizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Monetization.
     * @param {monetizationCreateArgs} args - Arguments to create a Monetization.
     * @example
     * // Create one Monetization
     * const Monetization = await prisma.monetization.create({
     *   data: {
     *     // ... data to create a Monetization
     *   }
     * })
     * 
     */
    create<T extends monetizationCreateArgs>(args: SelectSubset<T, monetizationCreateArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Monetizations.
     * @param {monetizationCreateManyArgs} args - Arguments to create many Monetizations.
     * @example
     * // Create many Monetizations
     * const monetization = await prisma.monetization.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends monetizationCreateManyArgs>(args?: SelectSubset<T, monetizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Monetizations and returns the data saved in the database.
     * @param {monetizationCreateManyAndReturnArgs} args - Arguments to create many Monetizations.
     * @example
     * // Create many Monetizations
     * const monetization = await prisma.monetization.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Monetizations and only return the `monetization_id`
     * const monetizationWithMonetization_idOnly = await prisma.monetization.createManyAndReturn({
     *   select: { monetization_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends monetizationCreateManyAndReturnArgs>(args?: SelectSubset<T, monetizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Monetization.
     * @param {monetizationDeleteArgs} args - Arguments to delete one Monetization.
     * @example
     * // Delete one Monetization
     * const Monetization = await prisma.monetization.delete({
     *   where: {
     *     // ... filter to delete one Monetization
     *   }
     * })
     * 
     */
    delete<T extends monetizationDeleteArgs>(args: SelectSubset<T, monetizationDeleteArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Monetization.
     * @param {monetizationUpdateArgs} args - Arguments to update one Monetization.
     * @example
     * // Update one Monetization
     * const monetization = await prisma.monetization.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends monetizationUpdateArgs>(args: SelectSubset<T, monetizationUpdateArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Monetizations.
     * @param {monetizationDeleteManyArgs} args - Arguments to filter Monetizations to delete.
     * @example
     * // Delete a few Monetizations
     * const { count } = await prisma.monetization.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends monetizationDeleteManyArgs>(args?: SelectSubset<T, monetizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Monetizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Monetizations
     * const monetization = await prisma.monetization.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends monetizationUpdateManyArgs>(args: SelectSubset<T, monetizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Monetizations and returns the data updated in the database.
     * @param {monetizationUpdateManyAndReturnArgs} args - Arguments to update many Monetizations.
     * @example
     * // Update many Monetizations
     * const monetization = await prisma.monetization.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Monetizations and only return the `monetization_id`
     * const monetizationWithMonetization_idOnly = await prisma.monetization.updateManyAndReturn({
     *   select: { monetization_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends monetizationUpdateManyAndReturnArgs>(args: SelectSubset<T, monetizationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Monetization.
     * @param {monetizationUpsertArgs} args - Arguments to update or create a Monetization.
     * @example
     * // Update or create a Monetization
     * const monetization = await prisma.monetization.upsert({
     *   create: {
     *     // ... data to create a Monetization
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Monetization we want to update
     *   }
     * })
     */
    upsert<T extends monetizationUpsertArgs>(args: SelectSubset<T, monetizationUpsertArgs<ExtArgs>>): Prisma__monetizationClient<$Result.GetResult<Prisma.$monetizationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Monetizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationCountArgs} args - Arguments to filter Monetizations to count.
     * @example
     * // Count the number of Monetizations
     * const count = await prisma.monetization.count({
     *   where: {
     *     // ... the filter for the Monetizations we want to count
     *   }
     * })
    **/
    count<T extends monetizationCountArgs>(
      args?: Subset<T, monetizationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MonetizationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Monetization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonetizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MonetizationAggregateArgs>(args: Subset<T, MonetizationAggregateArgs>): Prisma.PrismaPromise<GetMonetizationAggregateType<T>>

    /**
     * Group by Monetization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {monetizationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends monetizationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: monetizationGroupByArgs['orderBy'] }
        : { orderBy?: monetizationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, monetizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMonetizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the monetization model
   */
  readonly fields: monetizationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for monetization.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__monetizationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemsDefaultArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the monetization model
   */ 
  interface monetizationFieldRefs {
    readonly monetization_id: FieldRef<"monetization", 'String'>
    readonly item_id: FieldRef<"monetization", 'String'>
    readonly type: FieldRef<"monetization", 'String'>
    readonly price: FieldRef<"monetization", 'Decimal'>
    readonly currency: FieldRef<"monetization", 'String'>
    readonly created_at: FieldRef<"monetization", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * monetization findUnique
   */
  export type monetizationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter, which monetization to fetch.
     */
    where: monetizationWhereUniqueInput
  }

  /**
   * monetization findUniqueOrThrow
   */
  export type monetizationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter, which monetization to fetch.
     */
    where: monetizationWhereUniqueInput
  }

  /**
   * monetization findFirst
   */
  export type monetizationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter, which monetization to fetch.
     */
    where?: monetizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monetizations to fetch.
     */
    orderBy?: monetizationOrderByWithRelationInput | monetizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for monetizations.
     */
    cursor?: monetizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monetizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monetizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of monetizations.
     */
    distinct?: MonetizationScalarFieldEnum | MonetizationScalarFieldEnum[]
  }

  /**
   * monetization findFirstOrThrow
   */
  export type monetizationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter, which monetization to fetch.
     */
    where?: monetizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monetizations to fetch.
     */
    orderBy?: monetizationOrderByWithRelationInput | monetizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for monetizations.
     */
    cursor?: monetizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monetizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monetizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of monetizations.
     */
    distinct?: MonetizationScalarFieldEnum | MonetizationScalarFieldEnum[]
  }

  /**
   * monetization findMany
   */
  export type monetizationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter, which monetizations to fetch.
     */
    where?: monetizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of monetizations to fetch.
     */
    orderBy?: monetizationOrderByWithRelationInput | monetizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing monetizations.
     */
    cursor?: monetizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` monetizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` monetizations.
     */
    skip?: number
    distinct?: MonetizationScalarFieldEnum | MonetizationScalarFieldEnum[]
  }

  /**
   * monetization create
   */
  export type monetizationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * The data needed to create a monetization.
     */
    data: XOR<monetizationCreateInput, monetizationUncheckedCreateInput>
  }

  /**
   * monetization createMany
   */
  export type monetizationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many monetizations.
     */
    data: monetizationCreateManyInput | monetizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * monetization createManyAndReturn
   */
  export type monetizationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * The data used to create many monetizations.
     */
    data: monetizationCreateManyInput | monetizationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * monetization update
   */
  export type monetizationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * The data needed to update a monetization.
     */
    data: XOR<monetizationUpdateInput, monetizationUncheckedUpdateInput>
    /**
     * Choose, which monetization to update.
     */
    where: monetizationWhereUniqueInput
  }

  /**
   * monetization updateMany
   */
  export type monetizationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update monetizations.
     */
    data: XOR<monetizationUpdateManyMutationInput, monetizationUncheckedUpdateManyInput>
    /**
     * Filter which monetizations to update
     */
    where?: monetizationWhereInput
    /**
     * Limit how many monetizations to update.
     */
    limit?: number
  }

  /**
   * monetization updateManyAndReturn
   */
  export type monetizationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * The data used to update monetizations.
     */
    data: XOR<monetizationUpdateManyMutationInput, monetizationUncheckedUpdateManyInput>
    /**
     * Filter which monetizations to update
     */
    where?: monetizationWhereInput
    /**
     * Limit how many monetizations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * monetization upsert
   */
  export type monetizationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * The filter to search for the monetization to update in case it exists.
     */
    where: monetizationWhereUniqueInput
    /**
     * In case the monetization found by the `where` argument doesn't exist, create a new monetization with this data.
     */
    create: XOR<monetizationCreateInput, monetizationUncheckedCreateInput>
    /**
     * In case the monetization was found with the provided `where` argument, update it with this data.
     */
    update: XOR<monetizationUpdateInput, monetizationUncheckedUpdateInput>
  }

  /**
   * monetization delete
   */
  export type monetizationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
    /**
     * Filter which monetization to delete.
     */
    where: monetizationWhereUniqueInput
  }

  /**
   * monetization deleteMany
   */
  export type monetizationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which monetizations to delete
     */
    where?: monetizationWhereInput
    /**
     * Limit how many monetizations to delete.
     */
    limit?: number
  }

  /**
   * monetization without action
   */
  export type monetizationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the monetization
     */
    select?: monetizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the monetization
     */
    omit?: monetizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: monetizationInclude<ExtArgs> | null
  }


  /**
   * Model pay_per_view_access
   */

  export type AggregatePay_per_view_access = {
    _count: Pay_per_view_accessCountAggregateOutputType | null
    _min: Pay_per_view_accessMinAggregateOutputType | null
    _max: Pay_per_view_accessMaxAggregateOutputType | null
  }

  export type Pay_per_view_accessMinAggregateOutputType = {
    access_id: string | null
    user_id: string | null
    item_id: string | null
    access_expiry: Date | null
    created_at: Date | null
  }

  export type Pay_per_view_accessMaxAggregateOutputType = {
    access_id: string | null
    user_id: string | null
    item_id: string | null
    access_expiry: Date | null
    created_at: Date | null
  }

  export type Pay_per_view_accessCountAggregateOutputType = {
    access_id: number
    user_id: number
    item_id: number
    access_expiry: number
    created_at: number
    _all: number
  }


  export type Pay_per_view_accessMinAggregateInputType = {
    access_id?: true
    user_id?: true
    item_id?: true
    access_expiry?: true
    created_at?: true
  }

  export type Pay_per_view_accessMaxAggregateInputType = {
    access_id?: true
    user_id?: true
    item_id?: true
    access_expiry?: true
    created_at?: true
  }

  export type Pay_per_view_accessCountAggregateInputType = {
    access_id?: true
    user_id?: true
    item_id?: true
    access_expiry?: true
    created_at?: true
    _all?: true
  }

  export type Pay_per_view_accessAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pay_per_view_access to aggregate.
     */
    where?: pay_per_view_accessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pay_per_view_accesses to fetch.
     */
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pay_per_view_accessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pay_per_view_accesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pay_per_view_accesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pay_per_view_accesses
    **/
    _count?: true | Pay_per_view_accessCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pay_per_view_accessMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pay_per_view_accessMaxAggregateInputType
  }

  export type GetPay_per_view_accessAggregateType<T extends Pay_per_view_accessAggregateArgs> = {
        [P in keyof T & keyof AggregatePay_per_view_access]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePay_per_view_access[P]>
      : GetScalarType<T[P], AggregatePay_per_view_access[P]>
  }




  export type pay_per_view_accessGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pay_per_view_accessWhereInput
    orderBy?: pay_per_view_accessOrderByWithAggregationInput | pay_per_view_accessOrderByWithAggregationInput[]
    by: Pay_per_view_accessScalarFieldEnum[] | Pay_per_view_accessScalarFieldEnum
    having?: pay_per_view_accessScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pay_per_view_accessCountAggregateInputType | true
    _min?: Pay_per_view_accessMinAggregateInputType
    _max?: Pay_per_view_accessMaxAggregateInputType
  }

  export type Pay_per_view_accessGroupByOutputType = {
    access_id: string
    user_id: string
    item_id: string
    access_expiry: Date
    created_at: Date | null
    _count: Pay_per_view_accessCountAggregateOutputType | null
    _min: Pay_per_view_accessMinAggregateOutputType | null
    _max: Pay_per_view_accessMaxAggregateOutputType | null
  }

  type GetPay_per_view_accessGroupByPayload<T extends pay_per_view_accessGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pay_per_view_accessGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pay_per_view_accessGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pay_per_view_accessGroupByOutputType[P]>
            : GetScalarType<T[P], Pay_per_view_accessGroupByOutputType[P]>
        }
      >
    >


  export type pay_per_view_accessSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    access_id?: boolean
    user_id?: boolean
    item_id?: boolean
    access_expiry?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pay_per_view_access"]>

  export type pay_per_view_accessSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    access_id?: boolean
    user_id?: boolean
    item_id?: boolean
    access_expiry?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pay_per_view_access"]>

  export type pay_per_view_accessSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    access_id?: boolean
    user_id?: boolean
    item_id?: boolean
    access_expiry?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pay_per_view_access"]>

  export type pay_per_view_accessSelectScalar = {
    access_id?: boolean
    user_id?: boolean
    item_id?: boolean
    access_expiry?: boolean
    created_at?: boolean
  }

  export type pay_per_view_accessOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"access_id" | "user_id" | "item_id" | "access_expiry" | "created_at", ExtArgs["result"]["pay_per_view_access"]>
  export type pay_per_view_accessInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type pay_per_view_accessIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type pay_per_view_accessIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $pay_per_view_accessPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pay_per_view_access"
    objects: {
      items: Prisma.$itemsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      access_id: string
      user_id: string
      item_id: string
      access_expiry: Date
      created_at: Date | null
    }, ExtArgs["result"]["pay_per_view_access"]>
    composites: {}
  }

  type pay_per_view_accessGetPayload<S extends boolean | null | undefined | pay_per_view_accessDefaultArgs> = $Result.GetResult<Prisma.$pay_per_view_accessPayload, S>

  type pay_per_view_accessCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pay_per_view_accessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pay_per_view_accessCountAggregateInputType | true
    }

  export interface pay_per_view_accessDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pay_per_view_access'], meta: { name: 'pay_per_view_access' } }
    /**
     * Find zero or one Pay_per_view_access that matches the filter.
     * @param {pay_per_view_accessFindUniqueArgs} args - Arguments to find a Pay_per_view_access
     * @example
     * // Get one Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pay_per_view_accessFindUniqueArgs>(args: SelectSubset<T, pay_per_view_accessFindUniqueArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pay_per_view_access that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pay_per_view_accessFindUniqueOrThrowArgs} args - Arguments to find a Pay_per_view_access
     * @example
     * // Get one Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pay_per_view_accessFindUniqueOrThrowArgs>(args: SelectSubset<T, pay_per_view_accessFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pay_per_view_access that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessFindFirstArgs} args - Arguments to find a Pay_per_view_access
     * @example
     * // Get one Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pay_per_view_accessFindFirstArgs>(args?: SelectSubset<T, pay_per_view_accessFindFirstArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pay_per_view_access that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessFindFirstOrThrowArgs} args - Arguments to find a Pay_per_view_access
     * @example
     * // Get one Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pay_per_view_accessFindFirstOrThrowArgs>(args?: SelectSubset<T, pay_per_view_accessFindFirstOrThrowArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pay_per_view_accesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pay_per_view_accesses
     * const pay_per_view_accesses = await prisma.pay_per_view_access.findMany()
     * 
     * // Get first 10 Pay_per_view_accesses
     * const pay_per_view_accesses = await prisma.pay_per_view_access.findMany({ take: 10 })
     * 
     * // Only select the `access_id`
     * const pay_per_view_accessWithAccess_idOnly = await prisma.pay_per_view_access.findMany({ select: { access_id: true } })
     * 
     */
    findMany<T extends pay_per_view_accessFindManyArgs>(args?: SelectSubset<T, pay_per_view_accessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pay_per_view_access.
     * @param {pay_per_view_accessCreateArgs} args - Arguments to create a Pay_per_view_access.
     * @example
     * // Create one Pay_per_view_access
     * const Pay_per_view_access = await prisma.pay_per_view_access.create({
     *   data: {
     *     // ... data to create a Pay_per_view_access
     *   }
     * })
     * 
     */
    create<T extends pay_per_view_accessCreateArgs>(args: SelectSubset<T, pay_per_view_accessCreateArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pay_per_view_accesses.
     * @param {pay_per_view_accessCreateManyArgs} args - Arguments to create many Pay_per_view_accesses.
     * @example
     * // Create many Pay_per_view_accesses
     * const pay_per_view_access = await prisma.pay_per_view_access.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pay_per_view_accessCreateManyArgs>(args?: SelectSubset<T, pay_per_view_accessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pay_per_view_accesses and returns the data saved in the database.
     * @param {pay_per_view_accessCreateManyAndReturnArgs} args - Arguments to create many Pay_per_view_accesses.
     * @example
     * // Create many Pay_per_view_accesses
     * const pay_per_view_access = await prisma.pay_per_view_access.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pay_per_view_accesses and only return the `access_id`
     * const pay_per_view_accessWithAccess_idOnly = await prisma.pay_per_view_access.createManyAndReturn({
     *   select: { access_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pay_per_view_accessCreateManyAndReturnArgs>(args?: SelectSubset<T, pay_per_view_accessCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pay_per_view_access.
     * @param {pay_per_view_accessDeleteArgs} args - Arguments to delete one Pay_per_view_access.
     * @example
     * // Delete one Pay_per_view_access
     * const Pay_per_view_access = await prisma.pay_per_view_access.delete({
     *   where: {
     *     // ... filter to delete one Pay_per_view_access
     *   }
     * })
     * 
     */
    delete<T extends pay_per_view_accessDeleteArgs>(args: SelectSubset<T, pay_per_view_accessDeleteArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pay_per_view_access.
     * @param {pay_per_view_accessUpdateArgs} args - Arguments to update one Pay_per_view_access.
     * @example
     * // Update one Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pay_per_view_accessUpdateArgs>(args: SelectSubset<T, pay_per_view_accessUpdateArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pay_per_view_accesses.
     * @param {pay_per_view_accessDeleteManyArgs} args - Arguments to filter Pay_per_view_accesses to delete.
     * @example
     * // Delete a few Pay_per_view_accesses
     * const { count } = await prisma.pay_per_view_access.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pay_per_view_accessDeleteManyArgs>(args?: SelectSubset<T, pay_per_view_accessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pay_per_view_accesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pay_per_view_accesses
     * const pay_per_view_access = await prisma.pay_per_view_access.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pay_per_view_accessUpdateManyArgs>(args: SelectSubset<T, pay_per_view_accessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pay_per_view_accesses and returns the data updated in the database.
     * @param {pay_per_view_accessUpdateManyAndReturnArgs} args - Arguments to update many Pay_per_view_accesses.
     * @example
     * // Update many Pay_per_view_accesses
     * const pay_per_view_access = await prisma.pay_per_view_access.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pay_per_view_accesses and only return the `access_id`
     * const pay_per_view_accessWithAccess_idOnly = await prisma.pay_per_view_access.updateManyAndReturn({
     *   select: { access_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pay_per_view_accessUpdateManyAndReturnArgs>(args: SelectSubset<T, pay_per_view_accessUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pay_per_view_access.
     * @param {pay_per_view_accessUpsertArgs} args - Arguments to update or create a Pay_per_view_access.
     * @example
     * // Update or create a Pay_per_view_access
     * const pay_per_view_access = await prisma.pay_per_view_access.upsert({
     *   create: {
     *     // ... data to create a Pay_per_view_access
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pay_per_view_access we want to update
     *   }
     * })
     */
    upsert<T extends pay_per_view_accessUpsertArgs>(args: SelectSubset<T, pay_per_view_accessUpsertArgs<ExtArgs>>): Prisma__pay_per_view_accessClient<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pay_per_view_accesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessCountArgs} args - Arguments to filter Pay_per_view_accesses to count.
     * @example
     * // Count the number of Pay_per_view_accesses
     * const count = await prisma.pay_per_view_access.count({
     *   where: {
     *     // ... the filter for the Pay_per_view_accesses we want to count
     *   }
     * })
    **/
    count<T extends pay_per_view_accessCountArgs>(
      args?: Subset<T, pay_per_view_accessCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pay_per_view_accessCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pay_per_view_access.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pay_per_view_accessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pay_per_view_accessAggregateArgs>(args: Subset<T, Pay_per_view_accessAggregateArgs>): Prisma.PrismaPromise<GetPay_per_view_accessAggregateType<T>>

    /**
     * Group by Pay_per_view_access.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pay_per_view_accessGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pay_per_view_accessGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pay_per_view_accessGroupByArgs['orderBy'] }
        : { orderBy?: pay_per_view_accessGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pay_per_view_accessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPay_per_view_accessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pay_per_view_access model
   */
  readonly fields: pay_per_view_accessFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pay_per_view_access.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pay_per_view_accessClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemsDefaultArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pay_per_view_access model
   */ 
  interface pay_per_view_accessFieldRefs {
    readonly access_id: FieldRef<"pay_per_view_access", 'String'>
    readonly user_id: FieldRef<"pay_per_view_access", 'String'>
    readonly item_id: FieldRef<"pay_per_view_access", 'String'>
    readonly access_expiry: FieldRef<"pay_per_view_access", 'DateTime'>
    readonly created_at: FieldRef<"pay_per_view_access", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pay_per_view_access findUnique
   */
  export type pay_per_view_accessFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter, which pay_per_view_access to fetch.
     */
    where: pay_per_view_accessWhereUniqueInput
  }

  /**
   * pay_per_view_access findUniqueOrThrow
   */
  export type pay_per_view_accessFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter, which pay_per_view_access to fetch.
     */
    where: pay_per_view_accessWhereUniqueInput
  }

  /**
   * pay_per_view_access findFirst
   */
  export type pay_per_view_accessFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter, which pay_per_view_access to fetch.
     */
    where?: pay_per_view_accessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pay_per_view_accesses to fetch.
     */
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pay_per_view_accesses.
     */
    cursor?: pay_per_view_accessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pay_per_view_accesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pay_per_view_accesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pay_per_view_accesses.
     */
    distinct?: Pay_per_view_accessScalarFieldEnum | Pay_per_view_accessScalarFieldEnum[]
  }

  /**
   * pay_per_view_access findFirstOrThrow
   */
  export type pay_per_view_accessFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter, which pay_per_view_access to fetch.
     */
    where?: pay_per_view_accessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pay_per_view_accesses to fetch.
     */
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pay_per_view_accesses.
     */
    cursor?: pay_per_view_accessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pay_per_view_accesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pay_per_view_accesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pay_per_view_accesses.
     */
    distinct?: Pay_per_view_accessScalarFieldEnum | Pay_per_view_accessScalarFieldEnum[]
  }

  /**
   * pay_per_view_access findMany
   */
  export type pay_per_view_accessFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter, which pay_per_view_accesses to fetch.
     */
    where?: pay_per_view_accessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pay_per_view_accesses to fetch.
     */
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pay_per_view_accesses.
     */
    cursor?: pay_per_view_accessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pay_per_view_accesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pay_per_view_accesses.
     */
    skip?: number
    distinct?: Pay_per_view_accessScalarFieldEnum | Pay_per_view_accessScalarFieldEnum[]
  }

  /**
   * pay_per_view_access create
   */
  export type pay_per_view_accessCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * The data needed to create a pay_per_view_access.
     */
    data: XOR<pay_per_view_accessCreateInput, pay_per_view_accessUncheckedCreateInput>
  }

  /**
   * pay_per_view_access createMany
   */
  export type pay_per_view_accessCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pay_per_view_accesses.
     */
    data: pay_per_view_accessCreateManyInput | pay_per_view_accessCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pay_per_view_access createManyAndReturn
   */
  export type pay_per_view_accessCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * The data used to create many pay_per_view_accesses.
     */
    data: pay_per_view_accessCreateManyInput | pay_per_view_accessCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pay_per_view_access update
   */
  export type pay_per_view_accessUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * The data needed to update a pay_per_view_access.
     */
    data: XOR<pay_per_view_accessUpdateInput, pay_per_view_accessUncheckedUpdateInput>
    /**
     * Choose, which pay_per_view_access to update.
     */
    where: pay_per_view_accessWhereUniqueInput
  }

  /**
   * pay_per_view_access updateMany
   */
  export type pay_per_view_accessUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pay_per_view_accesses.
     */
    data: XOR<pay_per_view_accessUpdateManyMutationInput, pay_per_view_accessUncheckedUpdateManyInput>
    /**
     * Filter which pay_per_view_accesses to update
     */
    where?: pay_per_view_accessWhereInput
    /**
     * Limit how many pay_per_view_accesses to update.
     */
    limit?: number
  }

  /**
   * pay_per_view_access updateManyAndReturn
   */
  export type pay_per_view_accessUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * The data used to update pay_per_view_accesses.
     */
    data: XOR<pay_per_view_accessUpdateManyMutationInput, pay_per_view_accessUncheckedUpdateManyInput>
    /**
     * Filter which pay_per_view_accesses to update
     */
    where?: pay_per_view_accessWhereInput
    /**
     * Limit how many pay_per_view_accesses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pay_per_view_access upsert
   */
  export type pay_per_view_accessUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * The filter to search for the pay_per_view_access to update in case it exists.
     */
    where: pay_per_view_accessWhereUniqueInput
    /**
     * In case the pay_per_view_access found by the `where` argument doesn't exist, create a new pay_per_view_access with this data.
     */
    create: XOR<pay_per_view_accessCreateInput, pay_per_view_accessUncheckedCreateInput>
    /**
     * In case the pay_per_view_access was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pay_per_view_accessUpdateInput, pay_per_view_accessUncheckedUpdateInput>
  }

  /**
   * pay_per_view_access delete
   */
  export type pay_per_view_accessDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    /**
     * Filter which pay_per_view_access to delete.
     */
    where: pay_per_view_accessWhereUniqueInput
  }

  /**
   * pay_per_view_access deleteMany
   */
  export type pay_per_view_accessDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pay_per_view_accesses to delete
     */
    where?: pay_per_view_accessWhereInput
    /**
     * Limit how many pay_per_view_accesses to delete.
     */
    limit?: number
  }

  /**
   * pay_per_view_access without action
   */
  export type pay_per_view_accessDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
  }


  /**
   * Model reviews
   */

  export type AggregateReviews = {
    _count: ReviewsCountAggregateOutputType | null
    _avg: ReviewsAvgAggregateOutputType | null
    _sum: ReviewsSumAggregateOutputType | null
    _min: ReviewsMinAggregateOutputType | null
    _max: ReviewsMaxAggregateOutputType | null
  }

  export type ReviewsAvgAggregateOutputType = {
    rating: number | null
  }

  export type ReviewsSumAggregateOutputType = {
    rating: number | null
  }

  export type ReviewsMinAggregateOutputType = {
    review_id: string | null
    user_id: string | null
    item_id: string | null
    rating: number | null
    review_text: string | null
    created_at: Date | null
  }

  export type ReviewsMaxAggregateOutputType = {
    review_id: string | null
    user_id: string | null
    item_id: string | null
    rating: number | null
    review_text: string | null
    created_at: Date | null
  }

  export type ReviewsCountAggregateOutputType = {
    review_id: number
    user_id: number
    item_id: number
    rating: number
    review_text: number
    created_at: number
    _all: number
  }


  export type ReviewsAvgAggregateInputType = {
    rating?: true
  }

  export type ReviewsSumAggregateInputType = {
    rating?: true
  }

  export type ReviewsMinAggregateInputType = {
    review_id?: true
    user_id?: true
    item_id?: true
    rating?: true
    review_text?: true
    created_at?: true
  }

  export type ReviewsMaxAggregateInputType = {
    review_id?: true
    user_id?: true
    item_id?: true
    rating?: true
    review_text?: true
    created_at?: true
  }

  export type ReviewsCountAggregateInputType = {
    review_id?: true
    user_id?: true
    item_id?: true
    rating?: true
    review_text?: true
    created_at?: true
    _all?: true
  }

  export type ReviewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reviews to aggregate.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reviews
    **/
    _count?: true | ReviewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewsMaxAggregateInputType
  }

  export type GetReviewsAggregateType<T extends ReviewsAggregateArgs> = {
        [P in keyof T & keyof AggregateReviews]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReviews[P]>
      : GetScalarType<T[P], AggregateReviews[P]>
  }




  export type reviewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithAggregationInput | reviewsOrderByWithAggregationInput[]
    by: ReviewsScalarFieldEnum[] | ReviewsScalarFieldEnum
    having?: reviewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewsCountAggregateInputType | true
    _avg?: ReviewsAvgAggregateInputType
    _sum?: ReviewsSumAggregateInputType
    _min?: ReviewsMinAggregateInputType
    _max?: ReviewsMaxAggregateInputType
  }

  export type ReviewsGroupByOutputType = {
    review_id: string
    user_id: string
    item_id: string
    rating: number | null
    review_text: string | null
    created_at: Date | null
    _count: ReviewsCountAggregateOutputType | null
    _avg: ReviewsAvgAggregateOutputType | null
    _sum: ReviewsSumAggregateOutputType | null
    _min: ReviewsMinAggregateOutputType | null
    _max: ReviewsMaxAggregateOutputType | null
  }

  type GetReviewsGroupByPayload<T extends reviewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewsGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewsGroupByOutputType[P]>
        }
      >
    >


  export type reviewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    review_id?: boolean
    user_id?: boolean
    item_id?: boolean
    rating?: boolean
    review_text?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reviews"]>

  export type reviewsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    review_id?: boolean
    user_id?: boolean
    item_id?: boolean
    rating?: boolean
    review_text?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reviews"]>

  export type reviewsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    review_id?: boolean
    user_id?: boolean
    item_id?: boolean
    rating?: boolean
    review_text?: boolean
    created_at?: boolean
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reviews"]>

  export type reviewsSelectScalar = {
    review_id?: boolean
    user_id?: boolean
    item_id?: boolean
    rating?: boolean
    review_text?: boolean
    created_at?: boolean
  }

  export type reviewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"review_id" | "user_id" | "item_id" | "rating" | "review_text" | "created_at", ExtArgs["result"]["reviews"]>
  export type reviewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type reviewsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type reviewsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | itemsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $reviewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reviews"
    objects: {
      items: Prisma.$itemsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      review_id: string
      user_id: string
      item_id: string
      rating: number | null
      review_text: string | null
      created_at: Date | null
    }, ExtArgs["result"]["reviews"]>
    composites: {}
  }

  type reviewsGetPayload<S extends boolean | null | undefined | reviewsDefaultArgs> = $Result.GetResult<Prisma.$reviewsPayload, S>

  type reviewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reviewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewsCountAggregateInputType | true
    }

  export interface reviewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reviews'], meta: { name: 'reviews' } }
    /**
     * Find zero or one Reviews that matches the filter.
     * @param {reviewsFindUniqueArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reviewsFindUniqueArgs>(args: SelectSubset<T, reviewsFindUniqueArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reviews that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reviewsFindUniqueOrThrowArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reviewsFindUniqueOrThrowArgs>(args: SelectSubset<T, reviewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindFirstArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reviewsFindFirstArgs>(args?: SelectSubset<T, reviewsFindFirstArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reviews that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindFirstOrThrowArgs} args - Arguments to find a Reviews
     * @example
     * // Get one Reviews
     * const reviews = await prisma.reviews.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reviewsFindFirstOrThrowArgs>(args?: SelectSubset<T, reviewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.reviews.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.reviews.findMany({ take: 10 })
     * 
     * // Only select the `review_id`
     * const reviewsWithReview_idOnly = await prisma.reviews.findMany({ select: { review_id: true } })
     * 
     */
    findMany<T extends reviewsFindManyArgs>(args?: SelectSubset<T, reviewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reviews.
     * @param {reviewsCreateArgs} args - Arguments to create a Reviews.
     * @example
     * // Create one Reviews
     * const Reviews = await prisma.reviews.create({
     *   data: {
     *     // ... data to create a Reviews
     *   }
     * })
     * 
     */
    create<T extends reviewsCreateArgs>(args: SelectSubset<T, reviewsCreateArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {reviewsCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const reviews = await prisma.reviews.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reviewsCreateManyArgs>(args?: SelectSubset<T, reviewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {reviewsCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const reviews = await prisma.reviews.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `review_id`
     * const reviewsWithReview_idOnly = await prisma.reviews.createManyAndReturn({
     *   select: { review_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reviewsCreateManyAndReturnArgs>(args?: SelectSubset<T, reviewsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reviews.
     * @param {reviewsDeleteArgs} args - Arguments to delete one Reviews.
     * @example
     * // Delete one Reviews
     * const Reviews = await prisma.reviews.delete({
     *   where: {
     *     // ... filter to delete one Reviews
     *   }
     * })
     * 
     */
    delete<T extends reviewsDeleteArgs>(args: SelectSubset<T, reviewsDeleteArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reviews.
     * @param {reviewsUpdateArgs} args - Arguments to update one Reviews.
     * @example
     * // Update one Reviews
     * const reviews = await prisma.reviews.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reviewsUpdateArgs>(args: SelectSubset<T, reviewsUpdateArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {reviewsDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.reviews.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reviewsDeleteManyArgs>(args?: SelectSubset<T, reviewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const reviews = await prisma.reviews.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reviewsUpdateManyArgs>(args: SelectSubset<T, reviewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews and returns the data updated in the database.
     * @param {reviewsUpdateManyAndReturnArgs} args - Arguments to update many Reviews.
     * @example
     * // Update many Reviews
     * const reviews = await prisma.reviews.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reviews and only return the `review_id`
     * const reviewsWithReview_idOnly = await prisma.reviews.updateManyAndReturn({
     *   select: { review_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reviewsUpdateManyAndReturnArgs>(args: SelectSubset<T, reviewsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reviews.
     * @param {reviewsUpsertArgs} args - Arguments to update or create a Reviews.
     * @example
     * // Update or create a Reviews
     * const reviews = await prisma.reviews.upsert({
     *   create: {
     *     // ... data to create a Reviews
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reviews we want to update
     *   }
     * })
     */
    upsert<T extends reviewsUpsertArgs>(args: SelectSubset<T, reviewsUpsertArgs<ExtArgs>>): Prisma__reviewsClient<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.reviews.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends reviewsCountArgs>(
      args?: Subset<T, reviewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewsAggregateArgs>(args: Subset<T, ReviewsAggregateArgs>): Prisma.PrismaPromise<GetReviewsAggregateType<T>>

    /**
     * Group by Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reviewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reviewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reviewsGroupByArgs['orderBy'] }
        : { orderBy?: reviewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reviewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reviews model
   */
  readonly fields: reviewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reviews.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reviewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemsDefaultArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reviews model
   */ 
  interface reviewsFieldRefs {
    readonly review_id: FieldRef<"reviews", 'String'>
    readonly user_id: FieldRef<"reviews", 'String'>
    readonly item_id: FieldRef<"reviews", 'String'>
    readonly rating: FieldRef<"reviews", 'Int'>
    readonly review_text: FieldRef<"reviews", 'String'>
    readonly created_at: FieldRef<"reviews", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reviews findUnique
   */
  export type reviewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews findUniqueOrThrow
   */
  export type reviewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews findFirst
   */
  export type reviewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews findFirstOrThrow
   */
  export type reviewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reviews.
     */
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews findMany
   */
  export type reviewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter, which reviews to fetch.
     */
    where?: reviewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reviews to fetch.
     */
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reviews.
     */
    cursor?: reviewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reviews.
     */
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * reviews create
   */
  export type reviewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The data needed to create a reviews.
     */
    data: XOR<reviewsCreateInput, reviewsUncheckedCreateInput>
  }

  /**
   * reviews createMany
   */
  export type reviewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reviews.
     */
    data: reviewsCreateManyInput | reviewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reviews createManyAndReturn
   */
  export type reviewsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * The data used to create many reviews.
     */
    data: reviewsCreateManyInput | reviewsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reviews update
   */
  export type reviewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The data needed to update a reviews.
     */
    data: XOR<reviewsUpdateInput, reviewsUncheckedUpdateInput>
    /**
     * Choose, which reviews to update.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews updateMany
   */
  export type reviewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reviews.
     */
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyInput>
    /**
     * Filter which reviews to update
     */
    where?: reviewsWhereInput
    /**
     * Limit how many reviews to update.
     */
    limit?: number
  }

  /**
   * reviews updateManyAndReturn
   */
  export type reviewsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * The data used to update reviews.
     */
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyInput>
    /**
     * Filter which reviews to update
     */
    where?: reviewsWhereInput
    /**
     * Limit how many reviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reviews upsert
   */
  export type reviewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * The filter to search for the reviews to update in case it exists.
     */
    where: reviewsWhereUniqueInput
    /**
     * In case the reviews found by the `where` argument doesn't exist, create a new reviews with this data.
     */
    create: XOR<reviewsCreateInput, reviewsUncheckedCreateInput>
    /**
     * In case the reviews was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reviewsUpdateInput, reviewsUncheckedUpdateInput>
  }

  /**
   * reviews delete
   */
  export type reviewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    /**
     * Filter which reviews to delete.
     */
    where: reviewsWhereUniqueInput
  }

  /**
   * reviews deleteMany
   */
  export type reviewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reviews to delete
     */
    where?: reviewsWhereInput
    /**
     * Limit how many reviews to delete.
     */
    limit?: number
  }

  /**
   * reviews without action
   */
  export type reviewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
  }


  /**
   * Model transactions
   */

  export type AggregateTransactions = {
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  export type TransactionsAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type TransactionsSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type TransactionsMinAggregateOutputType = {
    transaction_id: string | null
    buyer_id: string | null
    item_id: string | null
    amount: Decimal | null
    payment_status: string | null
    transaction_date: Date | null
  }

  export type TransactionsMaxAggregateOutputType = {
    transaction_id: string | null
    buyer_id: string | null
    item_id: string | null
    amount: Decimal | null
    payment_status: string | null
    transaction_date: Date | null
  }

  export type TransactionsCountAggregateOutputType = {
    transaction_id: number
    buyer_id: number
    item_id: number
    amount: number
    payment_status: number
    transaction_date: number
    _all: number
  }


  export type TransactionsAvgAggregateInputType = {
    amount?: true
  }

  export type TransactionsSumAggregateInputType = {
    amount?: true
  }

  export type TransactionsMinAggregateInputType = {
    transaction_id?: true
    buyer_id?: true
    item_id?: true
    amount?: true
    payment_status?: true
    transaction_date?: true
  }

  export type TransactionsMaxAggregateInputType = {
    transaction_id?: true
    buyer_id?: true
    item_id?: true
    amount?: true
    payment_status?: true
    transaction_date?: true
  }

  export type TransactionsCountAggregateInputType = {
    transaction_id?: true
    buyer_id?: true
    item_id?: true
    amount?: true
    payment_status?: true
    transaction_date?: true
    _all?: true
  }

  export type TransactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transactions to aggregate.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transactions
    **/
    _count?: true | TransactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionsMaxAggregateInputType
  }

  export type GetTransactionsAggregateType<T extends TransactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactions[P]>
      : GetScalarType<T[P], AggregateTransactions[P]>
  }




  export type transactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithAggregationInput | transactionsOrderByWithAggregationInput[]
    by: TransactionsScalarFieldEnum[] | TransactionsScalarFieldEnum
    having?: transactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionsCountAggregateInputType | true
    _avg?: TransactionsAvgAggregateInputType
    _sum?: TransactionsSumAggregateInputType
    _min?: TransactionsMinAggregateInputType
    _max?: TransactionsMaxAggregateInputType
  }

  export type TransactionsGroupByOutputType = {
    transaction_id: string
    buyer_id: string
    item_id: string
    amount: Decimal
    payment_status: string | null
    transaction_date: Date | null
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  type GetTransactionsGroupByPayload<T extends transactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
        }
      >
    >


  export type transactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    buyer_id?: boolean
    item_id?: boolean
    amount?: boolean
    payment_status?: boolean
    transaction_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    buyer_id?: boolean
    item_id?: boolean
    amount?: boolean
    payment_status?: boolean
    transaction_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transaction_id?: boolean
    buyer_id?: boolean
    item_id?: boolean
    amount?: boolean
    payment_status?: boolean
    transaction_date?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectScalar = {
    transaction_id?: boolean
    buyer_id?: boolean
    item_id?: boolean
    amount?: boolean
    payment_status?: boolean
    transaction_date?: boolean
  }

  export type transactionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"transaction_id" | "buyer_id" | "item_id" | "amount" | "payment_status" | "transaction_date", ExtArgs["result"]["transactions"]>
  export type transactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }
  export type transactionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }
  export type transactionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    items?: boolean | itemsDefaultArgs<ExtArgs>
  }

  export type $transactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transactions"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      items: Prisma.$itemsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      transaction_id: string
      buyer_id: string
      item_id: string
      amount: Prisma.Decimal
      payment_status: string | null
      transaction_date: Date | null
    }, ExtArgs["result"]["transactions"]>
    composites: {}
  }

  type transactionsGetPayload<S extends boolean | null | undefined | transactionsDefaultArgs> = $Result.GetResult<Prisma.$transactionsPayload, S>

  type transactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transactionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionsCountAggregateInputType | true
    }

  export interface transactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transactions'], meta: { name: 'transactions' } }
    /**
     * Find zero or one Transactions that matches the filter.
     * @param {transactionsFindUniqueArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transactionsFindUniqueArgs>(args: SelectSubset<T, transactionsFindUniqueArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transactions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transactionsFindUniqueOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, transactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindFirstArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transactionsFindFirstArgs>(args?: SelectSubset<T, transactionsFindFirstArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindFirstOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, transactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transactions.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transactions.findMany({ take: 10 })
     * 
     * // Only select the `transaction_id`
     * const transactionsWithTransaction_idOnly = await prisma.transactions.findMany({ select: { transaction_id: true } })
     * 
     */
    findMany<T extends transactionsFindManyArgs>(args?: SelectSubset<T, transactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transactions.
     * @param {transactionsCreateArgs} args - Arguments to create a Transactions.
     * @example
     * // Create one Transactions
     * const Transactions = await prisma.transactions.create({
     *   data: {
     *     // ... data to create a Transactions
     *   }
     * })
     * 
     */
    create<T extends transactionsCreateArgs>(args: SelectSubset<T, transactionsCreateArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transactions.
     * @param {transactionsCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transactionsCreateManyArgs>(args?: SelectSubset<T, transactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {transactionsCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `transaction_id`
     * const transactionsWithTransaction_idOnly = await prisma.transactions.createManyAndReturn({
     *   select: { transaction_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transactionsCreateManyAndReturnArgs>(args?: SelectSubset<T, transactionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transactions.
     * @param {transactionsDeleteArgs} args - Arguments to delete one Transactions.
     * @example
     * // Delete one Transactions
     * const Transactions = await prisma.transactions.delete({
     *   where: {
     *     // ... filter to delete one Transactions
     *   }
     * })
     * 
     */
    delete<T extends transactionsDeleteArgs>(args: SelectSubset<T, transactionsDeleteArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transactions.
     * @param {transactionsUpdateArgs} args - Arguments to update one Transactions.
     * @example
     * // Update one Transactions
     * const transactions = await prisma.transactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transactionsUpdateArgs>(args: SelectSubset<T, transactionsUpdateArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transactions.
     * @param {transactionsDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transactionsDeleteManyArgs>(args?: SelectSubset<T, transactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transactions = await prisma.transactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transactionsUpdateManyArgs>(args: SelectSubset<T, transactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions and returns the data updated in the database.
     * @param {transactionsUpdateManyAndReturnArgs} args - Arguments to update many Transactions.
     * @example
     * // Update many Transactions
     * const transactions = await prisma.transactions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transactions and only return the `transaction_id`
     * const transactionsWithTransaction_idOnly = await prisma.transactions.updateManyAndReturn({
     *   select: { transaction_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transactionsUpdateManyAndReturnArgs>(args: SelectSubset<T, transactionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transactions.
     * @param {transactionsUpsertArgs} args - Arguments to update or create a Transactions.
     * @example
     * // Update or create a Transactions
     * const transactions = await prisma.transactions.upsert({
     *   create: {
     *     // ... data to create a Transactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transactions we want to update
     *   }
     * })
     */
    upsert<T extends transactionsUpsertArgs>(args: SelectSubset<T, transactionsUpsertArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transactions.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends transactionsCountArgs>(
      args?: Subset<T, transactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionsAggregateArgs>(args: Subset<T, TransactionsAggregateArgs>): Prisma.PrismaPromise<GetTransactionsAggregateType<T>>

    /**
     * Group by Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transactionsGroupByArgs['orderBy'] }
        : { orderBy?: transactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transactions model
   */
  readonly fields: transactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends itemsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemsDefaultArgs<ExtArgs>>): Prisma__itemsClient<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transactions model
   */ 
  interface transactionsFieldRefs {
    readonly transaction_id: FieldRef<"transactions", 'String'>
    readonly buyer_id: FieldRef<"transactions", 'String'>
    readonly item_id: FieldRef<"transactions", 'String'>
    readonly amount: FieldRef<"transactions", 'Decimal'>
    readonly payment_status: FieldRef<"transactions", 'String'>
    readonly transaction_date: FieldRef<"transactions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * transactions findUnique
   */
  export type transactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions findUniqueOrThrow
   */
  export type transactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions findFirst
   */
  export type transactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions findFirstOrThrow
   */
  export type transactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions findMany
   */
  export type transactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions create
   */
  export type transactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a transactions.
     */
    data: XOR<transactionsCreateInput, transactionsUncheckedCreateInput>
  }

  /**
   * transactions createMany
   */
  export type transactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transactions.
     */
    data: transactionsCreateManyInput | transactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transactions createManyAndReturn
   */
  export type transactionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * The data used to create many transactions.
     */
    data: transactionsCreateManyInput | transactionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transactions update
   */
  export type transactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a transactions.
     */
    data: XOR<transactionsUpdateInput, transactionsUncheckedUpdateInput>
    /**
     * Choose, which transactions to update.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions updateMany
   */
  export type transactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transactions.
     */
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyInput>
    /**
     * Filter which transactions to update
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to update.
     */
    limit?: number
  }

  /**
   * transactions updateManyAndReturn
   */
  export type transactionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * The data used to update transactions.
     */
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyInput>
    /**
     * Filter which transactions to update
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transactions upsert
   */
  export type transactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the transactions to update in case it exists.
     */
    where: transactionsWhereUniqueInput
    /**
     * In case the transactions found by the `where` argument doesn't exist, create a new transactions with this data.
     */
    create: XOR<transactionsCreateInput, transactionsUncheckedCreateInput>
    /**
     * In case the transactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transactionsUpdateInput, transactionsUncheckedUpdateInput>
  }

  /**
   * transactions delete
   */
  export type transactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter which transactions to delete.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions deleteMany
   */
  export type transactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transactions to delete
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to delete.
     */
    limit?: number
  }

  /**
   * transactions without action
   */
  export type transactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
  }


  /**
   * Model password_reset_tokens
   */

  export type AggregatePassword_reset_tokens = {
    _count: Password_reset_tokensCountAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  export type Password_reset_tokensMinAggregateOutputType = {
    token: string | null
    user_id: string | null
    expires_at: Date | null
    created_at: Date | null
    used: boolean | null
  }

  export type Password_reset_tokensMaxAggregateOutputType = {
    token: string | null
    user_id: string | null
    expires_at: Date | null
    created_at: Date | null
    used: boolean | null
  }

  export type Password_reset_tokensCountAggregateOutputType = {
    token: number
    user_id: number
    expires_at: number
    created_at: number
    used: number
    _all: number
  }


  export type Password_reset_tokensMinAggregateInputType = {
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    used?: true
  }

  export type Password_reset_tokensMaxAggregateInputType = {
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    used?: true
  }

  export type Password_reset_tokensCountAggregateInputType = {
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    used?: true
    _all?: true
  }

  export type Password_reset_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to aggregate.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned password_reset_tokens
    **/
    _count?: true | Password_reset_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Password_reset_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type GetPassword_reset_tokensAggregateType<T extends Password_reset_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregatePassword_reset_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
      : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
  }




  export type password_reset_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithAggregationInput | password_reset_tokensOrderByWithAggregationInput[]
    by: Password_reset_tokensScalarFieldEnum[] | Password_reset_tokensScalarFieldEnum
    having?: password_reset_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Password_reset_tokensCountAggregateInputType | true
    _min?: Password_reset_tokensMinAggregateInputType
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type Password_reset_tokensGroupByOutputType = {
    token: string
    user_id: string
    expires_at: Date
    created_at: Date
    used: boolean | null
    _count: Password_reset_tokensCountAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  type GetPassword_reset_tokensGroupByPayload<T extends password_reset_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Password_reset_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Password_reset_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
        }
      >
    >


  export type password_reset_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    used?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    used?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    used?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectScalar = {
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    used?: boolean
  }

  export type password_reset_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"token" | "user_id" | "expires_at" | "created_at" | "used", ExtArgs["result"]["password_reset_tokens"]>
  export type password_reset_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $password_reset_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "password_reset_tokens"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      token: string
      user_id: string
      expires_at: Date
      created_at: Date
      used: boolean | null
    }, ExtArgs["result"]["password_reset_tokens"]>
    composites: {}
  }

  type password_reset_tokensGetPayload<S extends boolean | null | undefined | password_reset_tokensDefaultArgs> = $Result.GetResult<Prisma.$password_reset_tokensPayload, S>

  type password_reset_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<password_reset_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Password_reset_tokensCountAggregateInputType | true
    }

  export interface password_reset_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['password_reset_tokens'], meta: { name: 'password_reset_tokens' } }
    /**
     * Find zero or one Password_reset_tokens that matches the filter.
     * @param {password_reset_tokensFindUniqueArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends password_reset_tokensFindUniqueArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Password_reset_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {password_reset_tokensFindUniqueOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends password_reset_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends password_reset_tokensFindFirstArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends password_reset_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
     * 
     * // Get first 10 Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany({ take: 10 })
     * 
     * // Only select the `token`
     * const password_reset_tokensWithTokenOnly = await prisma.password_reset_tokens.findMany({ select: { token: true } })
     * 
     */
    findMany<T extends password_reset_tokensFindManyArgs>(args?: SelectSubset<T, password_reset_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Password_reset_tokens.
     * @param {password_reset_tokensCreateArgs} args - Arguments to create a Password_reset_tokens.
     * @example
     * // Create one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.create({
     *   data: {
     *     // ... data to create a Password_reset_tokens
     *   }
     * })
     * 
     */
    create<T extends password_reset_tokensCreateArgs>(args: SelectSubset<T, password_reset_tokensCreateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Password_reset_tokens.
     * @param {password_reset_tokensCreateManyArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends password_reset_tokensCreateManyArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Password_reset_tokens and returns the data saved in the database.
     * @param {password_reset_tokensCreateManyAndReturnArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Password_reset_tokens and only return the `token`
     * const password_reset_tokensWithTokenOnly = await prisma.password_reset_tokens.createManyAndReturn({
     *   select: { token: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends password_reset_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Password_reset_tokens.
     * @param {password_reset_tokensDeleteArgs} args - Arguments to delete one Password_reset_tokens.
     * @example
     * // Delete one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.delete({
     *   where: {
     *     // ... filter to delete one Password_reset_tokens
     *   }
     * })
     * 
     */
    delete<T extends password_reset_tokensDeleteArgs>(args: SelectSubset<T, password_reset_tokensDeleteArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Password_reset_tokens.
     * @param {password_reset_tokensUpdateArgs} args - Arguments to update one Password_reset_tokens.
     * @example
     * // Update one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends password_reset_tokensUpdateArgs>(args: SelectSubset<T, password_reset_tokensUpdateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Password_reset_tokens.
     * @param {password_reset_tokensDeleteManyArgs} args - Arguments to filter Password_reset_tokens to delete.
     * @example
     * // Delete a few Password_reset_tokens
     * const { count } = await prisma.password_reset_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends password_reset_tokensDeleteManyArgs>(args?: SelectSubset<T, password_reset_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends password_reset_tokensUpdateManyArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens and returns the data updated in the database.
     * @param {password_reset_tokensUpdateManyAndReturnArgs} args - Arguments to update many Password_reset_tokens.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Password_reset_tokens and only return the `token`
     * const password_reset_tokensWithTokenOnly = await prisma.password_reset_tokens.updateManyAndReturn({
     *   select: { token: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends password_reset_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Password_reset_tokens.
     * @param {password_reset_tokensUpsertArgs} args - Arguments to update or create a Password_reset_tokens.
     * @example
     * // Update or create a Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.upsert({
     *   create: {
     *     // ... data to create a Password_reset_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to update
     *   }
     * })
     */
    upsert<T extends password_reset_tokensUpsertArgs>(args: SelectSubset<T, password_reset_tokensUpsertArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensCountArgs} args - Arguments to filter Password_reset_tokens to count.
     * @example
     * // Count the number of Password_reset_tokens
     * const count = await prisma.password_reset_tokens.count({
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to count
     *   }
     * })
    **/
    count<T extends password_reset_tokensCountArgs>(
      args?: Subset<T, password_reset_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Password_reset_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Password_reset_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Password_reset_tokensAggregateArgs>(args: Subset<T, Password_reset_tokensAggregateArgs>): Prisma.PrismaPromise<GetPassword_reset_tokensAggregateType<T>>

    /**
     * Group by Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends password_reset_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: password_reset_tokensGroupByArgs['orderBy'] }
        : { orderBy?: password_reset_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, password_reset_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPassword_reset_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the password_reset_tokens model
   */
  readonly fields: password_reset_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for password_reset_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__password_reset_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the password_reset_tokens model
   */ 
  interface password_reset_tokensFieldRefs {
    readonly token: FieldRef<"password_reset_tokens", 'String'>
    readonly user_id: FieldRef<"password_reset_tokens", 'String'>
    readonly expires_at: FieldRef<"password_reset_tokens", 'DateTime'>
    readonly created_at: FieldRef<"password_reset_tokens", 'DateTime'>
    readonly used: FieldRef<"password_reset_tokens", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * password_reset_tokens findUnique
   */
  export type password_reset_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findUniqueOrThrow
   */
  export type password_reset_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findFirst
   */
  export type password_reset_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findFirstOrThrow
   */
  export type password_reset_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findMany
   */
  export type password_reset_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens create
   */
  export type password_reset_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a password_reset_tokens.
     */
    data: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
  }

  /**
   * password_reset_tokens createMany
   */
  export type password_reset_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * password_reset_tokens createManyAndReturn
   */
  export type password_reset_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens update
   */
  export type password_reset_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
    /**
     * Choose, which password_reset_tokens to update.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens updateMany
   */
  export type password_reset_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
  }

  /**
   * password_reset_tokens updateManyAndReturn
   */
  export type password_reset_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens upsert
   */
  export type password_reset_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the password_reset_tokens to update in case it exists.
     */
    where: password_reset_tokensWhereUniqueInput
    /**
     * In case the password_reset_tokens found by the `where` argument doesn't exist, create a new password_reset_tokens with this data.
     */
    create: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
    /**
     * In case the password_reset_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
  }

  /**
   * password_reset_tokens delete
   */
  export type password_reset_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter which password_reset_tokens to delete.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens deleteMany
   */
  export type password_reset_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to delete
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to delete.
     */
    limit?: number
  }

  /**
   * password_reset_tokens without action
   */
  export type password_reset_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
  }


  /**
   * Model user_analytics
   */

  export type AggregateUser_analytics = {
    _count: User_analyticsCountAggregateOutputType | null
    _avg: User_analyticsAvgAggregateOutputType | null
    _sum: User_analyticsSumAggregateOutputType | null
    _min: User_analyticsMinAggregateOutputType | null
    _max: User_analyticsMaxAggregateOutputType | null
  }

  export type User_analyticsAvgAggregateOutputType = {
    posts_count: number | null
    likes_received: number | null
    followers_count: number | null
    following_count: number | null
    activity_score: Decimal | null
  }

  export type User_analyticsSumAggregateOutputType = {
    posts_count: number | null
    likes_received: number | null
    followers_count: number | null
    following_count: number | null
    activity_score: Decimal | null
  }

  export type User_analyticsMinAggregateOutputType = {
    user_id: string | null
    posts_count: number | null
    likes_received: number | null
    followers_count: number | null
    following_count: number | null
    last_login: Date | null
    activity_score: Decimal | null
  }

  export type User_analyticsMaxAggregateOutputType = {
    user_id: string | null
    posts_count: number | null
    likes_received: number | null
    followers_count: number | null
    following_count: number | null
    last_login: Date | null
    activity_score: Decimal | null
  }

  export type User_analyticsCountAggregateOutputType = {
    user_id: number
    posts_count: number
    likes_received: number
    followers_count: number
    following_count: number
    last_login: number
    activity_score: number
    _all: number
  }


  export type User_analyticsAvgAggregateInputType = {
    posts_count?: true
    likes_received?: true
    followers_count?: true
    following_count?: true
    activity_score?: true
  }

  export type User_analyticsSumAggregateInputType = {
    posts_count?: true
    likes_received?: true
    followers_count?: true
    following_count?: true
    activity_score?: true
  }

  export type User_analyticsMinAggregateInputType = {
    user_id?: true
    posts_count?: true
    likes_received?: true
    followers_count?: true
    following_count?: true
    last_login?: true
    activity_score?: true
  }

  export type User_analyticsMaxAggregateInputType = {
    user_id?: true
    posts_count?: true
    likes_received?: true
    followers_count?: true
    following_count?: true
    last_login?: true
    activity_score?: true
  }

  export type User_analyticsCountAggregateInputType = {
    user_id?: true
    posts_count?: true
    likes_received?: true
    followers_count?: true
    following_count?: true
    last_login?: true
    activity_score?: true
    _all?: true
  }

  export type User_analyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_analytics to aggregate.
     */
    where?: user_analyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_analytics to fetch.
     */
    orderBy?: user_analyticsOrderByWithRelationInput | user_analyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_analyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_analytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_analytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_analytics
    **/
    _count?: true | User_analyticsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_analyticsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_analyticsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_analyticsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_analyticsMaxAggregateInputType
  }

  export type GetUser_analyticsAggregateType<T extends User_analyticsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_analytics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_analytics[P]>
      : GetScalarType<T[P], AggregateUser_analytics[P]>
  }




  export type user_analyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_analyticsWhereInput
    orderBy?: user_analyticsOrderByWithAggregationInput | user_analyticsOrderByWithAggregationInput[]
    by: User_analyticsScalarFieldEnum[] | User_analyticsScalarFieldEnum
    having?: user_analyticsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_analyticsCountAggregateInputType | true
    _avg?: User_analyticsAvgAggregateInputType
    _sum?: User_analyticsSumAggregateInputType
    _min?: User_analyticsMinAggregateInputType
    _max?: User_analyticsMaxAggregateInputType
  }

  export type User_analyticsGroupByOutputType = {
    user_id: string
    posts_count: number | null
    likes_received: number | null
    followers_count: number | null
    following_count: number | null
    last_login: Date | null
    activity_score: Decimal | null
    _count: User_analyticsCountAggregateOutputType | null
    _avg: User_analyticsAvgAggregateOutputType | null
    _sum: User_analyticsSumAggregateOutputType | null
    _min: User_analyticsMinAggregateOutputType | null
    _max: User_analyticsMaxAggregateOutputType | null
  }

  type GetUser_analyticsGroupByPayload<T extends user_analyticsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_analyticsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_analyticsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_analyticsGroupByOutputType[P]>
            : GetScalarType<T[P], User_analyticsGroupByOutputType[P]>
        }
      >
    >


  export type user_analyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    posts_count?: boolean
    likes_received?: boolean
    followers_count?: boolean
    following_count?: boolean
    last_login?: boolean
    activity_score?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_analytics"]>

  export type user_analyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    posts_count?: boolean
    likes_received?: boolean
    followers_count?: boolean
    following_count?: boolean
    last_login?: boolean
    activity_score?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_analytics"]>

  export type user_analyticsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    posts_count?: boolean
    likes_received?: boolean
    followers_count?: boolean
    following_count?: boolean
    last_login?: boolean
    activity_score?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_analytics"]>

  export type user_analyticsSelectScalar = {
    user_id?: boolean
    posts_count?: boolean
    likes_received?: boolean
    followers_count?: boolean
    following_count?: boolean
    last_login?: boolean
    activity_score?: boolean
  }

  export type user_analyticsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "posts_count" | "likes_received" | "followers_count" | "following_count" | "last_login" | "activity_score", ExtArgs["result"]["user_analytics"]>
  export type user_analyticsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_analyticsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_analyticsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_analyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_analytics"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      posts_count: number | null
      likes_received: number | null
      followers_count: number | null
      following_count: number | null
      last_login: Date | null
      activity_score: Prisma.Decimal | null
    }, ExtArgs["result"]["user_analytics"]>
    composites: {}
  }

  type user_analyticsGetPayload<S extends boolean | null | undefined | user_analyticsDefaultArgs> = $Result.GetResult<Prisma.$user_analyticsPayload, S>

  type user_analyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_analyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_analyticsCountAggregateInputType | true
    }

  export interface user_analyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_analytics'], meta: { name: 'user_analytics' } }
    /**
     * Find zero or one User_analytics that matches the filter.
     * @param {user_analyticsFindUniqueArgs} args - Arguments to find a User_analytics
     * @example
     * // Get one User_analytics
     * const user_analytics = await prisma.user_analytics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_analyticsFindUniqueArgs>(args: SelectSubset<T, user_analyticsFindUniqueArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_analytics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_analyticsFindUniqueOrThrowArgs} args - Arguments to find a User_analytics
     * @example
     * // Get one User_analytics
     * const user_analytics = await prisma.user_analytics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_analyticsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_analyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_analytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsFindFirstArgs} args - Arguments to find a User_analytics
     * @example
     * // Get one User_analytics
     * const user_analytics = await prisma.user_analytics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_analyticsFindFirstArgs>(args?: SelectSubset<T, user_analyticsFindFirstArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_analytics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsFindFirstOrThrowArgs} args - Arguments to find a User_analytics
     * @example
     * // Get one User_analytics
     * const user_analytics = await prisma.user_analytics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_analyticsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_analyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_analytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_analytics
     * const user_analytics = await prisma.user_analytics.findMany()
     * 
     * // Get first 10 User_analytics
     * const user_analytics = await prisma.user_analytics.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_analyticsWithUser_idOnly = await prisma.user_analytics.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_analyticsFindManyArgs>(args?: SelectSubset<T, user_analyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_analytics.
     * @param {user_analyticsCreateArgs} args - Arguments to create a User_analytics.
     * @example
     * // Create one User_analytics
     * const User_analytics = await prisma.user_analytics.create({
     *   data: {
     *     // ... data to create a User_analytics
     *   }
     * })
     * 
     */
    create<T extends user_analyticsCreateArgs>(args: SelectSubset<T, user_analyticsCreateArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_analytics.
     * @param {user_analyticsCreateManyArgs} args - Arguments to create many User_analytics.
     * @example
     * // Create many User_analytics
     * const user_analytics = await prisma.user_analytics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_analyticsCreateManyArgs>(args?: SelectSubset<T, user_analyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_analytics and returns the data saved in the database.
     * @param {user_analyticsCreateManyAndReturnArgs} args - Arguments to create many User_analytics.
     * @example
     * // Create many User_analytics
     * const user_analytics = await prisma.user_analytics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_analytics and only return the `user_id`
     * const user_analyticsWithUser_idOnly = await prisma.user_analytics.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_analyticsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_analyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_analytics.
     * @param {user_analyticsDeleteArgs} args - Arguments to delete one User_analytics.
     * @example
     * // Delete one User_analytics
     * const User_analytics = await prisma.user_analytics.delete({
     *   where: {
     *     // ... filter to delete one User_analytics
     *   }
     * })
     * 
     */
    delete<T extends user_analyticsDeleteArgs>(args: SelectSubset<T, user_analyticsDeleteArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_analytics.
     * @param {user_analyticsUpdateArgs} args - Arguments to update one User_analytics.
     * @example
     * // Update one User_analytics
     * const user_analytics = await prisma.user_analytics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_analyticsUpdateArgs>(args: SelectSubset<T, user_analyticsUpdateArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_analytics.
     * @param {user_analyticsDeleteManyArgs} args - Arguments to filter User_analytics to delete.
     * @example
     * // Delete a few User_analytics
     * const { count } = await prisma.user_analytics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_analyticsDeleteManyArgs>(args?: SelectSubset<T, user_analyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_analytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_analytics
     * const user_analytics = await prisma.user_analytics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_analyticsUpdateManyArgs>(args: SelectSubset<T, user_analyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_analytics and returns the data updated in the database.
     * @param {user_analyticsUpdateManyAndReturnArgs} args - Arguments to update many User_analytics.
     * @example
     * // Update many User_analytics
     * const user_analytics = await prisma.user_analytics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_analytics and only return the `user_id`
     * const user_analyticsWithUser_idOnly = await prisma.user_analytics.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_analyticsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_analyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_analytics.
     * @param {user_analyticsUpsertArgs} args - Arguments to update or create a User_analytics.
     * @example
     * // Update or create a User_analytics
     * const user_analytics = await prisma.user_analytics.upsert({
     *   create: {
     *     // ... data to create a User_analytics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_analytics we want to update
     *   }
     * })
     */
    upsert<T extends user_analyticsUpsertArgs>(args: SelectSubset<T, user_analyticsUpsertArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_analytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsCountArgs} args - Arguments to filter User_analytics to count.
     * @example
     * // Count the number of User_analytics
     * const count = await prisma.user_analytics.count({
     *   where: {
     *     // ... the filter for the User_analytics we want to count
     *   }
     * })
    **/
    count<T extends user_analyticsCountArgs>(
      args?: Subset<T, user_analyticsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_analyticsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_analytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_analyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_analyticsAggregateArgs>(args: Subset<T, User_analyticsAggregateArgs>): Prisma.PrismaPromise<GetUser_analyticsAggregateType<T>>

    /**
     * Group by User_analytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_analyticsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_analyticsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_analyticsGroupByArgs['orderBy'] }
        : { orderBy?: user_analyticsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_analyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_analyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_analytics model
   */
  readonly fields: user_analyticsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_analytics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_analyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_analytics model
   */ 
  interface user_analyticsFieldRefs {
    readonly user_id: FieldRef<"user_analytics", 'String'>
    readonly posts_count: FieldRef<"user_analytics", 'Int'>
    readonly likes_received: FieldRef<"user_analytics", 'Int'>
    readonly followers_count: FieldRef<"user_analytics", 'Int'>
    readonly following_count: FieldRef<"user_analytics", 'Int'>
    readonly last_login: FieldRef<"user_analytics", 'DateTime'>
    readonly activity_score: FieldRef<"user_analytics", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * user_analytics findUnique
   */
  export type user_analyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter, which user_analytics to fetch.
     */
    where: user_analyticsWhereUniqueInput
  }

  /**
   * user_analytics findUniqueOrThrow
   */
  export type user_analyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter, which user_analytics to fetch.
     */
    where: user_analyticsWhereUniqueInput
  }

  /**
   * user_analytics findFirst
   */
  export type user_analyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter, which user_analytics to fetch.
     */
    where?: user_analyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_analytics to fetch.
     */
    orderBy?: user_analyticsOrderByWithRelationInput | user_analyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_analytics.
     */
    cursor?: user_analyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_analytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_analytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_analytics.
     */
    distinct?: User_analyticsScalarFieldEnum | User_analyticsScalarFieldEnum[]
  }

  /**
   * user_analytics findFirstOrThrow
   */
  export type user_analyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter, which user_analytics to fetch.
     */
    where?: user_analyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_analytics to fetch.
     */
    orderBy?: user_analyticsOrderByWithRelationInput | user_analyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_analytics.
     */
    cursor?: user_analyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_analytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_analytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_analytics.
     */
    distinct?: User_analyticsScalarFieldEnum | User_analyticsScalarFieldEnum[]
  }

  /**
   * user_analytics findMany
   */
  export type user_analyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter, which user_analytics to fetch.
     */
    where?: user_analyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_analytics to fetch.
     */
    orderBy?: user_analyticsOrderByWithRelationInput | user_analyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_analytics.
     */
    cursor?: user_analyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_analytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_analytics.
     */
    skip?: number
    distinct?: User_analyticsScalarFieldEnum | User_analyticsScalarFieldEnum[]
  }

  /**
   * user_analytics create
   */
  export type user_analyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_analytics.
     */
    data: XOR<user_analyticsCreateInput, user_analyticsUncheckedCreateInput>
  }

  /**
   * user_analytics createMany
   */
  export type user_analyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_analytics.
     */
    data: user_analyticsCreateManyInput | user_analyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_analytics createManyAndReturn
   */
  export type user_analyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * The data used to create many user_analytics.
     */
    data: user_analyticsCreateManyInput | user_analyticsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_analytics update
   */
  export type user_analyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_analytics.
     */
    data: XOR<user_analyticsUpdateInput, user_analyticsUncheckedUpdateInput>
    /**
     * Choose, which user_analytics to update.
     */
    where: user_analyticsWhereUniqueInput
  }

  /**
   * user_analytics updateMany
   */
  export type user_analyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_analytics.
     */
    data: XOR<user_analyticsUpdateManyMutationInput, user_analyticsUncheckedUpdateManyInput>
    /**
     * Filter which user_analytics to update
     */
    where?: user_analyticsWhereInput
    /**
     * Limit how many user_analytics to update.
     */
    limit?: number
  }

  /**
   * user_analytics updateManyAndReturn
   */
  export type user_analyticsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * The data used to update user_analytics.
     */
    data: XOR<user_analyticsUpdateManyMutationInput, user_analyticsUncheckedUpdateManyInput>
    /**
     * Filter which user_analytics to update
     */
    where?: user_analyticsWhereInput
    /**
     * Limit how many user_analytics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_analytics upsert
   */
  export type user_analyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_analytics to update in case it exists.
     */
    where: user_analyticsWhereUniqueInput
    /**
     * In case the user_analytics found by the `where` argument doesn't exist, create a new user_analytics with this data.
     */
    create: XOR<user_analyticsCreateInput, user_analyticsUncheckedCreateInput>
    /**
     * In case the user_analytics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_analyticsUpdateInput, user_analyticsUncheckedUpdateInput>
  }

  /**
   * user_analytics delete
   */
  export type user_analyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    /**
     * Filter which user_analytics to delete.
     */
    where: user_analyticsWhereUniqueInput
  }

  /**
   * user_analytics deleteMany
   */
  export type user_analyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_analytics to delete
     */
    where?: user_analyticsWhereInput
    /**
     * Limit how many user_analytics to delete.
     */
    limit?: number
  }

  /**
   * user_analytics without action
   */
  export type user_analyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
  }


  /**
   * Model user_audit_logs
   */

  export type AggregateUser_audit_logs = {
    _count: User_audit_logsCountAggregateOutputType | null
    _min: User_audit_logsMinAggregateOutputType | null
    _max: User_audit_logsMaxAggregateOutputType | null
  }

  export type User_audit_logsMinAggregateOutputType = {
    audit_id: string | null
    user_id: string | null
    action_type: string | null
    performed_by: string | null
    event_time: Date | null
  }

  export type User_audit_logsMaxAggregateOutputType = {
    audit_id: string | null
    user_id: string | null
    action_type: string | null
    performed_by: string | null
    event_time: Date | null
  }

  export type User_audit_logsCountAggregateOutputType = {
    audit_id: number
    user_id: number
    action_type: number
    details: number
    performed_by: number
    event_time: number
    _all: number
  }


  export type User_audit_logsMinAggregateInputType = {
    audit_id?: true
    user_id?: true
    action_type?: true
    performed_by?: true
    event_time?: true
  }

  export type User_audit_logsMaxAggregateInputType = {
    audit_id?: true
    user_id?: true
    action_type?: true
    performed_by?: true
    event_time?: true
  }

  export type User_audit_logsCountAggregateInputType = {
    audit_id?: true
    user_id?: true
    action_type?: true
    details?: true
    performed_by?: true
    event_time?: true
    _all?: true
  }

  export type User_audit_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_audit_logs to aggregate.
     */
    where?: user_audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_audit_logs to fetch.
     */
    orderBy?: user_audit_logsOrderByWithRelationInput | user_audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_audit_logs
    **/
    _count?: true | User_audit_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_audit_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_audit_logsMaxAggregateInputType
  }

  export type GetUser_audit_logsAggregateType<T extends User_audit_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_audit_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_audit_logs[P]>
      : GetScalarType<T[P], AggregateUser_audit_logs[P]>
  }




  export type user_audit_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_audit_logsWhereInput
    orderBy?: user_audit_logsOrderByWithAggregationInput | user_audit_logsOrderByWithAggregationInput[]
    by: User_audit_logsScalarFieldEnum[] | User_audit_logsScalarFieldEnum
    having?: user_audit_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_audit_logsCountAggregateInputType | true
    _min?: User_audit_logsMinAggregateInputType
    _max?: User_audit_logsMaxAggregateInputType
  }

  export type User_audit_logsGroupByOutputType = {
    audit_id: string
    user_id: string | null
    action_type: string
    details: JsonValue | null
    performed_by: string | null
    event_time: Date
    _count: User_audit_logsCountAggregateOutputType | null
    _min: User_audit_logsMinAggregateOutputType | null
    _max: User_audit_logsMaxAggregateOutputType | null
  }

  type GetUser_audit_logsGroupByPayload<T extends user_audit_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_audit_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_audit_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_audit_logsGroupByOutputType[P]>
            : GetScalarType<T[P], User_audit_logsGroupByOutputType[P]>
        }
      >
    >


  export type user_audit_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    audit_id?: boolean
    user_id?: boolean
    action_type?: boolean
    details?: boolean
    performed_by?: boolean
    event_time?: boolean
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["user_audit_logs"]>

  export type user_audit_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    audit_id?: boolean
    user_id?: boolean
    action_type?: boolean
    details?: boolean
    performed_by?: boolean
    event_time?: boolean
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["user_audit_logs"]>

  export type user_audit_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    audit_id?: boolean
    user_id?: boolean
    action_type?: boolean
    details?: boolean
    performed_by?: boolean
    event_time?: boolean
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }, ExtArgs["result"]["user_audit_logs"]>

  export type user_audit_logsSelectScalar = {
    audit_id?: boolean
    user_id?: boolean
    action_type?: boolean
    details?: boolean
    performed_by?: boolean
    event_time?: boolean
  }

  export type user_audit_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"audit_id" | "user_id" | "action_type" | "details" | "performed_by" | "event_time", ExtArgs["result"]["user_audit_logs"]>
  export type user_audit_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }
  export type user_audit_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }
  export type user_audit_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | user_audit_logs$usersArgs<ExtArgs>
  }

  export type $user_audit_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_audit_logs"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      audit_id: string
      user_id: string | null
      action_type: string
      details: Prisma.JsonValue | null
      performed_by: string | null
      event_time: Date
    }, ExtArgs["result"]["user_audit_logs"]>
    composites: {}
  }

  type user_audit_logsGetPayload<S extends boolean | null | undefined | user_audit_logsDefaultArgs> = $Result.GetResult<Prisma.$user_audit_logsPayload, S>

  type user_audit_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_audit_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_audit_logsCountAggregateInputType | true
    }

  export interface user_audit_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_audit_logs'], meta: { name: 'user_audit_logs' } }
    /**
     * Find zero or one User_audit_logs that matches the filter.
     * @param {user_audit_logsFindUniqueArgs} args - Arguments to find a User_audit_logs
     * @example
     * // Get one User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_audit_logsFindUniqueArgs>(args: SelectSubset<T, user_audit_logsFindUniqueArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_audit_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_audit_logsFindUniqueOrThrowArgs} args - Arguments to find a User_audit_logs
     * @example
     * // Get one User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_audit_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_audit_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsFindFirstArgs} args - Arguments to find a User_audit_logs
     * @example
     * // Get one User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_audit_logsFindFirstArgs>(args?: SelectSubset<T, user_audit_logsFindFirstArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_audit_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsFindFirstOrThrowArgs} args - Arguments to find a User_audit_logs
     * @example
     * // Get one User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_audit_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_audit_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_audit_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findMany()
     * 
     * // Get first 10 User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.findMany({ take: 10 })
     * 
     * // Only select the `audit_id`
     * const user_audit_logsWithAudit_idOnly = await prisma.user_audit_logs.findMany({ select: { audit_id: true } })
     * 
     */
    findMany<T extends user_audit_logsFindManyArgs>(args?: SelectSubset<T, user_audit_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_audit_logs.
     * @param {user_audit_logsCreateArgs} args - Arguments to create a User_audit_logs.
     * @example
     * // Create one User_audit_logs
     * const User_audit_logs = await prisma.user_audit_logs.create({
     *   data: {
     *     // ... data to create a User_audit_logs
     *   }
     * })
     * 
     */
    create<T extends user_audit_logsCreateArgs>(args: SelectSubset<T, user_audit_logsCreateArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_audit_logs.
     * @param {user_audit_logsCreateManyArgs} args - Arguments to create many User_audit_logs.
     * @example
     * // Create many User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_audit_logsCreateManyArgs>(args?: SelectSubset<T, user_audit_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_audit_logs and returns the data saved in the database.
     * @param {user_audit_logsCreateManyAndReturnArgs} args - Arguments to create many User_audit_logs.
     * @example
     * // Create many User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_audit_logs and only return the `audit_id`
     * const user_audit_logsWithAudit_idOnly = await prisma.user_audit_logs.createManyAndReturn({
     *   select: { audit_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_audit_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_audit_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_audit_logs.
     * @param {user_audit_logsDeleteArgs} args - Arguments to delete one User_audit_logs.
     * @example
     * // Delete one User_audit_logs
     * const User_audit_logs = await prisma.user_audit_logs.delete({
     *   where: {
     *     // ... filter to delete one User_audit_logs
     *   }
     * })
     * 
     */
    delete<T extends user_audit_logsDeleteArgs>(args: SelectSubset<T, user_audit_logsDeleteArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_audit_logs.
     * @param {user_audit_logsUpdateArgs} args - Arguments to update one User_audit_logs.
     * @example
     * // Update one User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_audit_logsUpdateArgs>(args: SelectSubset<T, user_audit_logsUpdateArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_audit_logs.
     * @param {user_audit_logsDeleteManyArgs} args - Arguments to filter User_audit_logs to delete.
     * @example
     * // Delete a few User_audit_logs
     * const { count } = await prisma.user_audit_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_audit_logsDeleteManyArgs>(args?: SelectSubset<T, user_audit_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_audit_logsUpdateManyArgs>(args: SelectSubset<T, user_audit_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_audit_logs and returns the data updated in the database.
     * @param {user_audit_logsUpdateManyAndReturnArgs} args - Arguments to update many User_audit_logs.
     * @example
     * // Update many User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_audit_logs and only return the `audit_id`
     * const user_audit_logsWithAudit_idOnly = await prisma.user_audit_logs.updateManyAndReturn({
     *   select: { audit_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_audit_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_audit_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_audit_logs.
     * @param {user_audit_logsUpsertArgs} args - Arguments to update or create a User_audit_logs.
     * @example
     * // Update or create a User_audit_logs
     * const user_audit_logs = await prisma.user_audit_logs.upsert({
     *   create: {
     *     // ... data to create a User_audit_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_audit_logs we want to update
     *   }
     * })
     */
    upsert<T extends user_audit_logsUpsertArgs>(args: SelectSubset<T, user_audit_logsUpsertArgs<ExtArgs>>): Prisma__user_audit_logsClient<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsCountArgs} args - Arguments to filter User_audit_logs to count.
     * @example
     * // Count the number of User_audit_logs
     * const count = await prisma.user_audit_logs.count({
     *   where: {
     *     // ... the filter for the User_audit_logs we want to count
     *   }
     * })
    **/
    count<T extends user_audit_logsCountArgs>(
      args?: Subset<T, user_audit_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_audit_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_audit_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_audit_logsAggregateArgs>(args: Subset<T, User_audit_logsAggregateArgs>): Prisma.PrismaPromise<GetUser_audit_logsAggregateType<T>>

    /**
     * Group by User_audit_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_audit_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_audit_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_audit_logsGroupByArgs['orderBy'] }
        : { orderBy?: user_audit_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_audit_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_audit_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_audit_logs model
   */
  readonly fields: user_audit_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_audit_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_audit_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends user_audit_logs$usersArgs<ExtArgs> = {}>(args?: Subset<T, user_audit_logs$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_audit_logs model
   */ 
  interface user_audit_logsFieldRefs {
    readonly audit_id: FieldRef<"user_audit_logs", 'String'>
    readonly user_id: FieldRef<"user_audit_logs", 'String'>
    readonly action_type: FieldRef<"user_audit_logs", 'String'>
    readonly details: FieldRef<"user_audit_logs", 'Json'>
    readonly performed_by: FieldRef<"user_audit_logs", 'String'>
    readonly event_time: FieldRef<"user_audit_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_audit_logs findUnique
   */
  export type user_audit_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which user_audit_logs to fetch.
     */
    where: user_audit_logsWhereUniqueInput
  }

  /**
   * user_audit_logs findUniqueOrThrow
   */
  export type user_audit_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which user_audit_logs to fetch.
     */
    where: user_audit_logsWhereUniqueInput
  }

  /**
   * user_audit_logs findFirst
   */
  export type user_audit_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which user_audit_logs to fetch.
     */
    where?: user_audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_audit_logs to fetch.
     */
    orderBy?: user_audit_logsOrderByWithRelationInput | user_audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_audit_logs.
     */
    cursor?: user_audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_audit_logs.
     */
    distinct?: User_audit_logsScalarFieldEnum | User_audit_logsScalarFieldEnum[]
  }

  /**
   * user_audit_logs findFirstOrThrow
   */
  export type user_audit_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which user_audit_logs to fetch.
     */
    where?: user_audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_audit_logs to fetch.
     */
    orderBy?: user_audit_logsOrderByWithRelationInput | user_audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_audit_logs.
     */
    cursor?: user_audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_audit_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_audit_logs.
     */
    distinct?: User_audit_logsScalarFieldEnum | User_audit_logsScalarFieldEnum[]
  }

  /**
   * user_audit_logs findMany
   */
  export type user_audit_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter, which user_audit_logs to fetch.
     */
    where?: user_audit_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_audit_logs to fetch.
     */
    orderBy?: user_audit_logsOrderByWithRelationInput | user_audit_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_audit_logs.
     */
    cursor?: user_audit_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_audit_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_audit_logs.
     */
    skip?: number
    distinct?: User_audit_logsScalarFieldEnum | User_audit_logsScalarFieldEnum[]
  }

  /**
   * user_audit_logs create
   */
  export type user_audit_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_audit_logs.
     */
    data: XOR<user_audit_logsCreateInput, user_audit_logsUncheckedCreateInput>
  }

  /**
   * user_audit_logs createMany
   */
  export type user_audit_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_audit_logs.
     */
    data: user_audit_logsCreateManyInput | user_audit_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_audit_logs createManyAndReturn
   */
  export type user_audit_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * The data used to create many user_audit_logs.
     */
    data: user_audit_logsCreateManyInput | user_audit_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_audit_logs update
   */
  export type user_audit_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_audit_logs.
     */
    data: XOR<user_audit_logsUpdateInput, user_audit_logsUncheckedUpdateInput>
    /**
     * Choose, which user_audit_logs to update.
     */
    where: user_audit_logsWhereUniqueInput
  }

  /**
   * user_audit_logs updateMany
   */
  export type user_audit_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_audit_logs.
     */
    data: XOR<user_audit_logsUpdateManyMutationInput, user_audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which user_audit_logs to update
     */
    where?: user_audit_logsWhereInput
    /**
     * Limit how many user_audit_logs to update.
     */
    limit?: number
  }

  /**
   * user_audit_logs updateManyAndReturn
   */
  export type user_audit_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * The data used to update user_audit_logs.
     */
    data: XOR<user_audit_logsUpdateManyMutationInput, user_audit_logsUncheckedUpdateManyInput>
    /**
     * Filter which user_audit_logs to update
     */
    where?: user_audit_logsWhereInput
    /**
     * Limit how many user_audit_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_audit_logs upsert
   */
  export type user_audit_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_audit_logs to update in case it exists.
     */
    where: user_audit_logsWhereUniqueInput
    /**
     * In case the user_audit_logs found by the `where` argument doesn't exist, create a new user_audit_logs with this data.
     */
    create: XOR<user_audit_logsCreateInput, user_audit_logsUncheckedCreateInput>
    /**
     * In case the user_audit_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_audit_logsUpdateInput, user_audit_logsUncheckedUpdateInput>
  }

  /**
   * user_audit_logs delete
   */
  export type user_audit_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    /**
     * Filter which user_audit_logs to delete.
     */
    where: user_audit_logsWhereUniqueInput
  }

  /**
   * user_audit_logs deleteMany
   */
  export type user_audit_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_audit_logs to delete
     */
    where?: user_audit_logsWhereInput
    /**
     * Limit how many user_audit_logs to delete.
     */
    limit?: number
  }

  /**
   * user_audit_logs.users
   */
  export type user_audit_logs$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * user_audit_logs without action
   */
  export type user_audit_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
  }


  /**
   * Model user_blocklist
   */

  export type AggregateUser_blocklist = {
    _count: User_blocklistCountAggregateOutputType | null
    _min: User_blocklistMinAggregateOutputType | null
    _max: User_blocklistMaxAggregateOutputType | null
  }

  export type User_blocklistMinAggregateOutputType = {
    block_id: string | null
    user_id: string | null
    reason: string | null
    blocked_by: string | null
    blocked_at: Date | null
  }

  export type User_blocklistMaxAggregateOutputType = {
    block_id: string | null
    user_id: string | null
    reason: string | null
    blocked_by: string | null
    blocked_at: Date | null
  }

  export type User_blocklistCountAggregateOutputType = {
    block_id: number
    user_id: number
    reason: number
    blocked_by: number
    blocked_at: number
    _all: number
  }


  export type User_blocklistMinAggregateInputType = {
    block_id?: true
    user_id?: true
    reason?: true
    blocked_by?: true
    blocked_at?: true
  }

  export type User_blocklistMaxAggregateInputType = {
    block_id?: true
    user_id?: true
    reason?: true
    blocked_by?: true
    blocked_at?: true
  }

  export type User_blocklistCountAggregateInputType = {
    block_id?: true
    user_id?: true
    reason?: true
    blocked_by?: true
    blocked_at?: true
    _all?: true
  }

  export type User_blocklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_blocklist to aggregate.
     */
    where?: user_blocklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocklists to fetch.
     */
    orderBy?: user_blocklistOrderByWithRelationInput | user_blocklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_blocklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_blocklists
    **/
    _count?: true | User_blocklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_blocklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_blocklistMaxAggregateInputType
  }

  export type GetUser_blocklistAggregateType<T extends User_blocklistAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_blocklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_blocklist[P]>
      : GetScalarType<T[P], AggregateUser_blocklist[P]>
  }




  export type user_blocklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_blocklistWhereInput
    orderBy?: user_blocklistOrderByWithAggregationInput | user_blocklistOrderByWithAggregationInput[]
    by: User_blocklistScalarFieldEnum[] | User_blocklistScalarFieldEnum
    having?: user_blocklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_blocklistCountAggregateInputType | true
    _min?: User_blocklistMinAggregateInputType
    _max?: User_blocklistMaxAggregateInputType
  }

  export type User_blocklistGroupByOutputType = {
    block_id: string
    user_id: string | null
    reason: string
    blocked_by: string | null
    blocked_at: Date
    _count: User_blocklistCountAggregateOutputType | null
    _min: User_blocklistMinAggregateOutputType | null
    _max: User_blocklistMaxAggregateOutputType | null
  }

  type GetUser_blocklistGroupByPayload<T extends user_blocklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_blocklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_blocklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_blocklistGroupByOutputType[P]>
            : GetScalarType<T[P], User_blocklistGroupByOutputType[P]>
        }
      >
    >


  export type user_blocklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    block_id?: boolean
    user_id?: boolean
    reason?: boolean
    blocked_by?: boolean
    blocked_at?: boolean
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }, ExtArgs["result"]["user_blocklist"]>

  export type user_blocklistSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    block_id?: boolean
    user_id?: boolean
    reason?: boolean
    blocked_by?: boolean
    blocked_at?: boolean
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }, ExtArgs["result"]["user_blocklist"]>

  export type user_blocklistSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    block_id?: boolean
    user_id?: boolean
    reason?: boolean
    blocked_by?: boolean
    blocked_at?: boolean
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }, ExtArgs["result"]["user_blocklist"]>

  export type user_blocklistSelectScalar = {
    block_id?: boolean
    user_id?: boolean
    reason?: boolean
    blocked_by?: boolean
    blocked_at?: boolean
  }

  export type user_blocklistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"block_id" | "user_id" | "reason" | "blocked_by" | "blocked_at", ExtArgs["result"]["user_blocklist"]>
  export type user_blocklistInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }
  export type user_blocklistIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }
  export type user_blocklistIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_user_blocklist_blocked_byTousers?: boolean | user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>
    users_user_blocklist_user_idTousers?: boolean | user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>
  }

  export type $user_blocklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_blocklist"
    objects: {
      users_user_blocklist_blocked_byTousers: Prisma.$usersPayload<ExtArgs> | null
      users_user_blocklist_user_idTousers: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      block_id: string
      user_id: string | null
      reason: string
      blocked_by: string | null
      blocked_at: Date
    }, ExtArgs["result"]["user_blocklist"]>
    composites: {}
  }

  type user_blocklistGetPayload<S extends boolean | null | undefined | user_blocklistDefaultArgs> = $Result.GetResult<Prisma.$user_blocklistPayload, S>

  type user_blocklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_blocklistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_blocklistCountAggregateInputType | true
    }

  export interface user_blocklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_blocklist'], meta: { name: 'user_blocklist' } }
    /**
     * Find zero or one User_blocklist that matches the filter.
     * @param {user_blocklistFindUniqueArgs} args - Arguments to find a User_blocklist
     * @example
     * // Get one User_blocklist
     * const user_blocklist = await prisma.user_blocklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_blocklistFindUniqueArgs>(args: SelectSubset<T, user_blocklistFindUniqueArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_blocklist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_blocklistFindUniqueOrThrowArgs} args - Arguments to find a User_blocklist
     * @example
     * // Get one User_blocklist
     * const user_blocklist = await prisma.user_blocklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_blocklistFindUniqueOrThrowArgs>(args: SelectSubset<T, user_blocklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_blocklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistFindFirstArgs} args - Arguments to find a User_blocklist
     * @example
     * // Get one User_blocklist
     * const user_blocklist = await prisma.user_blocklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_blocklistFindFirstArgs>(args?: SelectSubset<T, user_blocklistFindFirstArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_blocklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistFindFirstOrThrowArgs} args - Arguments to find a User_blocklist
     * @example
     * // Get one User_blocklist
     * const user_blocklist = await prisma.user_blocklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_blocklistFindFirstOrThrowArgs>(args?: SelectSubset<T, user_blocklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_blocklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_blocklists
     * const user_blocklists = await prisma.user_blocklist.findMany()
     * 
     * // Get first 10 User_blocklists
     * const user_blocklists = await prisma.user_blocklist.findMany({ take: 10 })
     * 
     * // Only select the `block_id`
     * const user_blocklistWithBlock_idOnly = await prisma.user_blocklist.findMany({ select: { block_id: true } })
     * 
     */
    findMany<T extends user_blocklistFindManyArgs>(args?: SelectSubset<T, user_blocklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_blocklist.
     * @param {user_blocklistCreateArgs} args - Arguments to create a User_blocklist.
     * @example
     * // Create one User_blocklist
     * const User_blocklist = await prisma.user_blocklist.create({
     *   data: {
     *     // ... data to create a User_blocklist
     *   }
     * })
     * 
     */
    create<T extends user_blocklistCreateArgs>(args: SelectSubset<T, user_blocklistCreateArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_blocklists.
     * @param {user_blocklistCreateManyArgs} args - Arguments to create many User_blocklists.
     * @example
     * // Create many User_blocklists
     * const user_blocklist = await prisma.user_blocklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_blocklistCreateManyArgs>(args?: SelectSubset<T, user_blocklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_blocklists and returns the data saved in the database.
     * @param {user_blocklistCreateManyAndReturnArgs} args - Arguments to create many User_blocklists.
     * @example
     * // Create many User_blocklists
     * const user_blocklist = await prisma.user_blocklist.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_blocklists and only return the `block_id`
     * const user_blocklistWithBlock_idOnly = await prisma.user_blocklist.createManyAndReturn({
     *   select: { block_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_blocklistCreateManyAndReturnArgs>(args?: SelectSubset<T, user_blocklistCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_blocklist.
     * @param {user_blocklistDeleteArgs} args - Arguments to delete one User_blocklist.
     * @example
     * // Delete one User_blocklist
     * const User_blocklist = await prisma.user_blocklist.delete({
     *   where: {
     *     // ... filter to delete one User_blocklist
     *   }
     * })
     * 
     */
    delete<T extends user_blocklistDeleteArgs>(args: SelectSubset<T, user_blocklistDeleteArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_blocklist.
     * @param {user_blocklistUpdateArgs} args - Arguments to update one User_blocklist.
     * @example
     * // Update one User_blocklist
     * const user_blocklist = await prisma.user_blocklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_blocklistUpdateArgs>(args: SelectSubset<T, user_blocklistUpdateArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_blocklists.
     * @param {user_blocklistDeleteManyArgs} args - Arguments to filter User_blocklists to delete.
     * @example
     * // Delete a few User_blocklists
     * const { count } = await prisma.user_blocklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_blocklistDeleteManyArgs>(args?: SelectSubset<T, user_blocklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_blocklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_blocklists
     * const user_blocklist = await prisma.user_blocklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_blocklistUpdateManyArgs>(args: SelectSubset<T, user_blocklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_blocklists and returns the data updated in the database.
     * @param {user_blocklistUpdateManyAndReturnArgs} args - Arguments to update many User_blocklists.
     * @example
     * // Update many User_blocklists
     * const user_blocklist = await prisma.user_blocklist.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_blocklists and only return the `block_id`
     * const user_blocklistWithBlock_idOnly = await prisma.user_blocklist.updateManyAndReturn({
     *   select: { block_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_blocklistUpdateManyAndReturnArgs>(args: SelectSubset<T, user_blocklistUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_blocklist.
     * @param {user_blocklistUpsertArgs} args - Arguments to update or create a User_blocklist.
     * @example
     * // Update or create a User_blocklist
     * const user_blocklist = await prisma.user_blocklist.upsert({
     *   create: {
     *     // ... data to create a User_blocklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_blocklist we want to update
     *   }
     * })
     */
    upsert<T extends user_blocklistUpsertArgs>(args: SelectSubset<T, user_blocklistUpsertArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_blocklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistCountArgs} args - Arguments to filter User_blocklists to count.
     * @example
     * // Count the number of User_blocklists
     * const count = await prisma.user_blocklist.count({
     *   where: {
     *     // ... the filter for the User_blocklists we want to count
     *   }
     * })
    **/
    count<T extends user_blocklistCountArgs>(
      args?: Subset<T, user_blocklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_blocklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_blocklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_blocklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_blocklistAggregateArgs>(args: Subset<T, User_blocklistAggregateArgs>): Prisma.PrismaPromise<GetUser_blocklistAggregateType<T>>

    /**
     * Group by User_blocklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_blocklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_blocklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_blocklistGroupByArgs['orderBy'] }
        : { orderBy?: user_blocklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_blocklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_blocklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_blocklist model
   */
  readonly fields: user_blocklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_blocklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_blocklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users_user_blocklist_blocked_byTousers<T extends user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users_user_blocklist_user_idTousers<T extends user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_blocklist model
   */ 
  interface user_blocklistFieldRefs {
    readonly block_id: FieldRef<"user_blocklist", 'String'>
    readonly user_id: FieldRef<"user_blocklist", 'String'>
    readonly reason: FieldRef<"user_blocklist", 'String'>
    readonly blocked_by: FieldRef<"user_blocklist", 'String'>
    readonly blocked_at: FieldRef<"user_blocklist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_blocklist findUnique
   */
  export type user_blocklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter, which user_blocklist to fetch.
     */
    where: user_blocklistWhereUniqueInput
  }

  /**
   * user_blocklist findUniqueOrThrow
   */
  export type user_blocklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter, which user_blocklist to fetch.
     */
    where: user_blocklistWhereUniqueInput
  }

  /**
   * user_blocklist findFirst
   */
  export type user_blocklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter, which user_blocklist to fetch.
     */
    where?: user_blocklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocklists to fetch.
     */
    orderBy?: user_blocklistOrderByWithRelationInput | user_blocklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_blocklists.
     */
    cursor?: user_blocklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_blocklists.
     */
    distinct?: User_blocklistScalarFieldEnum | User_blocklistScalarFieldEnum[]
  }

  /**
   * user_blocklist findFirstOrThrow
   */
  export type user_blocklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter, which user_blocklist to fetch.
     */
    where?: user_blocklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocklists to fetch.
     */
    orderBy?: user_blocklistOrderByWithRelationInput | user_blocklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_blocklists.
     */
    cursor?: user_blocklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_blocklists.
     */
    distinct?: User_blocklistScalarFieldEnum | User_blocklistScalarFieldEnum[]
  }

  /**
   * user_blocklist findMany
   */
  export type user_blocklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter, which user_blocklists to fetch.
     */
    where?: user_blocklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_blocklists to fetch.
     */
    orderBy?: user_blocklistOrderByWithRelationInput | user_blocklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_blocklists.
     */
    cursor?: user_blocklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_blocklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_blocklists.
     */
    skip?: number
    distinct?: User_blocklistScalarFieldEnum | User_blocklistScalarFieldEnum[]
  }

  /**
   * user_blocklist create
   */
  export type user_blocklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * The data needed to create a user_blocklist.
     */
    data: XOR<user_blocklistCreateInput, user_blocklistUncheckedCreateInput>
  }

  /**
   * user_blocklist createMany
   */
  export type user_blocklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_blocklists.
     */
    data: user_blocklistCreateManyInput | user_blocklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_blocklist createManyAndReturn
   */
  export type user_blocklistCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * The data used to create many user_blocklists.
     */
    data: user_blocklistCreateManyInput | user_blocklistCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_blocklist update
   */
  export type user_blocklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * The data needed to update a user_blocklist.
     */
    data: XOR<user_blocklistUpdateInput, user_blocklistUncheckedUpdateInput>
    /**
     * Choose, which user_blocklist to update.
     */
    where: user_blocklistWhereUniqueInput
  }

  /**
   * user_blocklist updateMany
   */
  export type user_blocklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_blocklists.
     */
    data: XOR<user_blocklistUpdateManyMutationInput, user_blocklistUncheckedUpdateManyInput>
    /**
     * Filter which user_blocklists to update
     */
    where?: user_blocklistWhereInput
    /**
     * Limit how many user_blocklists to update.
     */
    limit?: number
  }

  /**
   * user_blocklist updateManyAndReturn
   */
  export type user_blocklistUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * The data used to update user_blocklists.
     */
    data: XOR<user_blocklistUpdateManyMutationInput, user_blocklistUncheckedUpdateManyInput>
    /**
     * Filter which user_blocklists to update
     */
    where?: user_blocklistWhereInput
    /**
     * Limit how many user_blocklists to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_blocklist upsert
   */
  export type user_blocklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * The filter to search for the user_blocklist to update in case it exists.
     */
    where: user_blocklistWhereUniqueInput
    /**
     * In case the user_blocklist found by the `where` argument doesn't exist, create a new user_blocklist with this data.
     */
    create: XOR<user_blocklistCreateInput, user_blocklistUncheckedCreateInput>
    /**
     * In case the user_blocklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_blocklistUpdateInput, user_blocklistUncheckedUpdateInput>
  }

  /**
   * user_blocklist delete
   */
  export type user_blocklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    /**
     * Filter which user_blocklist to delete.
     */
    where: user_blocklistWhereUniqueInput
  }

  /**
   * user_blocklist deleteMany
   */
  export type user_blocklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_blocklists to delete
     */
    where?: user_blocklistWhereInput
    /**
     * Limit how many user_blocklists to delete.
     */
    limit?: number
  }

  /**
   * user_blocklist.users_user_blocklist_blocked_byTousers
   */
  export type user_blocklist$users_user_blocklist_blocked_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * user_blocklist.users_user_blocklist_user_idTousers
   */
  export type user_blocklist$users_user_blocklist_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * user_blocklist without action
   */
  export type user_blocklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
  }


  /**
   * Model user_certificates
   */

  export type AggregateUser_certificates = {
    _count: User_certificatesCountAggregateOutputType | null
    _min: User_certificatesMinAggregateOutputType | null
    _max: User_certificatesMaxAggregateOutputType | null
  }

  export type User_certificatesMinAggregateOutputType = {
    user_id: string | null
    public_key: string | null
    certificate: string | null
    created_at: Date | null
  }

  export type User_certificatesMaxAggregateOutputType = {
    user_id: string | null
    public_key: string | null
    certificate: string | null
    created_at: Date | null
  }

  export type User_certificatesCountAggregateOutputType = {
    user_id: number
    public_key: number
    certificate: number
    created_at: number
    _all: number
  }


  export type User_certificatesMinAggregateInputType = {
    user_id?: true
    public_key?: true
    certificate?: true
    created_at?: true
  }

  export type User_certificatesMaxAggregateInputType = {
    user_id?: true
    public_key?: true
    certificate?: true
    created_at?: true
  }

  export type User_certificatesCountAggregateInputType = {
    user_id?: true
    public_key?: true
    certificate?: true
    created_at?: true
    _all?: true
  }

  export type User_certificatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_certificates to aggregate.
     */
    where?: user_certificatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_certificates to fetch.
     */
    orderBy?: user_certificatesOrderByWithRelationInput | user_certificatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_certificatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_certificates
    **/
    _count?: true | User_certificatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_certificatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_certificatesMaxAggregateInputType
  }

  export type GetUser_certificatesAggregateType<T extends User_certificatesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_certificates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_certificates[P]>
      : GetScalarType<T[P], AggregateUser_certificates[P]>
  }




  export type user_certificatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_certificatesWhereInput
    orderBy?: user_certificatesOrderByWithAggregationInput | user_certificatesOrderByWithAggregationInput[]
    by: User_certificatesScalarFieldEnum[] | User_certificatesScalarFieldEnum
    having?: user_certificatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_certificatesCountAggregateInputType | true
    _min?: User_certificatesMinAggregateInputType
    _max?: User_certificatesMaxAggregateInputType
  }

  export type User_certificatesGroupByOutputType = {
    user_id: string
    public_key: string
    certificate: string | null
    created_at: Date
    _count: User_certificatesCountAggregateOutputType | null
    _min: User_certificatesMinAggregateOutputType | null
    _max: User_certificatesMaxAggregateOutputType | null
  }

  type GetUser_certificatesGroupByPayload<T extends user_certificatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_certificatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_certificatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_certificatesGroupByOutputType[P]>
            : GetScalarType<T[P], User_certificatesGroupByOutputType[P]>
        }
      >
    >


  export type user_certificatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    public_key?: boolean
    certificate?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_certificates"]>

  export type user_certificatesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    public_key?: boolean
    certificate?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_certificates"]>

  export type user_certificatesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    public_key?: boolean
    certificate?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_certificates"]>

  export type user_certificatesSelectScalar = {
    user_id?: boolean
    public_key?: boolean
    certificate?: boolean
    created_at?: boolean
  }

  export type user_certificatesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "public_key" | "certificate" | "created_at", ExtArgs["result"]["user_certificates"]>
  export type user_certificatesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_certificatesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_certificatesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_certificatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_certificates"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      public_key: string
      certificate: string | null
      created_at: Date
    }, ExtArgs["result"]["user_certificates"]>
    composites: {}
  }

  type user_certificatesGetPayload<S extends boolean | null | undefined | user_certificatesDefaultArgs> = $Result.GetResult<Prisma.$user_certificatesPayload, S>

  type user_certificatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_certificatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_certificatesCountAggregateInputType | true
    }

  export interface user_certificatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_certificates'], meta: { name: 'user_certificates' } }
    /**
     * Find zero or one User_certificates that matches the filter.
     * @param {user_certificatesFindUniqueArgs} args - Arguments to find a User_certificates
     * @example
     * // Get one User_certificates
     * const user_certificates = await prisma.user_certificates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_certificatesFindUniqueArgs>(args: SelectSubset<T, user_certificatesFindUniqueArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_certificates that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_certificatesFindUniqueOrThrowArgs} args - Arguments to find a User_certificates
     * @example
     * // Get one User_certificates
     * const user_certificates = await prisma.user_certificates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_certificatesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_certificatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_certificates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesFindFirstArgs} args - Arguments to find a User_certificates
     * @example
     * // Get one User_certificates
     * const user_certificates = await prisma.user_certificates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_certificatesFindFirstArgs>(args?: SelectSubset<T, user_certificatesFindFirstArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_certificates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesFindFirstOrThrowArgs} args - Arguments to find a User_certificates
     * @example
     * // Get one User_certificates
     * const user_certificates = await prisma.user_certificates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_certificatesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_certificatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_certificates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_certificates
     * const user_certificates = await prisma.user_certificates.findMany()
     * 
     * // Get first 10 User_certificates
     * const user_certificates = await prisma.user_certificates.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_certificatesWithUser_idOnly = await prisma.user_certificates.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_certificatesFindManyArgs>(args?: SelectSubset<T, user_certificatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_certificates.
     * @param {user_certificatesCreateArgs} args - Arguments to create a User_certificates.
     * @example
     * // Create one User_certificates
     * const User_certificates = await prisma.user_certificates.create({
     *   data: {
     *     // ... data to create a User_certificates
     *   }
     * })
     * 
     */
    create<T extends user_certificatesCreateArgs>(args: SelectSubset<T, user_certificatesCreateArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_certificates.
     * @param {user_certificatesCreateManyArgs} args - Arguments to create many User_certificates.
     * @example
     * // Create many User_certificates
     * const user_certificates = await prisma.user_certificates.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_certificatesCreateManyArgs>(args?: SelectSubset<T, user_certificatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_certificates and returns the data saved in the database.
     * @param {user_certificatesCreateManyAndReturnArgs} args - Arguments to create many User_certificates.
     * @example
     * // Create many User_certificates
     * const user_certificates = await prisma.user_certificates.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_certificates and only return the `user_id`
     * const user_certificatesWithUser_idOnly = await prisma.user_certificates.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_certificatesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_certificatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_certificates.
     * @param {user_certificatesDeleteArgs} args - Arguments to delete one User_certificates.
     * @example
     * // Delete one User_certificates
     * const User_certificates = await prisma.user_certificates.delete({
     *   where: {
     *     // ... filter to delete one User_certificates
     *   }
     * })
     * 
     */
    delete<T extends user_certificatesDeleteArgs>(args: SelectSubset<T, user_certificatesDeleteArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_certificates.
     * @param {user_certificatesUpdateArgs} args - Arguments to update one User_certificates.
     * @example
     * // Update one User_certificates
     * const user_certificates = await prisma.user_certificates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_certificatesUpdateArgs>(args: SelectSubset<T, user_certificatesUpdateArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_certificates.
     * @param {user_certificatesDeleteManyArgs} args - Arguments to filter User_certificates to delete.
     * @example
     * // Delete a few User_certificates
     * const { count } = await prisma.user_certificates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_certificatesDeleteManyArgs>(args?: SelectSubset<T, user_certificatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_certificates
     * const user_certificates = await prisma.user_certificates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_certificatesUpdateManyArgs>(args: SelectSubset<T, user_certificatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_certificates and returns the data updated in the database.
     * @param {user_certificatesUpdateManyAndReturnArgs} args - Arguments to update many User_certificates.
     * @example
     * // Update many User_certificates
     * const user_certificates = await prisma.user_certificates.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_certificates and only return the `user_id`
     * const user_certificatesWithUser_idOnly = await prisma.user_certificates.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_certificatesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_certificatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_certificates.
     * @param {user_certificatesUpsertArgs} args - Arguments to update or create a User_certificates.
     * @example
     * // Update or create a User_certificates
     * const user_certificates = await prisma.user_certificates.upsert({
     *   create: {
     *     // ... data to create a User_certificates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_certificates we want to update
     *   }
     * })
     */
    upsert<T extends user_certificatesUpsertArgs>(args: SelectSubset<T, user_certificatesUpsertArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesCountArgs} args - Arguments to filter User_certificates to count.
     * @example
     * // Count the number of User_certificates
     * const count = await prisma.user_certificates.count({
     *   where: {
     *     // ... the filter for the User_certificates we want to count
     *   }
     * })
    **/
    count<T extends user_certificatesCountArgs>(
      args?: Subset<T, user_certificatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_certificatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_certificatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_certificatesAggregateArgs>(args: Subset<T, User_certificatesAggregateArgs>): Prisma.PrismaPromise<GetUser_certificatesAggregateType<T>>

    /**
     * Group by User_certificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_certificatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_certificatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_certificatesGroupByArgs['orderBy'] }
        : { orderBy?: user_certificatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_certificatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_certificatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_certificates model
   */
  readonly fields: user_certificatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_certificates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_certificatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_certificates model
   */ 
  interface user_certificatesFieldRefs {
    readonly user_id: FieldRef<"user_certificates", 'String'>
    readonly public_key: FieldRef<"user_certificates", 'String'>
    readonly certificate: FieldRef<"user_certificates", 'String'>
    readonly created_at: FieldRef<"user_certificates", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_certificates findUnique
   */
  export type user_certificatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter, which user_certificates to fetch.
     */
    where: user_certificatesWhereUniqueInput
  }

  /**
   * user_certificates findUniqueOrThrow
   */
  export type user_certificatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter, which user_certificates to fetch.
     */
    where: user_certificatesWhereUniqueInput
  }

  /**
   * user_certificates findFirst
   */
  export type user_certificatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter, which user_certificates to fetch.
     */
    where?: user_certificatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_certificates to fetch.
     */
    orderBy?: user_certificatesOrderByWithRelationInput | user_certificatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_certificates.
     */
    cursor?: user_certificatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_certificates.
     */
    distinct?: User_certificatesScalarFieldEnum | User_certificatesScalarFieldEnum[]
  }

  /**
   * user_certificates findFirstOrThrow
   */
  export type user_certificatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter, which user_certificates to fetch.
     */
    where?: user_certificatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_certificates to fetch.
     */
    orderBy?: user_certificatesOrderByWithRelationInput | user_certificatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_certificates.
     */
    cursor?: user_certificatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_certificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_certificates.
     */
    distinct?: User_certificatesScalarFieldEnum | User_certificatesScalarFieldEnum[]
  }

  /**
   * user_certificates findMany
   */
  export type user_certificatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter, which user_certificates to fetch.
     */
    where?: user_certificatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_certificates to fetch.
     */
    orderBy?: user_certificatesOrderByWithRelationInput | user_certificatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_certificates.
     */
    cursor?: user_certificatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_certificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_certificates.
     */
    skip?: number
    distinct?: User_certificatesScalarFieldEnum | User_certificatesScalarFieldEnum[]
  }

  /**
   * user_certificates create
   */
  export type user_certificatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * The data needed to create a user_certificates.
     */
    data: XOR<user_certificatesCreateInput, user_certificatesUncheckedCreateInput>
  }

  /**
   * user_certificates createMany
   */
  export type user_certificatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_certificates.
     */
    data: user_certificatesCreateManyInput | user_certificatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_certificates createManyAndReturn
   */
  export type user_certificatesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * The data used to create many user_certificates.
     */
    data: user_certificatesCreateManyInput | user_certificatesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_certificates update
   */
  export type user_certificatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * The data needed to update a user_certificates.
     */
    data: XOR<user_certificatesUpdateInput, user_certificatesUncheckedUpdateInput>
    /**
     * Choose, which user_certificates to update.
     */
    where: user_certificatesWhereUniqueInput
  }

  /**
   * user_certificates updateMany
   */
  export type user_certificatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_certificates.
     */
    data: XOR<user_certificatesUpdateManyMutationInput, user_certificatesUncheckedUpdateManyInput>
    /**
     * Filter which user_certificates to update
     */
    where?: user_certificatesWhereInput
    /**
     * Limit how many user_certificates to update.
     */
    limit?: number
  }

  /**
   * user_certificates updateManyAndReturn
   */
  export type user_certificatesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * The data used to update user_certificates.
     */
    data: XOR<user_certificatesUpdateManyMutationInput, user_certificatesUncheckedUpdateManyInput>
    /**
     * Filter which user_certificates to update
     */
    where?: user_certificatesWhereInput
    /**
     * Limit how many user_certificates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_certificates upsert
   */
  export type user_certificatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * The filter to search for the user_certificates to update in case it exists.
     */
    where: user_certificatesWhereUniqueInput
    /**
     * In case the user_certificates found by the `where` argument doesn't exist, create a new user_certificates with this data.
     */
    create: XOR<user_certificatesCreateInput, user_certificatesUncheckedCreateInput>
    /**
     * In case the user_certificates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_certificatesUpdateInput, user_certificatesUncheckedUpdateInput>
  }

  /**
   * user_certificates delete
   */
  export type user_certificatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    /**
     * Filter which user_certificates to delete.
     */
    where: user_certificatesWhereUniqueInput
  }

  /**
   * user_certificates deleteMany
   */
  export type user_certificatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_certificates to delete
     */
    where?: user_certificatesWhereInput
    /**
     * Limit how many user_certificates to delete.
     */
    limit?: number
  }

  /**
   * user_certificates without action
   */
  export type user_certificatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
  }


  /**
   * Model user_profile
   */

  export type AggregateUser_profile = {
    _count: User_profileCountAggregateOutputType | null
    _min: User_profileMinAggregateOutputType | null
    _max: User_profileMaxAggregateOutputType | null
  }

  export type User_profileMinAggregateOutputType = {
    user_id: string | null
    username: string | null
    display_name: string | null
    bio: string | null
    avatar_url: string | null
    website: string | null
    updated_at: Date | null
  }

  export type User_profileMaxAggregateOutputType = {
    user_id: string | null
    username: string | null
    display_name: string | null
    bio: string | null
    avatar_url: string | null
    website: string | null
    updated_at: Date | null
  }

  export type User_profileCountAggregateOutputType = {
    user_id: number
    username: number
    display_name: number
    bio: number
    avatar_url: number
    website: number
    social_links: number
    updated_at: number
    _all: number
  }


  export type User_profileMinAggregateInputType = {
    user_id?: true
    username?: true
    display_name?: true
    bio?: true
    avatar_url?: true
    website?: true
    updated_at?: true
  }

  export type User_profileMaxAggregateInputType = {
    user_id?: true
    username?: true
    display_name?: true
    bio?: true
    avatar_url?: true
    website?: true
    updated_at?: true
  }

  export type User_profileCountAggregateInputType = {
    user_id?: true
    username?: true
    display_name?: true
    bio?: true
    avatar_url?: true
    website?: true
    social_links?: true
    updated_at?: true
    _all?: true
  }

  export type User_profileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profile to aggregate.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_profiles
    **/
    _count?: true | User_profileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_profileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_profileMaxAggregateInputType
  }

  export type GetUser_profileAggregateType<T extends User_profileAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_profile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_profile[P]>
      : GetScalarType<T[P], AggregateUser_profile[P]>
  }




  export type user_profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profileWhereInput
    orderBy?: user_profileOrderByWithAggregationInput | user_profileOrderByWithAggregationInput[]
    by: User_profileScalarFieldEnum[] | User_profileScalarFieldEnum
    having?: user_profileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_profileCountAggregateInputType | true
    _min?: User_profileMinAggregateInputType
    _max?: User_profileMaxAggregateInputType
  }

  export type User_profileGroupByOutputType = {
    user_id: string
    username: string
    display_name: string | null
    bio: string | null
    avatar_url: string | null
    website: string | null
    social_links: JsonValue | null
    updated_at: Date
    _count: User_profileCountAggregateOutputType | null
    _min: User_profileMinAggregateOutputType | null
    _max: User_profileMaxAggregateOutputType | null
  }

  type GetUser_profileGroupByPayload<T extends user_profileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_profileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_profileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_profileGroupByOutputType[P]>
            : GetScalarType<T[P], User_profileGroupByOutputType[P]>
        }
      >
    >


  export type user_profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    display_name?: boolean
    bio?: boolean
    avatar_url?: boolean
    website?: boolean
    social_links?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile"]>

  export type user_profileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    display_name?: boolean
    bio?: boolean
    avatar_url?: boolean
    website?: boolean
    social_links?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile"]>

  export type user_profileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    display_name?: boolean
    bio?: boolean
    avatar_url?: boolean
    website?: boolean
    social_links?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_profile"]>

  export type user_profileSelectScalar = {
    user_id?: boolean
    username?: boolean
    display_name?: boolean
    bio?: boolean
    avatar_url?: boolean
    website?: boolean
    social_links?: boolean
    updated_at?: boolean
  }

  export type user_profileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "username" | "display_name" | "bio" | "avatar_url" | "website" | "social_links" | "updated_at", ExtArgs["result"]["user_profile"]>
  export type user_profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_profileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_profileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_profile"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      username: string
      display_name: string | null
      bio: string | null
      avatar_url: string | null
      website: string | null
      social_links: Prisma.JsonValue | null
      updated_at: Date
    }, ExtArgs["result"]["user_profile"]>
    composites: {}
  }

  type user_profileGetPayload<S extends boolean | null | undefined | user_profileDefaultArgs> = $Result.GetResult<Prisma.$user_profilePayload, S>

  type user_profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_profileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_profileCountAggregateInputType | true
    }

  export interface user_profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_profile'], meta: { name: 'user_profile' } }
    /**
     * Find zero or one User_profile that matches the filter.
     * @param {user_profileFindUniqueArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_profileFindUniqueArgs>(args: SelectSubset<T, user_profileFindUniqueArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_profileFindUniqueOrThrowArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_profileFindUniqueOrThrowArgs>(args: SelectSubset<T, user_profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindFirstArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_profileFindFirstArgs>(args?: SelectSubset<T, user_profileFindFirstArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindFirstOrThrowArgs} args - Arguments to find a User_profile
     * @example
     * // Get one User_profile
     * const user_profile = await prisma.user_profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_profileFindFirstOrThrowArgs>(args?: SelectSubset<T, user_profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_profiles
     * const user_profiles = await prisma.user_profile.findMany()
     * 
     * // Get first 10 User_profiles
     * const user_profiles = await prisma.user_profile.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_profileWithUser_idOnly = await prisma.user_profile.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_profileFindManyArgs>(args?: SelectSubset<T, user_profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_profile.
     * @param {user_profileCreateArgs} args - Arguments to create a User_profile.
     * @example
     * // Create one User_profile
     * const User_profile = await prisma.user_profile.create({
     *   data: {
     *     // ... data to create a User_profile
     *   }
     * })
     * 
     */
    create<T extends user_profileCreateArgs>(args: SelectSubset<T, user_profileCreateArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_profiles.
     * @param {user_profileCreateManyArgs} args - Arguments to create many User_profiles.
     * @example
     * // Create many User_profiles
     * const user_profile = await prisma.user_profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_profileCreateManyArgs>(args?: SelectSubset<T, user_profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_profiles and returns the data saved in the database.
     * @param {user_profileCreateManyAndReturnArgs} args - Arguments to create many User_profiles.
     * @example
     * // Create many User_profiles
     * const user_profile = await prisma.user_profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_profiles and only return the `user_id`
     * const user_profileWithUser_idOnly = await prisma.user_profile.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_profileCreateManyAndReturnArgs>(args?: SelectSubset<T, user_profileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_profile.
     * @param {user_profileDeleteArgs} args - Arguments to delete one User_profile.
     * @example
     * // Delete one User_profile
     * const User_profile = await prisma.user_profile.delete({
     *   where: {
     *     // ... filter to delete one User_profile
     *   }
     * })
     * 
     */
    delete<T extends user_profileDeleteArgs>(args: SelectSubset<T, user_profileDeleteArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_profile.
     * @param {user_profileUpdateArgs} args - Arguments to update one User_profile.
     * @example
     * // Update one User_profile
     * const user_profile = await prisma.user_profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_profileUpdateArgs>(args: SelectSubset<T, user_profileUpdateArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_profiles.
     * @param {user_profileDeleteManyArgs} args - Arguments to filter User_profiles to delete.
     * @example
     * // Delete a few User_profiles
     * const { count } = await prisma.user_profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_profileDeleteManyArgs>(args?: SelectSubset<T, user_profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_profiles
     * const user_profile = await prisma.user_profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_profileUpdateManyArgs>(args: SelectSubset<T, user_profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profiles and returns the data updated in the database.
     * @param {user_profileUpdateManyAndReturnArgs} args - Arguments to update many User_profiles.
     * @example
     * // Update many User_profiles
     * const user_profile = await prisma.user_profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_profiles and only return the `user_id`
     * const user_profileWithUser_idOnly = await prisma.user_profile.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_profileUpdateManyAndReturnArgs>(args: SelectSubset<T, user_profileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_profile.
     * @param {user_profileUpsertArgs} args - Arguments to update or create a User_profile.
     * @example
     * // Update or create a User_profile
     * const user_profile = await prisma.user_profile.upsert({
     *   create: {
     *     // ... data to create a User_profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_profile we want to update
     *   }
     * })
     */
    upsert<T extends user_profileUpsertArgs>(args: SelectSubset<T, user_profileUpsertArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileCountArgs} args - Arguments to filter User_profiles to count.
     * @example
     * // Count the number of User_profiles
     * const count = await prisma.user_profile.count({
     *   where: {
     *     // ... the filter for the User_profiles we want to count
     *   }
     * })
    **/
    count<T extends user_profileCountArgs>(
      args?: Subset<T, user_profileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_profileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_profileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_profileAggregateArgs>(args: Subset<T, User_profileAggregateArgs>): Prisma.PrismaPromise<GetUser_profileAggregateType<T>>

    /**
     * Group by User_profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_profileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_profileGroupByArgs['orderBy'] }
        : { orderBy?: user_profileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_profileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_profile model
   */
  readonly fields: user_profileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_profile model
   */ 
  interface user_profileFieldRefs {
    readonly user_id: FieldRef<"user_profile", 'String'>
    readonly username: FieldRef<"user_profile", 'String'>
    readonly display_name: FieldRef<"user_profile", 'String'>
    readonly bio: FieldRef<"user_profile", 'String'>
    readonly avatar_url: FieldRef<"user_profile", 'String'>
    readonly website: FieldRef<"user_profile", 'String'>
    readonly social_links: FieldRef<"user_profile", 'Json'>
    readonly updated_at: FieldRef<"user_profile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_profile findUnique
   */
  export type user_profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile findUniqueOrThrow
   */
  export type user_profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile findFirst
   */
  export type user_profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile findFirstOrThrow
   */
  export type user_profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profile to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile findMany
   */
  export type user_profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where?: user_profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profileOrderByWithRelationInput | user_profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_profiles.
     */
    cursor?: user_profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    distinct?: User_profileScalarFieldEnum | User_profileScalarFieldEnum[]
  }

  /**
   * user_profile create
   */
  export type user_profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The data needed to create a user_profile.
     */
    data: XOR<user_profileCreateInput, user_profileUncheckedCreateInput>
  }

  /**
   * user_profile createMany
   */
  export type user_profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_profiles.
     */
    data: user_profileCreateManyInput | user_profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_profile createManyAndReturn
   */
  export type user_profileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * The data used to create many user_profiles.
     */
    data: user_profileCreateManyInput | user_profileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_profile update
   */
  export type user_profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The data needed to update a user_profile.
     */
    data: XOR<user_profileUpdateInput, user_profileUncheckedUpdateInput>
    /**
     * Choose, which user_profile to update.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile updateMany
   */
  export type user_profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_profiles.
     */
    data: XOR<user_profileUpdateManyMutationInput, user_profileUncheckedUpdateManyInput>
    /**
     * Filter which user_profiles to update
     */
    where?: user_profileWhereInput
    /**
     * Limit how many user_profiles to update.
     */
    limit?: number
  }

  /**
   * user_profile updateManyAndReturn
   */
  export type user_profileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * The data used to update user_profiles.
     */
    data: XOR<user_profileUpdateManyMutationInput, user_profileUncheckedUpdateManyInput>
    /**
     * Filter which user_profiles to update
     */
    where?: user_profileWhereInput
    /**
     * Limit how many user_profiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_profile upsert
   */
  export type user_profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * The filter to search for the user_profile to update in case it exists.
     */
    where: user_profileWhereUniqueInput
    /**
     * In case the user_profile found by the `where` argument doesn't exist, create a new user_profile with this data.
     */
    create: XOR<user_profileCreateInput, user_profileUncheckedCreateInput>
    /**
     * In case the user_profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_profileUpdateInput, user_profileUncheckedUpdateInput>
  }

  /**
   * user_profile delete
   */
  export type user_profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    /**
     * Filter which user_profile to delete.
     */
    where: user_profileWhereUniqueInput
  }

  /**
   * user_profile deleteMany
   */
  export type user_profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profiles to delete
     */
    where?: user_profileWhereInput
    /**
     * Limit how many user_profiles to delete.
     */
    limit?: number
  }

  /**
   * user_profile without action
   */
  export type user_profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
  }


  /**
   * Model user_security
   */

  export type AggregateUser_security = {
    _count: User_securityCountAggregateOutputType | null
    _avg: User_securityAvgAggregateOutputType | null
    _sum: User_securitySumAggregateOutputType | null
    _min: User_securityMinAggregateOutputType | null
    _max: User_securityMaxAggregateOutputType | null
  }

  export type User_securityAvgAggregateOutputType = {
    failed_attempts: number | null
  }

  export type User_securitySumAggregateOutputType = {
    failed_attempts: number | null
  }

  export type User_securityMinAggregateOutputType = {
    user_id: string | null
    failed_attempts: number | null
    last_failed_login: Date | null
    two_factor_enabled: boolean | null
    otp_code: string | null
    otp_expires_at: Date | null
    updated_at: Date | null
  }

  export type User_securityMaxAggregateOutputType = {
    user_id: string | null
    failed_attempts: number | null
    last_failed_login: Date | null
    two_factor_enabled: boolean | null
    otp_code: string | null
    otp_expires_at: Date | null
    updated_at: Date | null
  }

  export type User_securityCountAggregateOutputType = {
    user_id: number
    failed_attempts: number
    last_failed_login: number
    two_factor_enabled: number
    otp_code: number
    otp_expires_at: number
    recovery_codes: number
    updated_at: number
    _all: number
  }


  export type User_securityAvgAggregateInputType = {
    failed_attempts?: true
  }

  export type User_securitySumAggregateInputType = {
    failed_attempts?: true
  }

  export type User_securityMinAggregateInputType = {
    user_id?: true
    failed_attempts?: true
    last_failed_login?: true
    two_factor_enabled?: true
    otp_code?: true
    otp_expires_at?: true
    updated_at?: true
  }

  export type User_securityMaxAggregateInputType = {
    user_id?: true
    failed_attempts?: true
    last_failed_login?: true
    two_factor_enabled?: true
    otp_code?: true
    otp_expires_at?: true
    updated_at?: true
  }

  export type User_securityCountAggregateInputType = {
    user_id?: true
    failed_attempts?: true
    last_failed_login?: true
    two_factor_enabled?: true
    otp_code?: true
    otp_expires_at?: true
    recovery_codes?: true
    updated_at?: true
    _all?: true
  }

  export type User_securityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_security to aggregate.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_securities
    **/
    _count?: true | User_securityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_securityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_securitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_securityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_securityMaxAggregateInputType
  }

  export type GetUser_securityAggregateType<T extends User_securityAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_security]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_security[P]>
      : GetScalarType<T[P], AggregateUser_security[P]>
  }




  export type user_securityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_securityWhereInput
    orderBy?: user_securityOrderByWithAggregationInput | user_securityOrderByWithAggregationInput[]
    by: User_securityScalarFieldEnum[] | User_securityScalarFieldEnum
    having?: user_securityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_securityCountAggregateInputType | true
    _avg?: User_securityAvgAggregateInputType
    _sum?: User_securitySumAggregateInputType
    _min?: User_securityMinAggregateInputType
    _max?: User_securityMaxAggregateInputType
  }

  export type User_securityGroupByOutputType = {
    user_id: string
    failed_attempts: number | null
    last_failed_login: Date | null
    two_factor_enabled: boolean | null
    otp_code: string | null
    otp_expires_at: Date | null
    recovery_codes: string[]
    updated_at: Date
    _count: User_securityCountAggregateOutputType | null
    _avg: User_securityAvgAggregateOutputType | null
    _sum: User_securitySumAggregateOutputType | null
    _min: User_securityMinAggregateOutputType | null
    _max: User_securityMaxAggregateOutputType | null
  }

  type GetUser_securityGroupByPayload<T extends user_securityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_securityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_securityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_securityGroupByOutputType[P]>
            : GetScalarType<T[P], User_securityGroupByOutputType[P]>
        }
      >
    >


  export type user_securitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    failed_attempts?: boolean
    last_failed_login?: boolean
    two_factor_enabled?: boolean
    otp_code?: boolean
    otp_expires_at?: boolean
    recovery_codes?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_security"]>

  export type user_securitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    failed_attempts?: boolean
    last_failed_login?: boolean
    two_factor_enabled?: boolean
    otp_code?: boolean
    otp_expires_at?: boolean
    recovery_codes?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_security"]>

  export type user_securitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    failed_attempts?: boolean
    last_failed_login?: boolean
    two_factor_enabled?: boolean
    otp_code?: boolean
    otp_expires_at?: boolean
    recovery_codes?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_security"]>

  export type user_securitySelectScalar = {
    user_id?: boolean
    failed_attempts?: boolean
    last_failed_login?: boolean
    two_factor_enabled?: boolean
    otp_code?: boolean
    otp_expires_at?: boolean
    recovery_codes?: boolean
    updated_at?: boolean
  }

  export type user_securityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "failed_attempts" | "last_failed_login" | "two_factor_enabled" | "otp_code" | "otp_expires_at" | "recovery_codes" | "updated_at", ExtArgs["result"]["user_security"]>
  export type user_securityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_securityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_securityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_securityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_security"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      failed_attempts: number | null
      last_failed_login: Date | null
      two_factor_enabled: boolean | null
      otp_code: string | null
      otp_expires_at: Date | null
      recovery_codes: string[]
      updated_at: Date
    }, ExtArgs["result"]["user_security"]>
    composites: {}
  }

  type user_securityGetPayload<S extends boolean | null | undefined | user_securityDefaultArgs> = $Result.GetResult<Prisma.$user_securityPayload, S>

  type user_securityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_securityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_securityCountAggregateInputType | true
    }

  export interface user_securityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_security'], meta: { name: 'user_security' } }
    /**
     * Find zero or one User_security that matches the filter.
     * @param {user_securityFindUniqueArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_securityFindUniqueArgs>(args: SelectSubset<T, user_securityFindUniqueArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_security that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_securityFindUniqueOrThrowArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_securityFindUniqueOrThrowArgs>(args: SelectSubset<T, user_securityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_security that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindFirstArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_securityFindFirstArgs>(args?: SelectSubset<T, user_securityFindFirstArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_security that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindFirstOrThrowArgs} args - Arguments to find a User_security
     * @example
     * // Get one User_security
     * const user_security = await prisma.user_security.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_securityFindFirstOrThrowArgs>(args?: SelectSubset<T, user_securityFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_securities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_securities
     * const user_securities = await prisma.user_security.findMany()
     * 
     * // Get first 10 User_securities
     * const user_securities = await prisma.user_security.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_securityWithUser_idOnly = await prisma.user_security.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends user_securityFindManyArgs>(args?: SelectSubset<T, user_securityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_security.
     * @param {user_securityCreateArgs} args - Arguments to create a User_security.
     * @example
     * // Create one User_security
     * const User_security = await prisma.user_security.create({
     *   data: {
     *     // ... data to create a User_security
     *   }
     * })
     * 
     */
    create<T extends user_securityCreateArgs>(args: SelectSubset<T, user_securityCreateArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_securities.
     * @param {user_securityCreateManyArgs} args - Arguments to create many User_securities.
     * @example
     * // Create many User_securities
     * const user_security = await prisma.user_security.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_securityCreateManyArgs>(args?: SelectSubset<T, user_securityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_securities and returns the data saved in the database.
     * @param {user_securityCreateManyAndReturnArgs} args - Arguments to create many User_securities.
     * @example
     * // Create many User_securities
     * const user_security = await prisma.user_security.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_securities and only return the `user_id`
     * const user_securityWithUser_idOnly = await prisma.user_security.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_securityCreateManyAndReturnArgs>(args?: SelectSubset<T, user_securityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_security.
     * @param {user_securityDeleteArgs} args - Arguments to delete one User_security.
     * @example
     * // Delete one User_security
     * const User_security = await prisma.user_security.delete({
     *   where: {
     *     // ... filter to delete one User_security
     *   }
     * })
     * 
     */
    delete<T extends user_securityDeleteArgs>(args: SelectSubset<T, user_securityDeleteArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_security.
     * @param {user_securityUpdateArgs} args - Arguments to update one User_security.
     * @example
     * // Update one User_security
     * const user_security = await prisma.user_security.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_securityUpdateArgs>(args: SelectSubset<T, user_securityUpdateArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_securities.
     * @param {user_securityDeleteManyArgs} args - Arguments to filter User_securities to delete.
     * @example
     * // Delete a few User_securities
     * const { count } = await prisma.user_security.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_securityDeleteManyArgs>(args?: SelectSubset<T, user_securityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_securities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_securities
     * const user_security = await prisma.user_security.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_securityUpdateManyArgs>(args: SelectSubset<T, user_securityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_securities and returns the data updated in the database.
     * @param {user_securityUpdateManyAndReturnArgs} args - Arguments to update many User_securities.
     * @example
     * // Update many User_securities
     * const user_security = await prisma.user_security.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_securities and only return the `user_id`
     * const user_securityWithUser_idOnly = await prisma.user_security.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_securityUpdateManyAndReturnArgs>(args: SelectSubset<T, user_securityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_security.
     * @param {user_securityUpsertArgs} args - Arguments to update or create a User_security.
     * @example
     * // Update or create a User_security
     * const user_security = await prisma.user_security.upsert({
     *   create: {
     *     // ... data to create a User_security
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_security we want to update
     *   }
     * })
     */
    upsert<T extends user_securityUpsertArgs>(args: SelectSubset<T, user_securityUpsertArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_securities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityCountArgs} args - Arguments to filter User_securities to count.
     * @example
     * // Count the number of User_securities
     * const count = await prisma.user_security.count({
     *   where: {
     *     // ... the filter for the User_securities we want to count
     *   }
     * })
    **/
    count<T extends user_securityCountArgs>(
      args?: Subset<T, user_securityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_securityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_security.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_securityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_securityAggregateArgs>(args: Subset<T, User_securityAggregateArgs>): Prisma.PrismaPromise<GetUser_securityAggregateType<T>>

    /**
     * Group by User_security.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_securityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_securityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_securityGroupByArgs['orderBy'] }
        : { orderBy?: user_securityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_securityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_securityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_security model
   */
  readonly fields: user_securityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_security.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_securityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_security model
   */ 
  interface user_securityFieldRefs {
    readonly user_id: FieldRef<"user_security", 'String'>
    readonly failed_attempts: FieldRef<"user_security", 'Int'>
    readonly last_failed_login: FieldRef<"user_security", 'DateTime'>
    readonly two_factor_enabled: FieldRef<"user_security", 'Boolean'>
    readonly otp_code: FieldRef<"user_security", 'String'>
    readonly otp_expires_at: FieldRef<"user_security", 'DateTime'>
    readonly recovery_codes: FieldRef<"user_security", 'String[]'>
    readonly updated_at: FieldRef<"user_security", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_security findUnique
   */
  export type user_securityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security findUniqueOrThrow
   */
  export type user_securityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security findFirst
   */
  export type user_securityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_securities.
     */
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security findFirstOrThrow
   */
  export type user_securityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_security to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_securities.
     */
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security findMany
   */
  export type user_securityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter, which user_securities to fetch.
     */
    where?: user_securityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_securities to fetch.
     */
    orderBy?: user_securityOrderByWithRelationInput | user_securityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_securities.
     */
    cursor?: user_securityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_securities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_securities.
     */
    skip?: number
    distinct?: User_securityScalarFieldEnum | User_securityScalarFieldEnum[]
  }

  /**
   * user_security create
   */
  export type user_securityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The data needed to create a user_security.
     */
    data: XOR<user_securityCreateInput, user_securityUncheckedCreateInput>
  }

  /**
   * user_security createMany
   */
  export type user_securityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_securities.
     */
    data: user_securityCreateManyInput | user_securityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_security createManyAndReturn
   */
  export type user_securityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * The data used to create many user_securities.
     */
    data: user_securityCreateManyInput | user_securityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_security update
   */
  export type user_securityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The data needed to update a user_security.
     */
    data: XOR<user_securityUpdateInput, user_securityUncheckedUpdateInput>
    /**
     * Choose, which user_security to update.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security updateMany
   */
  export type user_securityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_securities.
     */
    data: XOR<user_securityUpdateManyMutationInput, user_securityUncheckedUpdateManyInput>
    /**
     * Filter which user_securities to update
     */
    where?: user_securityWhereInput
    /**
     * Limit how many user_securities to update.
     */
    limit?: number
  }

  /**
   * user_security updateManyAndReturn
   */
  export type user_securityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * The data used to update user_securities.
     */
    data: XOR<user_securityUpdateManyMutationInput, user_securityUncheckedUpdateManyInput>
    /**
     * Filter which user_securities to update
     */
    where?: user_securityWhereInput
    /**
     * Limit how many user_securities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_security upsert
   */
  export type user_securityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * The filter to search for the user_security to update in case it exists.
     */
    where: user_securityWhereUniqueInput
    /**
     * In case the user_security found by the `where` argument doesn't exist, create a new user_security with this data.
     */
    create: XOR<user_securityCreateInput, user_securityUncheckedCreateInput>
    /**
     * In case the user_security was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_securityUpdateInput, user_securityUncheckedUpdateInput>
  }

  /**
   * user_security delete
   */
  export type user_securityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    /**
     * Filter which user_security to delete.
     */
    where: user_securityWhereUniqueInput
  }

  /**
   * user_security deleteMany
   */
  export type user_securityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_securities to delete
     */
    where?: user_securityWhereInput
    /**
     * Limit how many user_securities to delete.
     */
    limit?: number
  }

  /**
   * user_security without action
   */
  export type user_securityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
  }


  /**
   * Model user_sessions
   */

  export type AggregateUser_sessions = {
    _count: User_sessionsCountAggregateOutputType | null
    _min: User_sessionsMinAggregateOutputType | null
    _max: User_sessionsMaxAggregateOutputType | null
  }

  export type User_sessionsMinAggregateOutputType = {
    session_id: string | null
    user_id: string | null
    token: string | null
    created_at: Date | null
    expires_at: Date | null
    is_revoked: boolean | null
  }

  export type User_sessionsMaxAggregateOutputType = {
    session_id: string | null
    user_id: string | null
    token: string | null
    created_at: Date | null
    expires_at: Date | null
    is_revoked: boolean | null
  }

  export type User_sessionsCountAggregateOutputType = {
    session_id: number
    user_id: number
    token: number
    created_at: number
    expires_at: number
    is_revoked: number
    _all: number
  }


  export type User_sessionsMinAggregateInputType = {
    session_id?: true
    user_id?: true
    token?: true
    created_at?: true
    expires_at?: true
    is_revoked?: true
  }

  export type User_sessionsMaxAggregateInputType = {
    session_id?: true
    user_id?: true
    token?: true
    created_at?: true
    expires_at?: true
    is_revoked?: true
  }

  export type User_sessionsCountAggregateInputType = {
    session_id?: true
    user_id?: true
    token?: true
    created_at?: true
    expires_at?: true
    is_revoked?: true
    _all?: true
  }

  export type User_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sessions to aggregate.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_sessions
    **/
    _count?: true | User_sessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_sessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_sessionsMaxAggregateInputType
  }

  export type GetUser_sessionsAggregateType<T extends User_sessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_sessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_sessions[P]>
      : GetScalarType<T[P], AggregateUser_sessions[P]>
  }




  export type user_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sessionsWhereInput
    orderBy?: user_sessionsOrderByWithAggregationInput | user_sessionsOrderByWithAggregationInput[]
    by: User_sessionsScalarFieldEnum[] | User_sessionsScalarFieldEnum
    having?: user_sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_sessionsCountAggregateInputType | true
    _min?: User_sessionsMinAggregateInputType
    _max?: User_sessionsMaxAggregateInputType
  }

  export type User_sessionsGroupByOutputType = {
    session_id: string
    user_id: string
    token: string
    created_at: Date
    expires_at: Date
    is_revoked: boolean | null
    _count: User_sessionsCountAggregateOutputType | null
    _min: User_sessionsMinAggregateOutputType | null
    _max: User_sessionsMaxAggregateOutputType | null
  }

  type GetUser_sessionsGroupByPayload<T extends user_sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_sessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_sessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_sessionsGroupByOutputType[P]>
            : GetScalarType<T[P], User_sessionsGroupByOutputType[P]>
        }
      >
    >


  export type user_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    expires_at?: boolean
    is_revoked?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    expires_at?: boolean
    is_revoked?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    expires_at?: boolean
    is_revoked?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectScalar = {
    session_id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    expires_at?: boolean
    is_revoked?: boolean
  }

  export type user_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_id" | "user_id" | "token" | "created_at" | "expires_at" | "is_revoked", ExtArgs["result"]["user_sessions"]>
  export type user_sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_sessions"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      session_id: string
      user_id: string
      token: string
      created_at: Date
      expires_at: Date
      is_revoked: boolean | null
    }, ExtArgs["result"]["user_sessions"]>
    composites: {}
  }

  type user_sessionsGetPayload<S extends boolean | null | undefined | user_sessionsDefaultArgs> = $Result.GetResult<Prisma.$user_sessionsPayload, S>

  type user_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_sessionsCountAggregateInputType | true
    }

  export interface user_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_sessions'], meta: { name: 'user_sessions' } }
    /**
     * Find zero or one User_sessions that matches the filter.
     * @param {user_sessionsFindUniqueArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_sessionsFindUniqueArgs>(args: SelectSubset<T, user_sessionsFindUniqueArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_sessionsFindUniqueOrThrowArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindFirstArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_sessionsFindFirstArgs>(args?: SelectSubset<T, user_sessionsFindFirstArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindFirstOrThrowArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_sessions
     * const user_sessions = await prisma.user_sessions.findMany()
     * 
     * // Get first 10 User_sessions
     * const user_sessions = await prisma.user_sessions.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.findMany({ select: { session_id: true } })
     * 
     */
    findMany<T extends user_sessionsFindManyArgs>(args?: SelectSubset<T, user_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_sessions.
     * @param {user_sessionsCreateArgs} args - Arguments to create a User_sessions.
     * @example
     * // Create one User_sessions
     * const User_sessions = await prisma.user_sessions.create({
     *   data: {
     *     // ... data to create a User_sessions
     *   }
     * })
     * 
     */
    create<T extends user_sessionsCreateArgs>(args: SelectSubset<T, user_sessionsCreateArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_sessions.
     * @param {user_sessionsCreateManyArgs} args - Arguments to create many User_sessions.
     * @example
     * // Create many User_sessions
     * const user_sessions = await prisma.user_sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_sessionsCreateManyArgs>(args?: SelectSubset<T, user_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_sessions and returns the data saved in the database.
     * @param {user_sessionsCreateManyAndReturnArgs} args - Arguments to create many User_sessions.
     * @example
     * // Create many User_sessions
     * const user_sessions = await prisma.user_sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_sessions and only return the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.createManyAndReturn({
     *   select: { session_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_sessions.
     * @param {user_sessionsDeleteArgs} args - Arguments to delete one User_sessions.
     * @example
     * // Delete one User_sessions
     * const User_sessions = await prisma.user_sessions.delete({
     *   where: {
     *     // ... filter to delete one User_sessions
     *   }
     * })
     * 
     */
    delete<T extends user_sessionsDeleteArgs>(args: SelectSubset<T, user_sessionsDeleteArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_sessions.
     * @param {user_sessionsUpdateArgs} args - Arguments to update one User_sessions.
     * @example
     * // Update one User_sessions
     * const user_sessions = await prisma.user_sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_sessionsUpdateArgs>(args: SelectSubset<T, user_sessionsUpdateArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_sessions.
     * @param {user_sessionsDeleteManyArgs} args - Arguments to filter User_sessions to delete.
     * @example
     * // Delete a few User_sessions
     * const { count } = await prisma.user_sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_sessionsDeleteManyArgs>(args?: SelectSubset<T, user_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_sessions
     * const user_sessions = await prisma.user_sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_sessionsUpdateManyArgs>(args: SelectSubset<T, user_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sessions and returns the data updated in the database.
     * @param {user_sessionsUpdateManyAndReturnArgs} args - Arguments to update many User_sessions.
     * @example
     * // Update many User_sessions
     * const user_sessions = await prisma.user_sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_sessions and only return the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.updateManyAndReturn({
     *   select: { session_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_sessions.
     * @param {user_sessionsUpsertArgs} args - Arguments to update or create a User_sessions.
     * @example
     * // Update or create a User_sessions
     * const user_sessions = await prisma.user_sessions.upsert({
     *   create: {
     *     // ... data to create a User_sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_sessions we want to update
     *   }
     * })
     */
    upsert<T extends user_sessionsUpsertArgs>(args: SelectSubset<T, user_sessionsUpsertArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsCountArgs} args - Arguments to filter User_sessions to count.
     * @example
     * // Count the number of User_sessions
     * const count = await prisma.user_sessions.count({
     *   where: {
     *     // ... the filter for the User_sessions we want to count
     *   }
     * })
    **/
    count<T extends user_sessionsCountArgs>(
      args?: Subset<T, user_sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_sessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_sessionsAggregateArgs>(args: Subset<T, User_sessionsAggregateArgs>): Prisma.PrismaPromise<GetUser_sessionsAggregateType<T>>

    /**
     * Group by User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_sessionsGroupByArgs['orderBy'] }
        : { orderBy?: user_sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_sessions model
   */
  readonly fields: user_sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_sessions model
   */ 
  interface user_sessionsFieldRefs {
    readonly session_id: FieldRef<"user_sessions", 'String'>
    readonly user_id: FieldRef<"user_sessions", 'String'>
    readonly token: FieldRef<"user_sessions", 'String'>
    readonly created_at: FieldRef<"user_sessions", 'DateTime'>
    readonly expires_at: FieldRef<"user_sessions", 'DateTime'>
    readonly is_revoked: FieldRef<"user_sessions", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * user_sessions findUnique
   */
  export type user_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions findUniqueOrThrow
   */
  export type user_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions findFirst
   */
  export type user_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sessions.
     */
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions findFirstOrThrow
   */
  export type user_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sessions.
     */
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions findMany
   */
  export type user_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions create
   */
  export type user_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_sessions.
     */
    data: XOR<user_sessionsCreateInput, user_sessionsUncheckedCreateInput>
  }

  /**
   * user_sessions createMany
   */
  export type user_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_sessions.
     */
    data: user_sessionsCreateManyInput | user_sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_sessions createManyAndReturn
   */
  export type user_sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many user_sessions.
     */
    data: user_sessionsCreateManyInput | user_sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sessions update
   */
  export type user_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_sessions.
     */
    data: XOR<user_sessionsUpdateInput, user_sessionsUncheckedUpdateInput>
    /**
     * Choose, which user_sessions to update.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions updateMany
   */
  export type user_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_sessions.
     */
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which user_sessions to update
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to update.
     */
    limit?: number
  }

  /**
   * user_sessions updateManyAndReturn
   */
  export type user_sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * The data used to update user_sessions.
     */
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which user_sessions to update
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sessions upsert
   */
  export type user_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_sessions to update in case it exists.
     */
    where: user_sessionsWhereUniqueInput
    /**
     * In case the user_sessions found by the `where` argument doesn't exist, create a new user_sessions with this data.
     */
    create: XOR<user_sessionsCreateInput, user_sessionsUncheckedCreateInput>
    /**
     * In case the user_sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_sessionsUpdateInput, user_sessionsUncheckedUpdateInput>
  }

  /**
   * user_sessions delete
   */
  export type user_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter which user_sessions to delete.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions deleteMany
   */
  export type user_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sessions to delete
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to delete.
     */
    limit?: number
  }

  /**
   * user_sessions without action
   */
  export type user_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    email: string | null
    phone: string | null
    password_hash: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
    is_verified: boolean | null
    is_active: boolean | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    email: string | null
    phone: string | null
    password_hash: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
    is_verified: boolean | null
    is_active: boolean | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    phone: number
    password_hash: number
    role: number
    created_at: number
    updated_at: number
    is_verified: number
    is_active: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    created_at?: true
    updated_at?: true
    is_verified?: true
    is_active?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    created_at?: true
    updated_at?: true
    is_verified?: true
    is_active?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    phone?: true
    password_hash?: true
    role?: true
    created_at?: true
    updated_at?: true
    is_verified?: true
    is_active?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    email: string
    phone: string | null
    password_hash: string
    role: string | null
    created_at: Date
    updated_at: Date
    is_verified: boolean | null
    is_active: boolean | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_verified?: boolean
    is_active?: boolean
    favorites?: boolean | users$favoritesArgs<ExtArgs>
    items?: boolean | users$itemsArgs<ExtArgs>
    pay_per_view_access?: boolean | users$pay_per_view_accessArgs<ExtArgs>
    reviews?: boolean | users$reviewsArgs<ExtArgs>
    transactions?: boolean | users$transactionsArgs<ExtArgs>
    password_reset_tokens?: boolean | users$password_reset_tokensArgs<ExtArgs>
    user_analytics?: boolean | users$user_analyticsArgs<ExtArgs>
    user_audit_logs?: boolean | users$user_audit_logsArgs<ExtArgs>
    user_blocklist_user_blocklist_blocked_byTousers?: boolean | users$user_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs>
    user_blocklist_user_blocklist_user_idTousers?: boolean | users$user_blocklist_user_blocklist_user_idTousersArgs<ExtArgs>
    user_certificates?: boolean | users$user_certificatesArgs<ExtArgs>
    user_profile?: boolean | users$user_profileArgs<ExtArgs>
    user_security?: boolean | users$user_securityArgs<ExtArgs>
    user_sessions?: boolean | users$user_sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_verified?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_verified?: boolean
    is_active?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    email?: boolean
    phone?: boolean
    password_hash?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    is_verified?: boolean
    is_active?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "phone" | "password_hash" | "role" | "created_at" | "updated_at" | "is_verified" | "is_active", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favorites?: boolean | users$favoritesArgs<ExtArgs>
    items?: boolean | users$itemsArgs<ExtArgs>
    pay_per_view_access?: boolean | users$pay_per_view_accessArgs<ExtArgs>
    reviews?: boolean | users$reviewsArgs<ExtArgs>
    transactions?: boolean | users$transactionsArgs<ExtArgs>
    password_reset_tokens?: boolean | users$password_reset_tokensArgs<ExtArgs>
    user_analytics?: boolean | users$user_analyticsArgs<ExtArgs>
    user_audit_logs?: boolean | users$user_audit_logsArgs<ExtArgs>
    user_blocklist_user_blocklist_blocked_byTousers?: boolean | users$user_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs>
    user_blocklist_user_blocklist_user_idTousers?: boolean | users$user_blocklist_user_blocklist_user_idTousersArgs<ExtArgs>
    user_certificates?: boolean | users$user_certificatesArgs<ExtArgs>
    user_profile?: boolean | users$user_profileArgs<ExtArgs>
    user_security?: boolean | users$user_securityArgs<ExtArgs>
    user_sessions?: boolean | users$user_sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      favorites: Prisma.$favoritesPayload<ExtArgs>[]
      items: Prisma.$itemsPayload<ExtArgs>[]
      pay_per_view_access: Prisma.$pay_per_view_accessPayload<ExtArgs>[]
      reviews: Prisma.$reviewsPayload<ExtArgs>[]
      transactions: Prisma.$transactionsPayload<ExtArgs>[]
      password_reset_tokens: Prisma.$password_reset_tokensPayload<ExtArgs>[]
      user_analytics: Prisma.$user_analyticsPayload<ExtArgs> | null
      user_audit_logs: Prisma.$user_audit_logsPayload<ExtArgs>[]
      user_blocklist_user_blocklist_blocked_byTousers: Prisma.$user_blocklistPayload<ExtArgs>[]
      user_blocklist_user_blocklist_user_idTousers: Prisma.$user_blocklistPayload<ExtArgs> | null
      user_certificates: Prisma.$user_certificatesPayload<ExtArgs> | null
      user_profile: Prisma.$user_profilePayload<ExtArgs> | null
      user_security: Prisma.$user_securityPayload<ExtArgs> | null
      user_sessions: Prisma.$user_sessionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      phone: string | null
      password_hash: string
      role: string | null
      created_at: Date
      updated_at: Date
      is_verified: boolean | null
      is_active: boolean | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    favorites<T extends users$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, users$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$favoritesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    items<T extends users$itemsArgs<ExtArgs> = {}>(args?: Subset<T, users$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pay_per_view_access<T extends users$pay_per_view_accessArgs<ExtArgs> = {}>(args?: Subset<T, users$pay_per_view_accessArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pay_per_view_accessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends users$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, users$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reviewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactions<T extends users$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, users$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    password_reset_tokens<T extends users$password_reset_tokensArgs<ExtArgs> = {}>(args?: Subset<T, users$password_reset_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_analytics<T extends users$user_analyticsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_analyticsArgs<ExtArgs>>): Prisma__user_analyticsClient<$Result.GetResult<Prisma.$user_analyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_audit_logs<T extends users$user_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_audit_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_blocklist_user_blocklist_blocked_byTousers<T extends users$user_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_blocklist_user_blocklist_user_idTousers<T extends users$user_blocklist_user_blocklist_user_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$user_blocklist_user_blocklist_user_idTousersArgs<ExtArgs>>): Prisma__user_blocklistClient<$Result.GetResult<Prisma.$user_blocklistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_certificates<T extends users$user_certificatesArgs<ExtArgs> = {}>(args?: Subset<T, users$user_certificatesArgs<ExtArgs>>): Prisma__user_certificatesClient<$Result.GetResult<Prisma.$user_certificatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_profile<T extends users$user_profileArgs<ExtArgs> = {}>(args?: Subset<T, users$user_profileArgs<ExtArgs>>): Prisma__user_profileClient<$Result.GetResult<Prisma.$user_profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_security<T extends users$user_securityArgs<ExtArgs> = {}>(args?: Subset<T, users$user_securityArgs<ExtArgs>>): Prisma__user_securityClient<$Result.GetResult<Prisma.$user_securityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user_sessions<T extends users$user_sessionsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly phone: FieldRef<"users", 'String'>
    readonly password_hash: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly is_verified: FieldRef<"users", 'Boolean'>
    readonly is_active: FieldRef<"users", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.favorites
   */
  export type users$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the favorites
     */
    select?: favoritesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the favorites
     */
    omit?: favoritesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: favoritesInclude<ExtArgs> | null
    where?: favoritesWhereInput
    orderBy?: favoritesOrderByWithRelationInput | favoritesOrderByWithRelationInput[]
    cursor?: favoritesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritesScalarFieldEnum | FavoritesScalarFieldEnum[]
  }

  /**
   * users.items
   */
  export type users$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the items
     */
    select?: itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the items
     */
    omit?: itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemsInclude<ExtArgs> | null
    where?: itemsWhereInput
    orderBy?: itemsOrderByWithRelationInput | itemsOrderByWithRelationInput[]
    cursor?: itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemsScalarFieldEnum | ItemsScalarFieldEnum[]
  }

  /**
   * users.pay_per_view_access
   */
  export type users$pay_per_view_accessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pay_per_view_access
     */
    select?: pay_per_view_accessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pay_per_view_access
     */
    omit?: pay_per_view_accessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pay_per_view_accessInclude<ExtArgs> | null
    where?: pay_per_view_accessWhereInput
    orderBy?: pay_per_view_accessOrderByWithRelationInput | pay_per_view_accessOrderByWithRelationInput[]
    cursor?: pay_per_view_accessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pay_per_view_accessScalarFieldEnum | Pay_per_view_accessScalarFieldEnum[]
  }

  /**
   * users.reviews
   */
  export type users$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reviews
     */
    select?: reviewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reviews
     */
    omit?: reviewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reviewsInclude<ExtArgs> | null
    where?: reviewsWhereInput
    orderBy?: reviewsOrderByWithRelationInput | reviewsOrderByWithRelationInput[]
    cursor?: reviewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewsScalarFieldEnum | ReviewsScalarFieldEnum[]
  }

  /**
   * users.transactions
   */
  export type users$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    cursor?: transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * users.password_reset_tokens
   */
  export type users$password_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    cursor?: password_reset_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * users.user_analytics
   */
  export type users$user_analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_analytics
     */
    select?: user_analyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_analytics
     */
    omit?: user_analyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_analyticsInclude<ExtArgs> | null
    where?: user_analyticsWhereInput
  }

  /**
   * users.user_audit_logs
   */
  export type users$user_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_audit_logs
     */
    select?: user_audit_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_audit_logs
     */
    omit?: user_audit_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_audit_logsInclude<ExtArgs> | null
    where?: user_audit_logsWhereInput
    orderBy?: user_audit_logsOrderByWithRelationInput | user_audit_logsOrderByWithRelationInput[]
    cursor?: user_audit_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_audit_logsScalarFieldEnum | User_audit_logsScalarFieldEnum[]
  }

  /**
   * users.user_blocklist_user_blocklist_blocked_byTousers
   */
  export type users$user_blocklist_user_blocklist_blocked_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    where?: user_blocklistWhereInput
    orderBy?: user_blocklistOrderByWithRelationInput | user_blocklistOrderByWithRelationInput[]
    cursor?: user_blocklistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_blocklistScalarFieldEnum | User_blocklistScalarFieldEnum[]
  }

  /**
   * users.user_blocklist_user_blocklist_user_idTousers
   */
  export type users$user_blocklist_user_blocklist_user_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_blocklist
     */
    select?: user_blocklistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_blocklist
     */
    omit?: user_blocklistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_blocklistInclude<ExtArgs> | null
    where?: user_blocklistWhereInput
  }

  /**
   * users.user_certificates
   */
  export type users$user_certificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_certificates
     */
    select?: user_certificatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_certificates
     */
    omit?: user_certificatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_certificatesInclude<ExtArgs> | null
    where?: user_certificatesWhereInput
  }

  /**
   * users.user_profile
   */
  export type users$user_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profile
     */
    select?: user_profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profile
     */
    omit?: user_profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_profileInclude<ExtArgs> | null
    where?: user_profileWhereInput
  }

  /**
   * users.user_security
   */
  export type users$user_securityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_security
     */
    select?: user_securitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_security
     */
    omit?: user_securityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_securityInclude<ExtArgs> | null
    where?: user_securityWhereInput
  }

  /**
   * users.user_sessions
   */
  export type users$user_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    where?: user_sessionsWhereInput
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    cursor?: user_sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const FavoritesScalarFieldEnum: {
    favorite_id: 'favorite_id',
    user_id: 'user_id',
    item_id: 'item_id',
    created_at: 'created_at'
  };

  export type FavoritesScalarFieldEnum = (typeof FavoritesScalarFieldEnum)[keyof typeof FavoritesScalarFieldEnum]


  export const ItemsScalarFieldEnum: {
    item_id: 'item_id',
    user_id: 'user_id',
    title: 'title',
    description: 'description',
    media_url: 'media_url',
    category: 'category',
    price: 'price',
    monetization_type: 'monetization_type',
    availability: 'availability',
    created_at: 'created_at'
  };

  export type ItemsScalarFieldEnum = (typeof ItemsScalarFieldEnum)[keyof typeof ItemsScalarFieldEnum]


  export const MonetizationScalarFieldEnum: {
    monetization_id: 'monetization_id',
    item_id: 'item_id',
    type: 'type',
    price: 'price',
    currency: 'currency',
    created_at: 'created_at'
  };

  export type MonetizationScalarFieldEnum = (typeof MonetizationScalarFieldEnum)[keyof typeof MonetizationScalarFieldEnum]


  export const Pay_per_view_accessScalarFieldEnum: {
    access_id: 'access_id',
    user_id: 'user_id',
    item_id: 'item_id',
    access_expiry: 'access_expiry',
    created_at: 'created_at'
  };

  export type Pay_per_view_accessScalarFieldEnum = (typeof Pay_per_view_accessScalarFieldEnum)[keyof typeof Pay_per_view_accessScalarFieldEnum]


  export const ReviewsScalarFieldEnum: {
    review_id: 'review_id',
    user_id: 'user_id',
    item_id: 'item_id',
    rating: 'rating',
    review_text: 'review_text',
    created_at: 'created_at'
  };

  export type ReviewsScalarFieldEnum = (typeof ReviewsScalarFieldEnum)[keyof typeof ReviewsScalarFieldEnum]


  export const TransactionsScalarFieldEnum: {
    transaction_id: 'transaction_id',
    buyer_id: 'buyer_id',
    item_id: 'item_id',
    amount: 'amount',
    payment_status: 'payment_status',
    transaction_date: 'transaction_date'
  };

  export type TransactionsScalarFieldEnum = (typeof TransactionsScalarFieldEnum)[keyof typeof TransactionsScalarFieldEnum]


  export const Password_reset_tokensScalarFieldEnum: {
    token: 'token',
    user_id: 'user_id',
    expires_at: 'expires_at',
    created_at: 'created_at',
    used: 'used'
  };

  export type Password_reset_tokensScalarFieldEnum = (typeof Password_reset_tokensScalarFieldEnum)[keyof typeof Password_reset_tokensScalarFieldEnum]


  export const User_analyticsScalarFieldEnum: {
    user_id: 'user_id',
    posts_count: 'posts_count',
    likes_received: 'likes_received',
    followers_count: 'followers_count',
    following_count: 'following_count',
    last_login: 'last_login',
    activity_score: 'activity_score'
  };

  export type User_analyticsScalarFieldEnum = (typeof User_analyticsScalarFieldEnum)[keyof typeof User_analyticsScalarFieldEnum]


  export const User_audit_logsScalarFieldEnum: {
    audit_id: 'audit_id',
    user_id: 'user_id',
    action_type: 'action_type',
    details: 'details',
    performed_by: 'performed_by',
    event_time: 'event_time'
  };

  export type User_audit_logsScalarFieldEnum = (typeof User_audit_logsScalarFieldEnum)[keyof typeof User_audit_logsScalarFieldEnum]


  export const User_blocklistScalarFieldEnum: {
    block_id: 'block_id',
    user_id: 'user_id',
    reason: 'reason',
    blocked_by: 'blocked_by',
    blocked_at: 'blocked_at'
  };

  export type User_blocklistScalarFieldEnum = (typeof User_blocklistScalarFieldEnum)[keyof typeof User_blocklistScalarFieldEnum]


  export const User_certificatesScalarFieldEnum: {
    user_id: 'user_id',
    public_key: 'public_key',
    certificate: 'certificate',
    created_at: 'created_at'
  };

  export type User_certificatesScalarFieldEnum = (typeof User_certificatesScalarFieldEnum)[keyof typeof User_certificatesScalarFieldEnum]


  export const User_profileScalarFieldEnum: {
    user_id: 'user_id',
    username: 'username',
    display_name: 'display_name',
    bio: 'bio',
    avatar_url: 'avatar_url',
    website: 'website',
    social_links: 'social_links',
    updated_at: 'updated_at'
  };

  export type User_profileScalarFieldEnum = (typeof User_profileScalarFieldEnum)[keyof typeof User_profileScalarFieldEnum]


  export const User_securityScalarFieldEnum: {
    user_id: 'user_id',
    failed_attempts: 'failed_attempts',
    last_failed_login: 'last_failed_login',
    two_factor_enabled: 'two_factor_enabled',
    otp_code: 'otp_code',
    otp_expires_at: 'otp_expires_at',
    recovery_codes: 'recovery_codes',
    updated_at: 'updated_at'
  };

  export type User_securityScalarFieldEnum = (typeof User_securityScalarFieldEnum)[keyof typeof User_securityScalarFieldEnum]


  export const User_sessionsScalarFieldEnum: {
    session_id: 'session_id',
    user_id: 'user_id',
    token: 'token',
    created_at: 'created_at',
    expires_at: 'expires_at',
    is_revoked: 'is_revoked'
  };

  export type User_sessionsScalarFieldEnum = (typeof User_sessionsScalarFieldEnum)[keyof typeof User_sessionsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    phone: 'phone',
    password_hash: 'password_hash',
    role: 'role',
    created_at: 'created_at',
    updated_at: 'updated_at',
    is_verified: 'is_verified',
    is_active: 'is_active'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type favoritesWhereInput = {
    AND?: favoritesWhereInput | favoritesWhereInput[]
    OR?: favoritesWhereInput[]
    NOT?: favoritesWhereInput | favoritesWhereInput[]
    favorite_id?: UuidFilter<"favorites"> | string
    user_id?: UuidFilter<"favorites"> | string
    item_id?: UuidFilter<"favorites"> | string
    created_at?: DateTimeNullableFilter<"favorites"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type favoritesOrderByWithRelationInput = {
    favorite_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    items?: itemsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type favoritesWhereUniqueInput = Prisma.AtLeast<{
    favorite_id?: string
    AND?: favoritesWhereInput | favoritesWhereInput[]
    OR?: favoritesWhereInput[]
    NOT?: favoritesWhereInput | favoritesWhereInput[]
    user_id?: UuidFilter<"favorites"> | string
    item_id?: UuidFilter<"favorites"> | string
    created_at?: DateTimeNullableFilter<"favorites"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "favorite_id">

  export type favoritesOrderByWithAggregationInput = {
    favorite_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: favoritesCountOrderByAggregateInput
    _max?: favoritesMaxOrderByAggregateInput
    _min?: favoritesMinOrderByAggregateInput
  }

  export type favoritesScalarWhereWithAggregatesInput = {
    AND?: favoritesScalarWhereWithAggregatesInput | favoritesScalarWhereWithAggregatesInput[]
    OR?: favoritesScalarWhereWithAggregatesInput[]
    NOT?: favoritesScalarWhereWithAggregatesInput | favoritesScalarWhereWithAggregatesInput[]
    favorite_id?: UuidWithAggregatesFilter<"favorites"> | string
    user_id?: UuidWithAggregatesFilter<"favorites"> | string
    item_id?: UuidWithAggregatesFilter<"favorites"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"favorites"> | Date | string | null
  }

  export type itemsWhereInput = {
    AND?: itemsWhereInput | itemsWhereInput[]
    OR?: itemsWhereInput[]
    NOT?: itemsWhereInput | itemsWhereInput[]
    item_id?: UuidFilter<"items"> | string
    user_id?: UuidFilter<"items"> | string
    title?: StringFilter<"items"> | string
    description?: StringNullableFilter<"items"> | string | null
    media_url?: StringNullableFilter<"items"> | string | null
    category?: StringNullableFilter<"items"> | string | null
    price?: DecimalNullableFilter<"items"> | Decimal | DecimalJsLike | number | string | null
    monetization_type?: StringNullableFilter<"items"> | string | null
    availability?: BoolNullableFilter<"items"> | boolean | null
    created_at?: DateTimeNullableFilter<"items"> | Date | string | null
    favorites?: FavoritesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    monetization?: MonetizationListRelationFilter
    pay_per_view_access?: Pay_per_view_accessListRelationFilter
    reviews?: ReviewsListRelationFilter
    transactions?: TransactionsListRelationFilter
  }

  export type itemsOrderByWithRelationInput = {
    item_id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    media_url?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    monetization_type?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    favorites?: favoritesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    monetization?: monetizationOrderByRelationAggregateInput
    pay_per_view_access?: pay_per_view_accessOrderByRelationAggregateInput
    reviews?: reviewsOrderByRelationAggregateInput
    transactions?: transactionsOrderByRelationAggregateInput
  }

  export type itemsWhereUniqueInput = Prisma.AtLeast<{
    item_id?: string
    AND?: itemsWhereInput | itemsWhereInput[]
    OR?: itemsWhereInput[]
    NOT?: itemsWhereInput | itemsWhereInput[]
    user_id?: UuidFilter<"items"> | string
    title?: StringFilter<"items"> | string
    description?: StringNullableFilter<"items"> | string | null
    media_url?: StringNullableFilter<"items"> | string | null
    category?: StringNullableFilter<"items"> | string | null
    price?: DecimalNullableFilter<"items"> | Decimal | DecimalJsLike | number | string | null
    monetization_type?: StringNullableFilter<"items"> | string | null
    availability?: BoolNullableFilter<"items"> | boolean | null
    created_at?: DateTimeNullableFilter<"items"> | Date | string | null
    favorites?: FavoritesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    monetization?: MonetizationListRelationFilter
    pay_per_view_access?: Pay_per_view_accessListRelationFilter
    reviews?: ReviewsListRelationFilter
    transactions?: TransactionsListRelationFilter
  }, "item_id">

  export type itemsOrderByWithAggregationInput = {
    item_id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    media_url?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    monetization_type?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: itemsCountOrderByAggregateInput
    _avg?: itemsAvgOrderByAggregateInput
    _max?: itemsMaxOrderByAggregateInput
    _min?: itemsMinOrderByAggregateInput
    _sum?: itemsSumOrderByAggregateInput
  }

  export type itemsScalarWhereWithAggregatesInput = {
    AND?: itemsScalarWhereWithAggregatesInput | itemsScalarWhereWithAggregatesInput[]
    OR?: itemsScalarWhereWithAggregatesInput[]
    NOT?: itemsScalarWhereWithAggregatesInput | itemsScalarWhereWithAggregatesInput[]
    item_id?: UuidWithAggregatesFilter<"items"> | string
    user_id?: UuidWithAggregatesFilter<"items"> | string
    title?: StringWithAggregatesFilter<"items"> | string
    description?: StringNullableWithAggregatesFilter<"items"> | string | null
    media_url?: StringNullableWithAggregatesFilter<"items"> | string | null
    category?: StringNullableWithAggregatesFilter<"items"> | string | null
    price?: DecimalNullableWithAggregatesFilter<"items"> | Decimal | DecimalJsLike | number | string | null
    monetization_type?: StringNullableWithAggregatesFilter<"items"> | string | null
    availability?: BoolNullableWithAggregatesFilter<"items"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"items"> | Date | string | null
  }

  export type monetizationWhereInput = {
    AND?: monetizationWhereInput | monetizationWhereInput[]
    OR?: monetizationWhereInput[]
    NOT?: monetizationWhereInput | monetizationWhereInput[]
    monetization_id?: UuidFilter<"monetization"> | string
    item_id?: UuidFilter<"monetization"> | string
    type?: StringNullableFilter<"monetization"> | string | null
    price?: DecimalNullableFilter<"monetization"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"monetization"> | string | null
    created_at?: DateTimeNullableFilter<"monetization"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
  }

  export type monetizationOrderByWithRelationInput = {
    monetization_id?: SortOrder
    item_id?: SortOrder
    type?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    items?: itemsOrderByWithRelationInput
  }

  export type monetizationWhereUniqueInput = Prisma.AtLeast<{
    monetization_id?: string
    AND?: monetizationWhereInput | monetizationWhereInput[]
    OR?: monetizationWhereInput[]
    NOT?: monetizationWhereInput | monetizationWhereInput[]
    item_id?: UuidFilter<"monetization"> | string
    type?: StringNullableFilter<"monetization"> | string | null
    price?: DecimalNullableFilter<"monetization"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"monetization"> | string | null
    created_at?: DateTimeNullableFilter<"monetization"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
  }, "monetization_id">

  export type monetizationOrderByWithAggregationInput = {
    monetization_id?: SortOrder
    item_id?: SortOrder
    type?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: monetizationCountOrderByAggregateInput
    _avg?: monetizationAvgOrderByAggregateInput
    _max?: monetizationMaxOrderByAggregateInput
    _min?: monetizationMinOrderByAggregateInput
    _sum?: monetizationSumOrderByAggregateInput
  }

  export type monetizationScalarWhereWithAggregatesInput = {
    AND?: monetizationScalarWhereWithAggregatesInput | monetizationScalarWhereWithAggregatesInput[]
    OR?: monetizationScalarWhereWithAggregatesInput[]
    NOT?: monetizationScalarWhereWithAggregatesInput | monetizationScalarWhereWithAggregatesInput[]
    monetization_id?: UuidWithAggregatesFilter<"monetization"> | string
    item_id?: UuidWithAggregatesFilter<"monetization"> | string
    type?: StringNullableWithAggregatesFilter<"monetization"> | string | null
    price?: DecimalNullableWithAggregatesFilter<"monetization"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableWithAggregatesFilter<"monetization"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"monetization"> | Date | string | null
  }

  export type pay_per_view_accessWhereInput = {
    AND?: pay_per_view_accessWhereInput | pay_per_view_accessWhereInput[]
    OR?: pay_per_view_accessWhereInput[]
    NOT?: pay_per_view_accessWhereInput | pay_per_view_accessWhereInput[]
    access_id?: UuidFilter<"pay_per_view_access"> | string
    user_id?: UuidFilter<"pay_per_view_access"> | string
    item_id?: UuidFilter<"pay_per_view_access"> | string
    access_expiry?: DateTimeFilter<"pay_per_view_access"> | Date | string
    created_at?: DateTimeNullableFilter<"pay_per_view_access"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type pay_per_view_accessOrderByWithRelationInput = {
    access_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    access_expiry?: SortOrder
    created_at?: SortOrderInput | SortOrder
    items?: itemsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type pay_per_view_accessWhereUniqueInput = Prisma.AtLeast<{
    access_id?: string
    AND?: pay_per_view_accessWhereInput | pay_per_view_accessWhereInput[]
    OR?: pay_per_view_accessWhereInput[]
    NOT?: pay_per_view_accessWhereInput | pay_per_view_accessWhereInput[]
    user_id?: UuidFilter<"pay_per_view_access"> | string
    item_id?: UuidFilter<"pay_per_view_access"> | string
    access_expiry?: DateTimeFilter<"pay_per_view_access"> | Date | string
    created_at?: DateTimeNullableFilter<"pay_per_view_access"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "access_id">

  export type pay_per_view_accessOrderByWithAggregationInput = {
    access_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    access_expiry?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: pay_per_view_accessCountOrderByAggregateInput
    _max?: pay_per_view_accessMaxOrderByAggregateInput
    _min?: pay_per_view_accessMinOrderByAggregateInput
  }

  export type pay_per_view_accessScalarWhereWithAggregatesInput = {
    AND?: pay_per_view_accessScalarWhereWithAggregatesInput | pay_per_view_accessScalarWhereWithAggregatesInput[]
    OR?: pay_per_view_accessScalarWhereWithAggregatesInput[]
    NOT?: pay_per_view_accessScalarWhereWithAggregatesInput | pay_per_view_accessScalarWhereWithAggregatesInput[]
    access_id?: UuidWithAggregatesFilter<"pay_per_view_access"> | string
    user_id?: UuidWithAggregatesFilter<"pay_per_view_access"> | string
    item_id?: UuidWithAggregatesFilter<"pay_per_view_access"> | string
    access_expiry?: DateTimeWithAggregatesFilter<"pay_per_view_access"> | Date | string
    created_at?: DateTimeNullableWithAggregatesFilter<"pay_per_view_access"> | Date | string | null
  }

  export type reviewsWhereInput = {
    AND?: reviewsWhereInput | reviewsWhereInput[]
    OR?: reviewsWhereInput[]
    NOT?: reviewsWhereInput | reviewsWhereInput[]
    review_id?: UuidFilter<"reviews"> | string
    user_id?: UuidFilter<"reviews"> | string
    item_id?: UuidFilter<"reviews"> | string
    rating?: IntNullableFilter<"reviews"> | number | null
    review_text?: StringNullableFilter<"reviews"> | string | null
    created_at?: DateTimeNullableFilter<"reviews"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type reviewsOrderByWithRelationInput = {
    review_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    rating?: SortOrderInput | SortOrder
    review_text?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    items?: itemsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type reviewsWhereUniqueInput = Prisma.AtLeast<{
    review_id?: string
    AND?: reviewsWhereInput | reviewsWhereInput[]
    OR?: reviewsWhereInput[]
    NOT?: reviewsWhereInput | reviewsWhereInput[]
    user_id?: UuidFilter<"reviews"> | string
    item_id?: UuidFilter<"reviews"> | string
    rating?: IntNullableFilter<"reviews"> | number | null
    review_text?: StringNullableFilter<"reviews"> | string | null
    created_at?: DateTimeNullableFilter<"reviews"> | Date | string | null
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "review_id">

  export type reviewsOrderByWithAggregationInput = {
    review_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    rating?: SortOrderInput | SortOrder
    review_text?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: reviewsCountOrderByAggregateInput
    _avg?: reviewsAvgOrderByAggregateInput
    _max?: reviewsMaxOrderByAggregateInput
    _min?: reviewsMinOrderByAggregateInput
    _sum?: reviewsSumOrderByAggregateInput
  }

  export type reviewsScalarWhereWithAggregatesInput = {
    AND?: reviewsScalarWhereWithAggregatesInput | reviewsScalarWhereWithAggregatesInput[]
    OR?: reviewsScalarWhereWithAggregatesInput[]
    NOT?: reviewsScalarWhereWithAggregatesInput | reviewsScalarWhereWithAggregatesInput[]
    review_id?: UuidWithAggregatesFilter<"reviews"> | string
    user_id?: UuidWithAggregatesFilter<"reviews"> | string
    item_id?: UuidWithAggregatesFilter<"reviews"> | string
    rating?: IntNullableWithAggregatesFilter<"reviews"> | number | null
    review_text?: StringNullableWithAggregatesFilter<"reviews"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"reviews"> | Date | string | null
  }

  export type transactionsWhereInput = {
    AND?: transactionsWhereInput | transactionsWhereInput[]
    OR?: transactionsWhereInput[]
    NOT?: transactionsWhereInput | transactionsWhereInput[]
    transaction_id?: UuidFilter<"transactions"> | string
    buyer_id?: UuidFilter<"transactions"> | string
    item_id?: UuidFilter<"transactions"> | string
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    payment_status?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
  }

  export type transactionsOrderByWithRelationInput = {
    transaction_id?: SortOrder
    buyer_id?: SortOrder
    item_id?: SortOrder
    amount?: SortOrder
    payment_status?: SortOrderInput | SortOrder
    transaction_date?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    items?: itemsOrderByWithRelationInput
  }

  export type transactionsWhereUniqueInput = Prisma.AtLeast<{
    transaction_id?: string
    AND?: transactionsWhereInput | transactionsWhereInput[]
    OR?: transactionsWhereInput[]
    NOT?: transactionsWhereInput | transactionsWhereInput[]
    buyer_id?: UuidFilter<"transactions"> | string
    item_id?: UuidFilter<"transactions"> | string
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    payment_status?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    items?: XOR<ItemsScalarRelationFilter, itemsWhereInput>
  }, "transaction_id">

  export type transactionsOrderByWithAggregationInput = {
    transaction_id?: SortOrder
    buyer_id?: SortOrder
    item_id?: SortOrder
    amount?: SortOrder
    payment_status?: SortOrderInput | SortOrder
    transaction_date?: SortOrderInput | SortOrder
    _count?: transactionsCountOrderByAggregateInput
    _avg?: transactionsAvgOrderByAggregateInput
    _max?: transactionsMaxOrderByAggregateInput
    _min?: transactionsMinOrderByAggregateInput
    _sum?: transactionsSumOrderByAggregateInput
  }

  export type transactionsScalarWhereWithAggregatesInput = {
    AND?: transactionsScalarWhereWithAggregatesInput | transactionsScalarWhereWithAggregatesInput[]
    OR?: transactionsScalarWhereWithAggregatesInput[]
    NOT?: transactionsScalarWhereWithAggregatesInput | transactionsScalarWhereWithAggregatesInput[]
    transaction_id?: UuidWithAggregatesFilter<"transactions"> | string
    buyer_id?: UuidWithAggregatesFilter<"transactions"> | string
    item_id?: UuidWithAggregatesFilter<"transactions"> | string
    amount?: DecimalWithAggregatesFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    payment_status?: StringNullableWithAggregatesFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableWithAggregatesFilter<"transactions"> | Date | string | null
  }

  export type password_reset_tokensWhereInput = {
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    token?: UuidFilter<"password_reset_tokens"> | string
    user_id?: UuidFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    used?: BoolNullableFilter<"password_reset_tokens"> | boolean | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type password_reset_tokensOrderByWithRelationInput = {
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    used?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type password_reset_tokensWhereUniqueInput = Prisma.AtLeast<{
    token?: string
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    user_id?: UuidFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    used?: BoolNullableFilter<"password_reset_tokens"> | boolean | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "token">

  export type password_reset_tokensOrderByWithAggregationInput = {
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    used?: SortOrderInput | SortOrder
    _count?: password_reset_tokensCountOrderByAggregateInput
    _max?: password_reset_tokensMaxOrderByAggregateInput
    _min?: password_reset_tokensMinOrderByAggregateInput
  }

  export type password_reset_tokensScalarWhereWithAggregatesInput = {
    AND?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    OR?: password_reset_tokensScalarWhereWithAggregatesInput[]
    NOT?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    token?: UuidWithAggregatesFilter<"password_reset_tokens"> | string
    user_id?: UuidWithAggregatesFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
    used?: BoolNullableWithAggregatesFilter<"password_reset_tokens"> | boolean | null
  }

  export type user_analyticsWhereInput = {
    AND?: user_analyticsWhereInput | user_analyticsWhereInput[]
    OR?: user_analyticsWhereInput[]
    NOT?: user_analyticsWhereInput | user_analyticsWhereInput[]
    user_id?: UuidFilter<"user_analytics"> | string
    posts_count?: IntNullableFilter<"user_analytics"> | number | null
    likes_received?: IntNullableFilter<"user_analytics"> | number | null
    followers_count?: IntNullableFilter<"user_analytics"> | number | null
    following_count?: IntNullableFilter<"user_analytics"> | number | null
    last_login?: DateTimeNullableFilter<"user_analytics"> | Date | string | null
    activity_score?: DecimalNullableFilter<"user_analytics"> | Decimal | DecimalJsLike | number | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_analyticsOrderByWithRelationInput = {
    user_id?: SortOrder
    posts_count?: SortOrderInput | SortOrder
    likes_received?: SortOrderInput | SortOrder
    followers_count?: SortOrderInput | SortOrder
    following_count?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    activity_score?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_analyticsWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: user_analyticsWhereInput | user_analyticsWhereInput[]
    OR?: user_analyticsWhereInput[]
    NOT?: user_analyticsWhereInput | user_analyticsWhereInput[]
    posts_count?: IntNullableFilter<"user_analytics"> | number | null
    likes_received?: IntNullableFilter<"user_analytics"> | number | null
    followers_count?: IntNullableFilter<"user_analytics"> | number | null
    following_count?: IntNullableFilter<"user_analytics"> | number | null
    last_login?: DateTimeNullableFilter<"user_analytics"> | Date | string | null
    activity_score?: DecimalNullableFilter<"user_analytics"> | Decimal | DecimalJsLike | number | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "user_id">

  export type user_analyticsOrderByWithAggregationInput = {
    user_id?: SortOrder
    posts_count?: SortOrderInput | SortOrder
    likes_received?: SortOrderInput | SortOrder
    followers_count?: SortOrderInput | SortOrder
    following_count?: SortOrderInput | SortOrder
    last_login?: SortOrderInput | SortOrder
    activity_score?: SortOrderInput | SortOrder
    _count?: user_analyticsCountOrderByAggregateInput
    _avg?: user_analyticsAvgOrderByAggregateInput
    _max?: user_analyticsMaxOrderByAggregateInput
    _min?: user_analyticsMinOrderByAggregateInput
    _sum?: user_analyticsSumOrderByAggregateInput
  }

  export type user_analyticsScalarWhereWithAggregatesInput = {
    AND?: user_analyticsScalarWhereWithAggregatesInput | user_analyticsScalarWhereWithAggregatesInput[]
    OR?: user_analyticsScalarWhereWithAggregatesInput[]
    NOT?: user_analyticsScalarWhereWithAggregatesInput | user_analyticsScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"user_analytics"> | string
    posts_count?: IntNullableWithAggregatesFilter<"user_analytics"> | number | null
    likes_received?: IntNullableWithAggregatesFilter<"user_analytics"> | number | null
    followers_count?: IntNullableWithAggregatesFilter<"user_analytics"> | number | null
    following_count?: IntNullableWithAggregatesFilter<"user_analytics"> | number | null
    last_login?: DateTimeNullableWithAggregatesFilter<"user_analytics"> | Date | string | null
    activity_score?: DecimalNullableWithAggregatesFilter<"user_analytics"> | Decimal | DecimalJsLike | number | string | null
  }

  export type user_audit_logsWhereInput = {
    AND?: user_audit_logsWhereInput | user_audit_logsWhereInput[]
    OR?: user_audit_logsWhereInput[]
    NOT?: user_audit_logsWhereInput | user_audit_logsWhereInput[]
    audit_id?: UuidFilter<"user_audit_logs"> | string
    user_id?: UuidNullableFilter<"user_audit_logs"> | string | null
    action_type?: StringFilter<"user_audit_logs"> | string
    details?: JsonNullableFilter<"user_audit_logs">
    performed_by?: UuidNullableFilter<"user_audit_logs"> | string | null
    event_time?: DateTimeFilter<"user_audit_logs"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type user_audit_logsOrderByWithRelationInput = {
    audit_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action_type?: SortOrder
    details?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    event_time?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_audit_logsWhereUniqueInput = Prisma.AtLeast<{
    audit_id?: string
    AND?: user_audit_logsWhereInput | user_audit_logsWhereInput[]
    OR?: user_audit_logsWhereInput[]
    NOT?: user_audit_logsWhereInput | user_audit_logsWhereInput[]
    user_id?: UuidNullableFilter<"user_audit_logs"> | string | null
    action_type?: StringFilter<"user_audit_logs"> | string
    details?: JsonNullableFilter<"user_audit_logs">
    performed_by?: UuidNullableFilter<"user_audit_logs"> | string | null
    event_time?: DateTimeFilter<"user_audit_logs"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "audit_id">

  export type user_audit_logsOrderByWithAggregationInput = {
    audit_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    action_type?: SortOrder
    details?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    event_time?: SortOrder
    _count?: user_audit_logsCountOrderByAggregateInput
    _max?: user_audit_logsMaxOrderByAggregateInput
    _min?: user_audit_logsMinOrderByAggregateInput
  }

  export type user_audit_logsScalarWhereWithAggregatesInput = {
    AND?: user_audit_logsScalarWhereWithAggregatesInput | user_audit_logsScalarWhereWithAggregatesInput[]
    OR?: user_audit_logsScalarWhereWithAggregatesInput[]
    NOT?: user_audit_logsScalarWhereWithAggregatesInput | user_audit_logsScalarWhereWithAggregatesInput[]
    audit_id?: UuidWithAggregatesFilter<"user_audit_logs"> | string
    user_id?: UuidNullableWithAggregatesFilter<"user_audit_logs"> | string | null
    action_type?: StringWithAggregatesFilter<"user_audit_logs"> | string
    details?: JsonNullableWithAggregatesFilter<"user_audit_logs">
    performed_by?: UuidNullableWithAggregatesFilter<"user_audit_logs"> | string | null
    event_time?: DateTimeWithAggregatesFilter<"user_audit_logs"> | Date | string
  }

  export type user_blocklistWhereInput = {
    AND?: user_blocklistWhereInput | user_blocklistWhereInput[]
    OR?: user_blocklistWhereInput[]
    NOT?: user_blocklistWhereInput | user_blocklistWhereInput[]
    block_id?: UuidFilter<"user_blocklist"> | string
    user_id?: UuidNullableFilter<"user_blocklist"> | string | null
    reason?: StringFilter<"user_blocklist"> | string
    blocked_by?: UuidNullableFilter<"user_blocklist"> | string | null
    blocked_at?: DateTimeFilter<"user_blocklist"> | Date | string
    users_user_blocklist_blocked_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_user_blocklist_user_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type user_blocklistOrderByWithRelationInput = {
    block_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    reason?: SortOrder
    blocked_by?: SortOrderInput | SortOrder
    blocked_at?: SortOrder
    users_user_blocklist_blocked_byTousers?: usersOrderByWithRelationInput
    users_user_blocklist_user_idTousers?: usersOrderByWithRelationInput
  }

  export type user_blocklistWhereUniqueInput = Prisma.AtLeast<{
    block_id?: string
    user_id?: string
    AND?: user_blocklistWhereInput | user_blocklistWhereInput[]
    OR?: user_blocklistWhereInput[]
    NOT?: user_blocklistWhereInput | user_blocklistWhereInput[]
    reason?: StringFilter<"user_blocklist"> | string
    blocked_by?: UuidNullableFilter<"user_blocklist"> | string | null
    blocked_at?: DateTimeFilter<"user_blocklist"> | Date | string
    users_user_blocklist_blocked_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_user_blocklist_user_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "block_id" | "user_id">

  export type user_blocklistOrderByWithAggregationInput = {
    block_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    reason?: SortOrder
    blocked_by?: SortOrderInput | SortOrder
    blocked_at?: SortOrder
    _count?: user_blocklistCountOrderByAggregateInput
    _max?: user_blocklistMaxOrderByAggregateInput
    _min?: user_blocklistMinOrderByAggregateInput
  }

  export type user_blocklistScalarWhereWithAggregatesInput = {
    AND?: user_blocklistScalarWhereWithAggregatesInput | user_blocklistScalarWhereWithAggregatesInput[]
    OR?: user_blocklistScalarWhereWithAggregatesInput[]
    NOT?: user_blocklistScalarWhereWithAggregatesInput | user_blocklistScalarWhereWithAggregatesInput[]
    block_id?: UuidWithAggregatesFilter<"user_blocklist"> | string
    user_id?: UuidNullableWithAggregatesFilter<"user_blocklist"> | string | null
    reason?: StringWithAggregatesFilter<"user_blocklist"> | string
    blocked_by?: UuidNullableWithAggregatesFilter<"user_blocklist"> | string | null
    blocked_at?: DateTimeWithAggregatesFilter<"user_blocklist"> | Date | string
  }

  export type user_certificatesWhereInput = {
    AND?: user_certificatesWhereInput | user_certificatesWhereInput[]
    OR?: user_certificatesWhereInput[]
    NOT?: user_certificatesWhereInput | user_certificatesWhereInput[]
    user_id?: UuidFilter<"user_certificates"> | string
    public_key?: StringFilter<"user_certificates"> | string
    certificate?: StringNullableFilter<"user_certificates"> | string | null
    created_at?: DateTimeFilter<"user_certificates"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_certificatesOrderByWithRelationInput = {
    user_id?: SortOrder
    public_key?: SortOrder
    certificate?: SortOrderInput | SortOrder
    created_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_certificatesWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: user_certificatesWhereInput | user_certificatesWhereInput[]
    OR?: user_certificatesWhereInput[]
    NOT?: user_certificatesWhereInput | user_certificatesWhereInput[]
    public_key?: StringFilter<"user_certificates"> | string
    certificate?: StringNullableFilter<"user_certificates"> | string | null
    created_at?: DateTimeFilter<"user_certificates"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "user_id">

  export type user_certificatesOrderByWithAggregationInput = {
    user_id?: SortOrder
    public_key?: SortOrder
    certificate?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: user_certificatesCountOrderByAggregateInput
    _max?: user_certificatesMaxOrderByAggregateInput
    _min?: user_certificatesMinOrderByAggregateInput
  }

  export type user_certificatesScalarWhereWithAggregatesInput = {
    AND?: user_certificatesScalarWhereWithAggregatesInput | user_certificatesScalarWhereWithAggregatesInput[]
    OR?: user_certificatesScalarWhereWithAggregatesInput[]
    NOT?: user_certificatesScalarWhereWithAggregatesInput | user_certificatesScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"user_certificates"> | string
    public_key?: StringWithAggregatesFilter<"user_certificates"> | string
    certificate?: StringNullableWithAggregatesFilter<"user_certificates"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"user_certificates"> | Date | string
  }

  export type user_profileWhereInput = {
    AND?: user_profileWhereInput | user_profileWhereInput[]
    OR?: user_profileWhereInput[]
    NOT?: user_profileWhereInput | user_profileWhereInput[]
    user_id?: UuidFilter<"user_profile"> | string
    username?: StringFilter<"user_profile"> | string
    display_name?: StringNullableFilter<"user_profile"> | string | null
    bio?: StringNullableFilter<"user_profile"> | string | null
    avatar_url?: StringNullableFilter<"user_profile"> | string | null
    website?: StringNullableFilter<"user_profile"> | string | null
    social_links?: JsonNullableFilter<"user_profile">
    updated_at?: DateTimeFilter<"user_profile"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_profileOrderByWithRelationInput = {
    user_id?: SortOrder
    username?: SortOrder
    display_name?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    social_links?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_profileWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    username?: string
    AND?: user_profileWhereInput | user_profileWhereInput[]
    OR?: user_profileWhereInput[]
    NOT?: user_profileWhereInput | user_profileWhereInput[]
    display_name?: StringNullableFilter<"user_profile"> | string | null
    bio?: StringNullableFilter<"user_profile"> | string | null
    avatar_url?: StringNullableFilter<"user_profile"> | string | null
    website?: StringNullableFilter<"user_profile"> | string | null
    social_links?: JsonNullableFilter<"user_profile">
    updated_at?: DateTimeFilter<"user_profile"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "user_id" | "username">

  export type user_profileOrderByWithAggregationInput = {
    user_id?: SortOrder
    username?: SortOrder
    display_name?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    social_links?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    _count?: user_profileCountOrderByAggregateInput
    _max?: user_profileMaxOrderByAggregateInput
    _min?: user_profileMinOrderByAggregateInput
  }

  export type user_profileScalarWhereWithAggregatesInput = {
    AND?: user_profileScalarWhereWithAggregatesInput | user_profileScalarWhereWithAggregatesInput[]
    OR?: user_profileScalarWhereWithAggregatesInput[]
    NOT?: user_profileScalarWhereWithAggregatesInput | user_profileScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"user_profile"> | string
    username?: StringWithAggregatesFilter<"user_profile"> | string
    display_name?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    bio?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    avatar_url?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    website?: StringNullableWithAggregatesFilter<"user_profile"> | string | null
    social_links?: JsonNullableWithAggregatesFilter<"user_profile">
    updated_at?: DateTimeWithAggregatesFilter<"user_profile"> | Date | string
  }

  export type user_securityWhereInput = {
    AND?: user_securityWhereInput | user_securityWhereInput[]
    OR?: user_securityWhereInput[]
    NOT?: user_securityWhereInput | user_securityWhereInput[]
    user_id?: UuidFilter<"user_security"> | string
    failed_attempts?: IntNullableFilter<"user_security"> | number | null
    last_failed_login?: DateTimeNullableFilter<"user_security"> | Date | string | null
    two_factor_enabled?: BoolNullableFilter<"user_security"> | boolean | null
    otp_code?: StringNullableFilter<"user_security"> | string | null
    otp_expires_at?: DateTimeNullableFilter<"user_security"> | Date | string | null
    recovery_codes?: StringNullableListFilter<"user_security">
    updated_at?: DateTimeFilter<"user_security"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_securityOrderByWithRelationInput = {
    user_id?: SortOrder
    failed_attempts?: SortOrderInput | SortOrder
    last_failed_login?: SortOrderInput | SortOrder
    two_factor_enabled?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expires_at?: SortOrderInput | SortOrder
    recovery_codes?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_securityWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: user_securityWhereInput | user_securityWhereInput[]
    OR?: user_securityWhereInput[]
    NOT?: user_securityWhereInput | user_securityWhereInput[]
    failed_attempts?: IntNullableFilter<"user_security"> | number | null
    last_failed_login?: DateTimeNullableFilter<"user_security"> | Date | string | null
    two_factor_enabled?: BoolNullableFilter<"user_security"> | boolean | null
    otp_code?: StringNullableFilter<"user_security"> | string | null
    otp_expires_at?: DateTimeNullableFilter<"user_security"> | Date | string | null
    recovery_codes?: StringNullableListFilter<"user_security">
    updated_at?: DateTimeFilter<"user_security"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "user_id">

  export type user_securityOrderByWithAggregationInput = {
    user_id?: SortOrder
    failed_attempts?: SortOrderInput | SortOrder
    last_failed_login?: SortOrderInput | SortOrder
    two_factor_enabled?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expires_at?: SortOrderInput | SortOrder
    recovery_codes?: SortOrder
    updated_at?: SortOrder
    _count?: user_securityCountOrderByAggregateInput
    _avg?: user_securityAvgOrderByAggregateInput
    _max?: user_securityMaxOrderByAggregateInput
    _min?: user_securityMinOrderByAggregateInput
    _sum?: user_securitySumOrderByAggregateInput
  }

  export type user_securityScalarWhereWithAggregatesInput = {
    AND?: user_securityScalarWhereWithAggregatesInput | user_securityScalarWhereWithAggregatesInput[]
    OR?: user_securityScalarWhereWithAggregatesInput[]
    NOT?: user_securityScalarWhereWithAggregatesInput | user_securityScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"user_security"> | string
    failed_attempts?: IntNullableWithAggregatesFilter<"user_security"> | number | null
    last_failed_login?: DateTimeNullableWithAggregatesFilter<"user_security"> | Date | string | null
    two_factor_enabled?: BoolNullableWithAggregatesFilter<"user_security"> | boolean | null
    otp_code?: StringNullableWithAggregatesFilter<"user_security"> | string | null
    otp_expires_at?: DateTimeNullableWithAggregatesFilter<"user_security"> | Date | string | null
    recovery_codes?: StringNullableListFilter<"user_security">
    updated_at?: DateTimeWithAggregatesFilter<"user_security"> | Date | string
  }

  export type user_sessionsWhereInput = {
    AND?: user_sessionsWhereInput | user_sessionsWhereInput[]
    OR?: user_sessionsWhereInput[]
    NOT?: user_sessionsWhereInput | user_sessionsWhereInput[]
    session_id?: UuidFilter<"user_sessions"> | string
    user_id?: UuidFilter<"user_sessions"> | string
    token?: StringFilter<"user_sessions"> | string
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    expires_at?: DateTimeFilter<"user_sessions"> | Date | string
    is_revoked?: BoolNullableFilter<"user_sessions"> | boolean | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_sessionsOrderByWithRelationInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    is_revoked?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_sessionsWhereUniqueInput = Prisma.AtLeast<{
    session_id?: string
    AND?: user_sessionsWhereInput | user_sessionsWhereInput[]
    OR?: user_sessionsWhereInput[]
    NOT?: user_sessionsWhereInput | user_sessionsWhereInput[]
    user_id?: UuidFilter<"user_sessions"> | string
    token?: StringFilter<"user_sessions"> | string
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    expires_at?: DateTimeFilter<"user_sessions"> | Date | string
    is_revoked?: BoolNullableFilter<"user_sessions"> | boolean | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "session_id">

  export type user_sessionsOrderByWithAggregationInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    is_revoked?: SortOrderInput | SortOrder
    _count?: user_sessionsCountOrderByAggregateInput
    _max?: user_sessionsMaxOrderByAggregateInput
    _min?: user_sessionsMinOrderByAggregateInput
  }

  export type user_sessionsScalarWhereWithAggregatesInput = {
    AND?: user_sessionsScalarWhereWithAggregatesInput | user_sessionsScalarWhereWithAggregatesInput[]
    OR?: user_sessionsScalarWhereWithAggregatesInput[]
    NOT?: user_sessionsScalarWhereWithAggregatesInput | user_sessionsScalarWhereWithAggregatesInput[]
    session_id?: UuidWithAggregatesFilter<"user_sessions"> | string
    user_id?: UuidWithAggregatesFilter<"user_sessions"> | string
    token?: StringWithAggregatesFilter<"user_sessions"> | string
    created_at?: DateTimeWithAggregatesFilter<"user_sessions"> | Date | string
    expires_at?: DateTimeWithAggregatesFilter<"user_sessions"> | Date | string
    is_revoked?: BoolNullableWithAggregatesFilter<"user_sessions"> | boolean | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    email?: StringFilter<"users"> | string
    phone?: StringNullableFilter<"users"> | string | null
    password_hash?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    is_verified?: BoolNullableFilter<"users"> | boolean | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    favorites?: FavoritesListRelationFilter
    items?: ItemsListRelationFilter
    pay_per_view_access?: Pay_per_view_accessListRelationFilter
    reviews?: ReviewsListRelationFilter
    transactions?: TransactionsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    user_analytics?: XOR<User_analyticsNullableScalarRelationFilter, user_analyticsWhereInput> | null
    user_audit_logs?: User_audit_logsListRelationFilter
    user_blocklist_user_blocklist_blocked_byTousers?: User_blocklistListRelationFilter
    user_blocklist_user_blocklist_user_idTousers?: XOR<User_blocklistNullableScalarRelationFilter, user_blocklistWhereInput> | null
    user_certificates?: XOR<User_certificatesNullableScalarRelationFilter, user_certificatesWhereInput> | null
    user_profile?: XOR<User_profileNullableScalarRelationFilter, user_profileWhereInput> | null
    user_security?: XOR<User_securityNullableScalarRelationFilter, user_securityWhereInput> | null
    user_sessions?: User_sessionsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_verified?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    favorites?: favoritesOrderByRelationAggregateInput
    items?: itemsOrderByRelationAggregateInput
    pay_per_view_access?: pay_per_view_accessOrderByRelationAggregateInput
    reviews?: reviewsOrderByRelationAggregateInput
    transactions?: transactionsOrderByRelationAggregateInput
    password_reset_tokens?: password_reset_tokensOrderByRelationAggregateInput
    user_analytics?: user_analyticsOrderByWithRelationInput
    user_audit_logs?: user_audit_logsOrderByRelationAggregateInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistOrderByRelationAggregateInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistOrderByWithRelationInput
    user_certificates?: user_certificatesOrderByWithRelationInput
    user_profile?: user_profileOrderByWithRelationInput
    user_security?: user_securityOrderByWithRelationInput
    user_sessions?: user_sessionsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    phone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password_hash?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    is_verified?: BoolNullableFilter<"users"> | boolean | null
    is_active?: BoolNullableFilter<"users"> | boolean | null
    favorites?: FavoritesListRelationFilter
    items?: ItemsListRelationFilter
    pay_per_view_access?: Pay_per_view_accessListRelationFilter
    reviews?: ReviewsListRelationFilter
    transactions?: TransactionsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    user_analytics?: XOR<User_analyticsNullableScalarRelationFilter, user_analyticsWhereInput> | null
    user_audit_logs?: User_audit_logsListRelationFilter
    user_blocklist_user_blocklist_blocked_byTousers?: User_blocklistListRelationFilter
    user_blocklist_user_blocklist_user_idTousers?: XOR<User_blocklistNullableScalarRelationFilter, user_blocklistWhereInput> | null
    user_certificates?: XOR<User_certificatesNullableScalarRelationFilter, user_certificatesWhereInput> | null
    user_profile?: XOR<User_profileNullableScalarRelationFilter, user_profileWhereInput> | null
    user_security?: XOR<User_securityNullableScalarRelationFilter, user_securityWhereInput> | null
    user_sessions?: User_sessionsListRelationFilter
  }, "id" | "email" | "phone">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    role?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_verified?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    password_hash?: StringWithAggregatesFilter<"users"> | string
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    is_verified?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    is_active?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
  }

  export type favoritesCreateInput = {
    favorite_id?: string
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutFavoritesInput
    users: usersCreateNestedOneWithoutFavoritesInput
  }

  export type favoritesUncheckedCreateInput = {
    favorite_id?: string
    user_id: string
    item_id: string
    created_at?: Date | string | null
  }

  export type favoritesUpdateInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutFavoritesNestedInput
    users?: usersUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type favoritesUncheckedUpdateInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritesCreateManyInput = {
    favorite_id?: string
    user_id: string
    item_id: string
    created_at?: Date | string | null
  }

  export type favoritesUpdateManyMutationInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritesUncheckedUpdateManyInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type itemsCreateInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    users: usersCreateNestedOneWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsUpdateInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type itemsCreateManyInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
  }

  export type itemsUpdateManyMutationInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type itemsUncheckedUpdateManyInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationCreateInput = {
    monetization_id?: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutMonetizationInput
  }

  export type monetizationUncheckedCreateInput = {
    monetization_id?: string
    item_id: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
  }

  export type monetizationUpdateInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutMonetizationNestedInput
  }

  export type monetizationUncheckedUpdateInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationCreateManyInput = {
    monetization_id?: string
    item_id: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
  }

  export type monetizationUpdateManyMutationInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationUncheckedUpdateManyInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessCreateInput = {
    access_id?: string
    access_expiry: Date | string
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutPay_per_view_accessInput
    users: usersCreateNestedOneWithoutPay_per_view_accessInput
  }

  export type pay_per_view_accessUncheckedCreateInput = {
    access_id?: string
    user_id: string
    item_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type pay_per_view_accessUpdateInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutPay_per_view_accessNestedInput
    users?: usersUpdateOneRequiredWithoutPay_per_view_accessNestedInput
  }

  export type pay_per_view_accessUncheckedUpdateInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessCreateManyInput = {
    access_id?: string
    user_id: string
    item_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type pay_per_view_accessUpdateManyMutationInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessUncheckedUpdateManyInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsCreateInput = {
    review_id?: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutReviewsInput
    users: usersCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateInput = {
    review_id?: string
    user_id: string
    item_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type reviewsUpdateInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutReviewsNestedInput
    users?: usersUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsCreateManyInput = {
    review_id?: string
    user_id: string
    item_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type reviewsUpdateManyMutationInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsUncheckedUpdateManyInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsCreateInput = {
    transaction_id?: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
    users: usersCreateNestedOneWithoutTransactionsInput
    items: itemsCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateInput = {
    transaction_id?: string
    buyer_id: string
    item_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type transactionsUpdateInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutTransactionsNestedInput
    items?: itemsUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsCreateManyInput = {
    transaction_id?: string
    buyer_id: string
    item_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type transactionsUpdateManyMutationInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUncheckedUpdateManyInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type password_reset_tokensCreateInput = {
    token?: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
    users: usersCreateNestedOneWithoutPassword_reset_tokensInput
  }

  export type password_reset_tokensUncheckedCreateInput = {
    token?: string
    user_id: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
  }

  export type password_reset_tokensUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users?: usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput
  }

  export type password_reset_tokensUncheckedUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type password_reset_tokensCreateManyInput = {
    token?: string
    user_id: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
  }

  export type password_reset_tokensUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type password_reset_tokensUncheckedUpdateManyInput = {
    token?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_analyticsCreateInput = {
    posts_count?: number | null
    likes_received?: number | null
    followers_count?: number | null
    following_count?: number | null
    last_login?: Date | string | null
    activity_score?: Decimal | DecimalJsLike | number | string | null
    users: usersCreateNestedOneWithoutUser_analyticsInput
  }

  export type user_analyticsUncheckedCreateInput = {
    user_id: string
    posts_count?: number | null
    likes_received?: number | null
    followers_count?: number | null
    following_count?: number | null
    last_login?: Date | string | null
    activity_score?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsUpdateInput = {
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    users?: usersUpdateOneRequiredWithoutUser_analyticsNestedInput
  }

  export type user_analyticsUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsCreateManyInput = {
    user_id: string
    posts_count?: number | null
    likes_received?: number | null
    followers_count?: number | null
    following_count?: number | null
    last_login?: Date | string | null
    activity_score?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsUpdateManyMutationInput = {
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_audit_logsCreateInput = {
    audit_id?: string
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
    users?: usersCreateNestedOneWithoutUser_audit_logsInput
  }

  export type user_audit_logsUncheckedCreateInput = {
    audit_id?: string
    user_id?: string | null
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
  }

  export type user_audit_logsUpdateInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutUser_audit_logsNestedInput
  }

  export type user_audit_logsUncheckedUpdateInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_audit_logsCreateManyInput = {
    audit_id?: string
    user_id?: string | null
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
  }

  export type user_audit_logsUpdateManyMutationInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_audit_logsUncheckedUpdateManyInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blocklistCreateInput = {
    block_id?: string
    reason: string
    blocked_at?: Date | string
    users_user_blocklist_blocked_byTousers?: usersCreateNestedOneWithoutUser_blocklist_user_blocklist_blocked_byTousersInput
    users_user_blocklist_user_idTousers?: usersCreateNestedOneWithoutUser_blocklist_user_blocklist_user_idTousersInput
  }

  export type user_blocklistUncheckedCreateInput = {
    block_id?: string
    user_id?: string | null
    reason: string
    blocked_by?: string | null
    blocked_at?: Date | string
  }

  export type user_blocklistUpdateInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users_user_blocklist_blocked_byTousers?: usersUpdateOneWithoutUser_blocklist_user_blocklist_blocked_byTousersNestedInput
    users_user_blocklist_user_idTousers?: usersUpdateOneWithoutUser_blocklist_user_blocklist_user_idTousersNestedInput
  }

  export type user_blocklistUncheckedUpdateInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: StringFieldUpdateOperationsInput | string
    blocked_by?: NullableStringFieldUpdateOperationsInput | string | null
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blocklistCreateManyInput = {
    block_id?: string
    user_id?: string | null
    reason: string
    blocked_by?: string | null
    blocked_at?: Date | string
  }

  export type user_blocklistUpdateManyMutationInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blocklistUncheckedUpdateManyInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: StringFieldUpdateOperationsInput | string
    blocked_by?: NullableStringFieldUpdateOperationsInput | string | null
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_certificatesCreateInput = {
    public_key: string
    certificate?: string | null
    created_at?: Date | string
    users: usersCreateNestedOneWithoutUser_certificatesInput
  }

  export type user_certificatesUncheckedCreateInput = {
    user_id: string
    public_key: string
    certificate?: string | null
    created_at?: Date | string
  }

  export type user_certificatesUpdateInput = {
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_certificatesNestedInput
  }

  export type user_certificatesUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_certificatesCreateManyInput = {
    user_id: string
    public_key: string
    certificate?: string | null
    created_at?: Date | string
  }

  export type user_certificatesUpdateManyMutationInput = {
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_certificatesUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_profileCreateInput = {
    username: string
    display_name?: string | null
    bio?: string | null
    avatar_url?: string | null
    website?: string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutUser_profileInput
  }

  export type user_profileUncheckedCreateInput = {
    user_id: string
    username: string
    display_name?: string | null
    bio?: string | null
    avatar_url?: string | null
    website?: string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: Date | string
  }

  export type user_profileUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_profileNestedInput
  }

  export type user_profileUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_profileCreateManyInput = {
    user_id: string
    username: string
    display_name?: string | null
    bio?: string | null
    avatar_url?: string | null
    website?: string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: Date | string
  }

  export type user_profileUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_profileUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_securityCreateInput = {
    failed_attempts?: number | null
    last_failed_login?: Date | string | null
    two_factor_enabled?: boolean | null
    otp_code?: string | null
    otp_expires_at?: Date | string | null
    recovery_codes?: user_securityCreaterecovery_codesInput | string[]
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutUser_securityInput
  }

  export type user_securityUncheckedCreateInput = {
    user_id: string
    failed_attempts?: number | null
    last_failed_login?: Date | string | null
    two_factor_enabled?: boolean | null
    otp_code?: string | null
    otp_expires_at?: Date | string | null
    recovery_codes?: user_securityCreaterecovery_codesInput | string[]
    updated_at?: Date | string
  }

  export type user_securityUpdateInput = {
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_securityNestedInput
  }

  export type user_securityUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_securityCreateManyInput = {
    user_id: string
    failed_attempts?: number | null
    last_failed_login?: Date | string | null
    two_factor_enabled?: boolean | null
    otp_code?: string | null
    otp_expires_at?: Date | string | null
    recovery_codes?: user_securityCreaterecovery_codesInput | string[]
    updated_at?: Date | string
  }

  export type user_securityUpdateManyMutationInput = {
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_securityUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsCreateInput = {
    session_id?: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
    users: usersCreateNestedOneWithoutUser_sessionsInput
  }

  export type user_sessionsUncheckedCreateInput = {
    session_id?: string
    user_id: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
  }

  export type user_sessionsUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users?: usersUpdateOneRequiredWithoutUser_sessionsNestedInput
  }

  export type user_sessionsUncheckedUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_sessionsCreateManyInput = {
    session_id?: string
    user_id: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
  }

  export type user_sessionsUpdateManyMutationInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_sessionsUncheckedUpdateManyInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usersCreateInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ItemsScalarRelationFilter = {
    is?: itemsWhereInput
    isNot?: itemsWhereInput
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type favoritesCountOrderByAggregateInput = {
    favorite_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    created_at?: SortOrder
  }

  export type favoritesMaxOrderByAggregateInput = {
    favorite_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    created_at?: SortOrder
  }

  export type favoritesMinOrderByAggregateInput = {
    favorite_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    created_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type FavoritesListRelationFilter = {
    every?: favoritesWhereInput
    some?: favoritesWhereInput
    none?: favoritesWhereInput
  }

  export type MonetizationListRelationFilter = {
    every?: monetizationWhereInput
    some?: monetizationWhereInput
    none?: monetizationWhereInput
  }

  export type Pay_per_view_accessListRelationFilter = {
    every?: pay_per_view_accessWhereInput
    some?: pay_per_view_accessWhereInput
    none?: pay_per_view_accessWhereInput
  }

  export type ReviewsListRelationFilter = {
    every?: reviewsWhereInput
    some?: reviewsWhereInput
    none?: reviewsWhereInput
  }

  export type TransactionsListRelationFilter = {
    every?: transactionsWhereInput
    some?: transactionsWhereInput
    none?: transactionsWhereInput
  }

  export type favoritesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type monetizationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pay_per_view_accessOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reviewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type itemsCountOrderByAggregateInput = {
    item_id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    media_url?: SortOrder
    category?: SortOrder
    price?: SortOrder
    monetization_type?: SortOrder
    availability?: SortOrder
    created_at?: SortOrder
  }

  export type itemsAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type itemsMaxOrderByAggregateInput = {
    item_id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    media_url?: SortOrder
    category?: SortOrder
    price?: SortOrder
    monetization_type?: SortOrder
    availability?: SortOrder
    created_at?: SortOrder
  }

  export type itemsMinOrderByAggregateInput = {
    item_id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    media_url?: SortOrder
    category?: SortOrder
    price?: SortOrder
    monetization_type?: SortOrder
    availability?: SortOrder
    created_at?: SortOrder
  }

  export type itemsSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type monetizationCountOrderByAggregateInput = {
    monetization_id?: SortOrder
    item_id?: SortOrder
    type?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
  }

  export type monetizationAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type monetizationMaxOrderByAggregateInput = {
    monetization_id?: SortOrder
    item_id?: SortOrder
    type?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
  }

  export type monetizationMinOrderByAggregateInput = {
    monetization_id?: SortOrder
    item_id?: SortOrder
    type?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    created_at?: SortOrder
  }

  export type monetizationSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type pay_per_view_accessCountOrderByAggregateInput = {
    access_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    access_expiry?: SortOrder
    created_at?: SortOrder
  }

  export type pay_per_view_accessMaxOrderByAggregateInput = {
    access_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    access_expiry?: SortOrder
    created_at?: SortOrder
  }

  export type pay_per_view_accessMinOrderByAggregateInput = {
    access_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    access_expiry?: SortOrder
    created_at?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type reviewsCountOrderByAggregateInput = {
    review_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    rating?: SortOrder
    review_text?: SortOrder
    created_at?: SortOrder
  }

  export type reviewsAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type reviewsMaxOrderByAggregateInput = {
    review_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    rating?: SortOrder
    review_text?: SortOrder
    created_at?: SortOrder
  }

  export type reviewsMinOrderByAggregateInput = {
    review_id?: SortOrder
    user_id?: SortOrder
    item_id?: SortOrder
    rating?: SortOrder
    review_text?: SortOrder
    created_at?: SortOrder
  }

  export type reviewsSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type transactionsCountOrderByAggregateInput = {
    transaction_id?: SortOrder
    buyer_id?: SortOrder
    item_id?: SortOrder
    amount?: SortOrder
    payment_status?: SortOrder
    transaction_date?: SortOrder
  }

  export type transactionsAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type transactionsMaxOrderByAggregateInput = {
    transaction_id?: SortOrder
    buyer_id?: SortOrder
    item_id?: SortOrder
    amount?: SortOrder
    payment_status?: SortOrder
    transaction_date?: SortOrder
  }

  export type transactionsMinOrderByAggregateInput = {
    transaction_id?: SortOrder
    buyer_id?: SortOrder
    item_id?: SortOrder
    amount?: SortOrder
    payment_status?: SortOrder
    transaction_date?: SortOrder
  }

  export type transactionsSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type password_reset_tokensCountOrderByAggregateInput = {
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    used?: SortOrder
  }

  export type password_reset_tokensMaxOrderByAggregateInput = {
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    used?: SortOrder
  }

  export type password_reset_tokensMinOrderByAggregateInput = {
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    used?: SortOrder
  }

  export type user_analyticsCountOrderByAggregateInput = {
    user_id?: SortOrder
    posts_count?: SortOrder
    likes_received?: SortOrder
    followers_count?: SortOrder
    following_count?: SortOrder
    last_login?: SortOrder
    activity_score?: SortOrder
  }

  export type user_analyticsAvgOrderByAggregateInput = {
    posts_count?: SortOrder
    likes_received?: SortOrder
    followers_count?: SortOrder
    following_count?: SortOrder
    activity_score?: SortOrder
  }

  export type user_analyticsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    posts_count?: SortOrder
    likes_received?: SortOrder
    followers_count?: SortOrder
    following_count?: SortOrder
    last_login?: SortOrder
    activity_score?: SortOrder
  }

  export type user_analyticsMinOrderByAggregateInput = {
    user_id?: SortOrder
    posts_count?: SortOrder
    likes_received?: SortOrder
    followers_count?: SortOrder
    following_count?: SortOrder
    last_login?: SortOrder
    activity_score?: SortOrder
  }

  export type user_analyticsSumOrderByAggregateInput = {
    posts_count?: SortOrder
    likes_received?: SortOrder
    followers_count?: SortOrder
    following_count?: SortOrder
    activity_score?: SortOrder
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type user_audit_logsCountOrderByAggregateInput = {
    audit_id?: SortOrder
    user_id?: SortOrder
    action_type?: SortOrder
    details?: SortOrder
    performed_by?: SortOrder
    event_time?: SortOrder
  }

  export type user_audit_logsMaxOrderByAggregateInput = {
    audit_id?: SortOrder
    user_id?: SortOrder
    action_type?: SortOrder
    performed_by?: SortOrder
    event_time?: SortOrder
  }

  export type user_audit_logsMinOrderByAggregateInput = {
    audit_id?: SortOrder
    user_id?: SortOrder
    action_type?: SortOrder
    performed_by?: SortOrder
    event_time?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type user_blocklistCountOrderByAggregateInput = {
    block_id?: SortOrder
    user_id?: SortOrder
    reason?: SortOrder
    blocked_by?: SortOrder
    blocked_at?: SortOrder
  }

  export type user_blocklistMaxOrderByAggregateInput = {
    block_id?: SortOrder
    user_id?: SortOrder
    reason?: SortOrder
    blocked_by?: SortOrder
    blocked_at?: SortOrder
  }

  export type user_blocklistMinOrderByAggregateInput = {
    block_id?: SortOrder
    user_id?: SortOrder
    reason?: SortOrder
    blocked_by?: SortOrder
    blocked_at?: SortOrder
  }

  export type user_certificatesCountOrderByAggregateInput = {
    user_id?: SortOrder
    public_key?: SortOrder
    certificate?: SortOrder
    created_at?: SortOrder
  }

  export type user_certificatesMaxOrderByAggregateInput = {
    user_id?: SortOrder
    public_key?: SortOrder
    certificate?: SortOrder
    created_at?: SortOrder
  }

  export type user_certificatesMinOrderByAggregateInput = {
    user_id?: SortOrder
    public_key?: SortOrder
    certificate?: SortOrder
    created_at?: SortOrder
  }

  export type user_profileCountOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    display_name?: SortOrder
    bio?: SortOrder
    avatar_url?: SortOrder
    website?: SortOrder
    social_links?: SortOrder
    updated_at?: SortOrder
  }

  export type user_profileMaxOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    display_name?: SortOrder
    bio?: SortOrder
    avatar_url?: SortOrder
    website?: SortOrder
    updated_at?: SortOrder
  }

  export type user_profileMinOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    display_name?: SortOrder
    bio?: SortOrder
    avatar_url?: SortOrder
    website?: SortOrder
    updated_at?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type user_securityCountOrderByAggregateInput = {
    user_id?: SortOrder
    failed_attempts?: SortOrder
    last_failed_login?: SortOrder
    two_factor_enabled?: SortOrder
    otp_code?: SortOrder
    otp_expires_at?: SortOrder
    recovery_codes?: SortOrder
    updated_at?: SortOrder
  }

  export type user_securityAvgOrderByAggregateInput = {
    failed_attempts?: SortOrder
  }

  export type user_securityMaxOrderByAggregateInput = {
    user_id?: SortOrder
    failed_attempts?: SortOrder
    last_failed_login?: SortOrder
    two_factor_enabled?: SortOrder
    otp_code?: SortOrder
    otp_expires_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_securityMinOrderByAggregateInput = {
    user_id?: SortOrder
    failed_attempts?: SortOrder
    last_failed_login?: SortOrder
    two_factor_enabled?: SortOrder
    otp_code?: SortOrder
    otp_expires_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_securitySumOrderByAggregateInput = {
    failed_attempts?: SortOrder
  }

  export type user_sessionsCountOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    is_revoked?: SortOrder
  }

  export type user_sessionsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    is_revoked?: SortOrder
  }

  export type user_sessionsMinOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    is_revoked?: SortOrder
  }

  export type ItemsListRelationFilter = {
    every?: itemsWhereInput
    some?: itemsWhereInput
    none?: itemsWhereInput
  }

  export type Password_reset_tokensListRelationFilter = {
    every?: password_reset_tokensWhereInput
    some?: password_reset_tokensWhereInput
    none?: password_reset_tokensWhereInput
  }

  export type User_analyticsNullableScalarRelationFilter = {
    is?: user_analyticsWhereInput | null
    isNot?: user_analyticsWhereInput | null
  }

  export type User_audit_logsListRelationFilter = {
    every?: user_audit_logsWhereInput
    some?: user_audit_logsWhereInput
    none?: user_audit_logsWhereInput
  }

  export type User_blocklistListRelationFilter = {
    every?: user_blocklistWhereInput
    some?: user_blocklistWhereInput
    none?: user_blocklistWhereInput
  }

  export type User_blocklistNullableScalarRelationFilter = {
    is?: user_blocklistWhereInput | null
    isNot?: user_blocklistWhereInput | null
  }

  export type User_certificatesNullableScalarRelationFilter = {
    is?: user_certificatesWhereInput | null
    isNot?: user_certificatesWhereInput | null
  }

  export type User_profileNullableScalarRelationFilter = {
    is?: user_profileWhereInput | null
    isNot?: user_profileWhereInput | null
  }

  export type User_securityNullableScalarRelationFilter = {
    is?: user_securityWhereInput | null
    isNot?: user_securityWhereInput | null
  }

  export type User_sessionsListRelationFilter = {
    every?: user_sessionsWhereInput
    some?: user_sessionsWhereInput
    none?: user_sessionsWhereInput
  }

  export type itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type password_reset_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_audit_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_blocklistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_verified?: SortOrder
    is_active?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_verified?: SortOrder
    is_active?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password_hash?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    is_verified?: SortOrder
    is_active?: SortOrder
  }

  export type itemsCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<itemsCreateWithoutFavoritesInput, itemsUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: itemsCreateOrConnectWithoutFavoritesInput
    connect?: itemsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<usersCreateWithoutFavoritesInput, usersUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: usersCreateOrConnectWithoutFavoritesInput
    connect?: usersWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type itemsUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<itemsCreateWithoutFavoritesInput, itemsUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: itemsCreateOrConnectWithoutFavoritesInput
    upsert?: itemsUpsertWithoutFavoritesInput
    connect?: itemsWhereUniqueInput
    update?: XOR<XOR<itemsUpdateToOneWithWhereWithoutFavoritesInput, itemsUpdateWithoutFavoritesInput>, itemsUncheckedUpdateWithoutFavoritesInput>
  }

  export type usersUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<usersCreateWithoutFavoritesInput, usersUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: usersCreateOrConnectWithoutFavoritesInput
    upsert?: usersUpsertWithoutFavoritesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutFavoritesInput, usersUpdateWithoutFavoritesInput>, usersUncheckedUpdateWithoutFavoritesInput>
  }

  export type favoritesCreateNestedManyWithoutItemsInput = {
    create?: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput> | favoritesCreateWithoutItemsInput[] | favoritesUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutItemsInput | favoritesCreateOrConnectWithoutItemsInput[]
    createMany?: favoritesCreateManyItemsInputEnvelope
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutItemsInput = {
    create?: XOR<usersCreateWithoutItemsInput, usersUncheckedCreateWithoutItemsInput>
    connectOrCreate?: usersCreateOrConnectWithoutItemsInput
    connect?: usersWhereUniqueInput
  }

  export type monetizationCreateNestedManyWithoutItemsInput = {
    create?: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput> | monetizationCreateWithoutItemsInput[] | monetizationUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: monetizationCreateOrConnectWithoutItemsInput | monetizationCreateOrConnectWithoutItemsInput[]
    createMany?: monetizationCreateManyItemsInputEnvelope
    connect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
  }

  export type pay_per_view_accessCreateNestedManyWithoutItemsInput = {
    create?: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput> | pay_per_view_accessCreateWithoutItemsInput[] | pay_per_view_accessUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutItemsInput | pay_per_view_accessCreateOrConnectWithoutItemsInput[]
    createMany?: pay_per_view_accessCreateManyItemsInputEnvelope
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
  }

  export type reviewsCreateNestedManyWithoutItemsInput = {
    create?: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput> | reviewsCreateWithoutItemsInput[] | reviewsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutItemsInput | reviewsCreateOrConnectWithoutItemsInput[]
    createMany?: reviewsCreateManyItemsInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type transactionsCreateNestedManyWithoutItemsInput = {
    create?: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput> | transactionsCreateWithoutItemsInput[] | transactionsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutItemsInput | transactionsCreateOrConnectWithoutItemsInput[]
    createMany?: transactionsCreateManyItemsInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type favoritesUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput> | favoritesCreateWithoutItemsInput[] | favoritesUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutItemsInput | favoritesCreateOrConnectWithoutItemsInput[]
    createMany?: favoritesCreateManyItemsInputEnvelope
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
  }

  export type monetizationUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput> | monetizationCreateWithoutItemsInput[] | monetizationUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: monetizationCreateOrConnectWithoutItemsInput | monetizationCreateOrConnectWithoutItemsInput[]
    createMany?: monetizationCreateManyItemsInputEnvelope
    connect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
  }

  export type pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput> | pay_per_view_accessCreateWithoutItemsInput[] | pay_per_view_accessUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutItemsInput | pay_per_view_accessCreateOrConnectWithoutItemsInput[]
    createMany?: pay_per_view_accessCreateManyItemsInputEnvelope
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
  }

  export type reviewsUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput> | reviewsCreateWithoutItemsInput[] | reviewsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutItemsInput | reviewsCreateOrConnectWithoutItemsInput[]
    createMany?: reviewsCreateManyItemsInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type transactionsUncheckedCreateNestedManyWithoutItemsInput = {
    create?: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput> | transactionsCreateWithoutItemsInput[] | transactionsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutItemsInput | transactionsCreateOrConnectWithoutItemsInput[]
    createMany?: transactionsCreateManyItemsInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type favoritesUpdateManyWithoutItemsNestedInput = {
    create?: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput> | favoritesCreateWithoutItemsInput[] | favoritesUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutItemsInput | favoritesCreateOrConnectWithoutItemsInput[]
    upsert?: favoritesUpsertWithWhereUniqueWithoutItemsInput | favoritesUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: favoritesCreateManyItemsInputEnvelope
    set?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    disconnect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    delete?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    update?: favoritesUpdateWithWhereUniqueWithoutItemsInput | favoritesUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: favoritesUpdateManyWithWhereWithoutItemsInput | favoritesUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<usersCreateWithoutItemsInput, usersUncheckedCreateWithoutItemsInput>
    connectOrCreate?: usersCreateOrConnectWithoutItemsInput
    upsert?: usersUpsertWithoutItemsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutItemsInput, usersUpdateWithoutItemsInput>, usersUncheckedUpdateWithoutItemsInput>
  }

  export type monetizationUpdateManyWithoutItemsNestedInput = {
    create?: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput> | monetizationCreateWithoutItemsInput[] | monetizationUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: monetizationCreateOrConnectWithoutItemsInput | monetizationCreateOrConnectWithoutItemsInput[]
    upsert?: monetizationUpsertWithWhereUniqueWithoutItemsInput | monetizationUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: monetizationCreateManyItemsInputEnvelope
    set?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    disconnect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    delete?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    connect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    update?: monetizationUpdateWithWhereUniqueWithoutItemsInput | monetizationUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: monetizationUpdateManyWithWhereWithoutItemsInput | monetizationUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: monetizationScalarWhereInput | monetizationScalarWhereInput[]
  }

  export type pay_per_view_accessUpdateManyWithoutItemsNestedInput = {
    create?: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput> | pay_per_view_accessCreateWithoutItemsInput[] | pay_per_view_accessUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutItemsInput | pay_per_view_accessCreateOrConnectWithoutItemsInput[]
    upsert?: pay_per_view_accessUpsertWithWhereUniqueWithoutItemsInput | pay_per_view_accessUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: pay_per_view_accessCreateManyItemsInputEnvelope
    set?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    disconnect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    delete?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    update?: pay_per_view_accessUpdateWithWhereUniqueWithoutItemsInput | pay_per_view_accessUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: pay_per_view_accessUpdateManyWithWhereWithoutItemsInput | pay_per_view_accessUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
  }

  export type reviewsUpdateManyWithoutItemsNestedInput = {
    create?: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput> | reviewsCreateWithoutItemsInput[] | reviewsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutItemsInput | reviewsCreateOrConnectWithoutItemsInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutItemsInput | reviewsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: reviewsCreateManyItemsInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutItemsInput | reviewsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutItemsInput | reviewsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type transactionsUpdateManyWithoutItemsNestedInput = {
    create?: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput> | transactionsCreateWithoutItemsInput[] | transactionsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutItemsInput | transactionsCreateOrConnectWithoutItemsInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutItemsInput | transactionsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: transactionsCreateManyItemsInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutItemsInput | transactionsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutItemsInput | transactionsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type favoritesUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput> | favoritesCreateWithoutItemsInput[] | favoritesUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutItemsInput | favoritesCreateOrConnectWithoutItemsInput[]
    upsert?: favoritesUpsertWithWhereUniqueWithoutItemsInput | favoritesUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: favoritesCreateManyItemsInputEnvelope
    set?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    disconnect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    delete?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    update?: favoritesUpdateWithWhereUniqueWithoutItemsInput | favoritesUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: favoritesUpdateManyWithWhereWithoutItemsInput | favoritesUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
  }

  export type monetizationUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput> | monetizationCreateWithoutItemsInput[] | monetizationUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: monetizationCreateOrConnectWithoutItemsInput | monetizationCreateOrConnectWithoutItemsInput[]
    upsert?: monetizationUpsertWithWhereUniqueWithoutItemsInput | monetizationUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: monetizationCreateManyItemsInputEnvelope
    set?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    disconnect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    delete?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    connect?: monetizationWhereUniqueInput | monetizationWhereUniqueInput[]
    update?: monetizationUpdateWithWhereUniqueWithoutItemsInput | monetizationUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: monetizationUpdateManyWithWhereWithoutItemsInput | monetizationUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: monetizationScalarWhereInput | monetizationScalarWhereInput[]
  }

  export type pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput> | pay_per_view_accessCreateWithoutItemsInput[] | pay_per_view_accessUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutItemsInput | pay_per_view_accessCreateOrConnectWithoutItemsInput[]
    upsert?: pay_per_view_accessUpsertWithWhereUniqueWithoutItemsInput | pay_per_view_accessUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: pay_per_view_accessCreateManyItemsInputEnvelope
    set?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    disconnect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    delete?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    update?: pay_per_view_accessUpdateWithWhereUniqueWithoutItemsInput | pay_per_view_accessUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: pay_per_view_accessUpdateManyWithWhereWithoutItemsInput | pay_per_view_accessUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
  }

  export type reviewsUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput> | reviewsCreateWithoutItemsInput[] | reviewsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutItemsInput | reviewsCreateOrConnectWithoutItemsInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutItemsInput | reviewsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: reviewsCreateManyItemsInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutItemsInput | reviewsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutItemsInput | reviewsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type transactionsUncheckedUpdateManyWithoutItemsNestedInput = {
    create?: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput> | transactionsCreateWithoutItemsInput[] | transactionsUncheckedCreateWithoutItemsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutItemsInput | transactionsCreateOrConnectWithoutItemsInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutItemsInput | transactionsUpsertWithWhereUniqueWithoutItemsInput[]
    createMany?: transactionsCreateManyItemsInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutItemsInput | transactionsUpdateWithWhereUniqueWithoutItemsInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutItemsInput | transactionsUpdateManyWithWhereWithoutItemsInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type itemsCreateNestedOneWithoutMonetizationInput = {
    create?: XOR<itemsCreateWithoutMonetizationInput, itemsUncheckedCreateWithoutMonetizationInput>
    connectOrCreate?: itemsCreateOrConnectWithoutMonetizationInput
    connect?: itemsWhereUniqueInput
  }

  export type itemsUpdateOneRequiredWithoutMonetizationNestedInput = {
    create?: XOR<itemsCreateWithoutMonetizationInput, itemsUncheckedCreateWithoutMonetizationInput>
    connectOrCreate?: itemsCreateOrConnectWithoutMonetizationInput
    upsert?: itemsUpsertWithoutMonetizationInput
    connect?: itemsWhereUniqueInput
    update?: XOR<XOR<itemsUpdateToOneWithWhereWithoutMonetizationInput, itemsUpdateWithoutMonetizationInput>, itemsUncheckedUpdateWithoutMonetizationInput>
  }

  export type itemsCreateNestedOneWithoutPay_per_view_accessInput = {
    create?: XOR<itemsCreateWithoutPay_per_view_accessInput, itemsUncheckedCreateWithoutPay_per_view_accessInput>
    connectOrCreate?: itemsCreateOrConnectWithoutPay_per_view_accessInput
    connect?: itemsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutPay_per_view_accessInput = {
    create?: XOR<usersCreateWithoutPay_per_view_accessInput, usersUncheckedCreateWithoutPay_per_view_accessInput>
    connectOrCreate?: usersCreateOrConnectWithoutPay_per_view_accessInput
    connect?: usersWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type itemsUpdateOneRequiredWithoutPay_per_view_accessNestedInput = {
    create?: XOR<itemsCreateWithoutPay_per_view_accessInput, itemsUncheckedCreateWithoutPay_per_view_accessInput>
    connectOrCreate?: itemsCreateOrConnectWithoutPay_per_view_accessInput
    upsert?: itemsUpsertWithoutPay_per_view_accessInput
    connect?: itemsWhereUniqueInput
    update?: XOR<XOR<itemsUpdateToOneWithWhereWithoutPay_per_view_accessInput, itemsUpdateWithoutPay_per_view_accessInput>, itemsUncheckedUpdateWithoutPay_per_view_accessInput>
  }

  export type usersUpdateOneRequiredWithoutPay_per_view_accessNestedInput = {
    create?: XOR<usersCreateWithoutPay_per_view_accessInput, usersUncheckedCreateWithoutPay_per_view_accessInput>
    connectOrCreate?: usersCreateOrConnectWithoutPay_per_view_accessInput
    upsert?: usersUpsertWithoutPay_per_view_accessInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPay_per_view_accessInput, usersUpdateWithoutPay_per_view_accessInput>, usersUncheckedUpdateWithoutPay_per_view_accessInput>
  }

  export type itemsCreateNestedOneWithoutReviewsInput = {
    create?: XOR<itemsCreateWithoutReviewsInput, itemsUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: itemsCreateOrConnectWithoutReviewsInput
    connect?: itemsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReviewsInput = {
    create?: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReviewsInput
    connect?: usersWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type itemsUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<itemsCreateWithoutReviewsInput, itemsUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: itemsCreateOrConnectWithoutReviewsInput
    upsert?: itemsUpsertWithoutReviewsInput
    connect?: itemsWhereUniqueInput
    update?: XOR<XOR<itemsUpdateToOneWithWhereWithoutReviewsInput, itemsUpdateWithoutReviewsInput>, itemsUncheckedUpdateWithoutReviewsInput>
  }

  export type usersUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReviewsInput
    upsert?: usersUpsertWithoutReviewsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReviewsInput, usersUpdateWithoutReviewsInput>, usersUncheckedUpdateWithoutReviewsInput>
  }

  export type usersCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<usersCreateWithoutTransactionsInput, usersUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutTransactionsInput
    connect?: usersWhereUniqueInput
  }

  export type itemsCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<itemsCreateWithoutTransactionsInput, itemsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: itemsCreateOrConnectWithoutTransactionsInput
    connect?: itemsWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type usersUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<usersCreateWithoutTransactionsInput, usersUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutTransactionsInput
    upsert?: usersUpsertWithoutTransactionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutTransactionsInput, usersUpdateWithoutTransactionsInput>, usersUncheckedUpdateWithoutTransactionsInput>
  }

  export type itemsUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<itemsCreateWithoutTransactionsInput, itemsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: itemsCreateOrConnectWithoutTransactionsInput
    upsert?: itemsUpsertWithoutTransactionsInput
    connect?: itemsWhereUniqueInput
    update?: XOR<XOR<itemsUpdateToOneWithWhereWithoutTransactionsInput, itemsUpdateWithoutTransactionsInput>, itemsUncheckedUpdateWithoutTransactionsInput>
  }

  export type usersCreateNestedOneWithoutPassword_reset_tokensInput = {
    create?: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutPassword_reset_tokensInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput = {
    create?: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutPassword_reset_tokensInput
    upsert?: usersUpsertWithoutPassword_reset_tokensInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput, usersUpdateWithoutPassword_reset_tokensInput>, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type usersCreateNestedOneWithoutUser_analyticsInput = {
    create?: XOR<usersCreateWithoutUser_analyticsInput, usersUncheckedCreateWithoutUser_analyticsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_analyticsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_analyticsNestedInput = {
    create?: XOR<usersCreateWithoutUser_analyticsInput, usersUncheckedCreateWithoutUser_analyticsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_analyticsInput
    upsert?: usersUpsertWithoutUser_analyticsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_analyticsInput, usersUpdateWithoutUser_analyticsInput>, usersUncheckedUpdateWithoutUser_analyticsInput>
  }

  export type usersCreateNestedOneWithoutUser_audit_logsInput = {
    create?: XOR<usersCreateWithoutUser_audit_logsInput, usersUncheckedCreateWithoutUser_audit_logsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_audit_logsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUser_audit_logsNestedInput = {
    create?: XOR<usersCreateWithoutUser_audit_logsInput, usersUncheckedCreateWithoutUser_audit_logsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_audit_logsInput
    upsert?: usersUpsertWithoutUser_audit_logsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_audit_logsInput, usersUpdateWithoutUser_audit_logsInput>, usersUncheckedUpdateWithoutUser_audit_logsInput>
  }

  export type usersCreateNestedOneWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    create?: XOR<usersCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_blocklist_user_blocklist_blocked_byTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    create?: XOR<usersCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_blocklist_user_blocklist_user_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutUser_blocklist_user_blocklist_blocked_byTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_blocklist_user_blocklist_blocked_byTousersInput
    upsert?: usersUpsertWithoutUser_blocklist_user_blocklist_blocked_byTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
  }

  export type usersUpdateOneWithoutUser_blocklist_user_blocklist_user_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_blocklist_user_blocklist_user_idTousersInput
    upsert?: usersUpsertWithoutUser_blocklist_user_blocklist_user_idTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput>, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
  }

  export type usersCreateNestedOneWithoutUser_certificatesInput = {
    create?: XOR<usersCreateWithoutUser_certificatesInput, usersUncheckedCreateWithoutUser_certificatesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_certificatesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_certificatesNestedInput = {
    create?: XOR<usersCreateWithoutUser_certificatesInput, usersUncheckedCreateWithoutUser_certificatesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_certificatesInput
    upsert?: usersUpsertWithoutUser_certificatesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_certificatesInput, usersUpdateWithoutUser_certificatesInput>, usersUncheckedUpdateWithoutUser_certificatesInput>
  }

  export type usersCreateNestedOneWithoutUser_profileInput = {
    create?: XOR<usersCreateWithoutUser_profileInput, usersUncheckedCreateWithoutUser_profileInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profileInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_profileNestedInput = {
    create?: XOR<usersCreateWithoutUser_profileInput, usersUncheckedCreateWithoutUser_profileInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_profileInput
    upsert?: usersUpsertWithoutUser_profileInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_profileInput, usersUpdateWithoutUser_profileInput>, usersUncheckedUpdateWithoutUser_profileInput>
  }

  export type user_securityCreaterecovery_codesInput = {
    set: string[]
  }

  export type usersCreateNestedOneWithoutUser_securityInput = {
    create?: XOR<usersCreateWithoutUser_securityInput, usersUncheckedCreateWithoutUser_securityInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_securityInput
    connect?: usersWhereUniqueInput
  }

  export type user_securityUpdaterecovery_codesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type usersUpdateOneRequiredWithoutUser_securityNestedInput = {
    create?: XOR<usersCreateWithoutUser_securityInput, usersUncheckedCreateWithoutUser_securityInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_securityInput
    upsert?: usersUpsertWithoutUser_securityInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_securityInput, usersUpdateWithoutUser_securityInput>, usersUncheckedUpdateWithoutUser_securityInput>
  }

  export type usersCreateNestedOneWithoutUser_sessionsInput = {
    create?: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_sessionsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_sessionsNestedInput = {
    create?: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_sessionsInput
    upsert?: usersUpsertWithoutUser_sessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_sessionsInput, usersUpdateWithoutUser_sessionsInput>, usersUncheckedUpdateWithoutUser_sessionsInput>
  }

  export type favoritesCreateNestedManyWithoutUsersInput = {
    create?: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput> | favoritesCreateWithoutUsersInput[] | favoritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutUsersInput | favoritesCreateOrConnectWithoutUsersInput[]
    createMany?: favoritesCreateManyUsersInputEnvelope
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
  }

  export type itemsCreateNestedManyWithoutUsersInput = {
    create?: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput> | itemsCreateWithoutUsersInput[] | itemsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: itemsCreateOrConnectWithoutUsersInput | itemsCreateOrConnectWithoutUsersInput[]
    createMany?: itemsCreateManyUsersInputEnvelope
    connect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
  }

  export type pay_per_view_accessCreateNestedManyWithoutUsersInput = {
    create?: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput> | pay_per_view_accessCreateWithoutUsersInput[] | pay_per_view_accessUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutUsersInput | pay_per_view_accessCreateOrConnectWithoutUsersInput[]
    createMany?: pay_per_view_accessCreateManyUsersInputEnvelope
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
  }

  export type reviewsCreateNestedManyWithoutUsersInput = {
    create?: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput> | reviewsCreateWithoutUsersInput[] | reviewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUsersInput | reviewsCreateOrConnectWithoutUsersInput[]
    createMany?: reviewsCreateManyUsersInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type transactionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput> | transactionsCreateWithoutUsersInput[] | transactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUsersInput | transactionsCreateOrConnectWithoutUsersInput[]
    createMany?: transactionsCreateManyUsersInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type password_reset_tokensCreateNestedManyWithoutUsersInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type user_analyticsCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_analyticsCreateOrConnectWithoutUsersInput
    connect?: user_analyticsWhereUniqueInput
  }

  export type user_audit_logsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput> | user_audit_logsCreateWithoutUsersInput[] | user_audit_logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_audit_logsCreateOrConnectWithoutUsersInput | user_audit_logsCreateOrConnectWithoutUsersInput[]
    createMany?: user_audit_logsCreateManyUsersInputEnvelope
    connect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
  }

  export type user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput> | user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput[] | user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput[]
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput[]
    createMany?: user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInputEnvelope
    connect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
  }

  export type user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_user_idTousersInput
    connect?: user_blocklistWhereUniqueInput
  }

  export type user_certificatesCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_certificatesCreateOrConnectWithoutUsersInput
    connect?: user_certificatesWhereUniqueInput
  }

  export type user_profileCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUsersInput
    connect?: user_profileWhereUniqueInput
  }

  export type user_securityCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUsersInput
    connect?: user_securityWhereUniqueInput
  }

  export type user_sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
  }

  export type favoritesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput> | favoritesCreateWithoutUsersInput[] | favoritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutUsersInput | favoritesCreateOrConnectWithoutUsersInput[]
    createMany?: favoritesCreateManyUsersInputEnvelope
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
  }

  export type itemsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput> | itemsCreateWithoutUsersInput[] | itemsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: itemsCreateOrConnectWithoutUsersInput | itemsCreateOrConnectWithoutUsersInput[]
    createMany?: itemsCreateManyUsersInputEnvelope
    connect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
  }

  export type pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput> | pay_per_view_accessCreateWithoutUsersInput[] | pay_per_view_accessUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutUsersInput | pay_per_view_accessCreateOrConnectWithoutUsersInput[]
    createMany?: pay_per_view_accessCreateManyUsersInputEnvelope
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
  }

  export type reviewsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput> | reviewsCreateWithoutUsersInput[] | reviewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUsersInput | reviewsCreateOrConnectWithoutUsersInput[]
    createMany?: reviewsCreateManyUsersInputEnvelope
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
  }

  export type transactionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput> | transactionsCreateWithoutUsersInput[] | transactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUsersInput | transactionsCreateOrConnectWithoutUsersInput[]
    createMany?: transactionsCreateManyUsersInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type user_analyticsUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_analyticsCreateOrConnectWithoutUsersInput
    connect?: user_analyticsWhereUniqueInput
  }

  export type user_audit_logsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput> | user_audit_logsCreateWithoutUsersInput[] | user_audit_logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_audit_logsCreateOrConnectWithoutUsersInput | user_audit_logsCreateOrConnectWithoutUsersInput[]
    createMany?: user_audit_logsCreateManyUsersInputEnvelope
    connect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
  }

  export type user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput> | user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput[] | user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput[]
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput[]
    createMany?: user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInputEnvelope
    connect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
  }

  export type user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_user_idTousersInput
    connect?: user_blocklistWhereUniqueInput
  }

  export type user_certificatesUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_certificatesCreateOrConnectWithoutUsersInput
    connect?: user_certificatesWhereUniqueInput
  }

  export type user_profileUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUsersInput
    connect?: user_profileWhereUniqueInput
  }

  export type user_securityUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUsersInput
    connect?: user_securityWhereUniqueInput
  }

  export type user_sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
  }

  export type favoritesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput> | favoritesCreateWithoutUsersInput[] | favoritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutUsersInput | favoritesCreateOrConnectWithoutUsersInput[]
    upsert?: favoritesUpsertWithWhereUniqueWithoutUsersInput | favoritesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: favoritesCreateManyUsersInputEnvelope
    set?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    disconnect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    delete?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    update?: favoritesUpdateWithWhereUniqueWithoutUsersInput | favoritesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: favoritesUpdateManyWithWhereWithoutUsersInput | favoritesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
  }

  export type itemsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput> | itemsCreateWithoutUsersInput[] | itemsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: itemsCreateOrConnectWithoutUsersInput | itemsCreateOrConnectWithoutUsersInput[]
    upsert?: itemsUpsertWithWhereUniqueWithoutUsersInput | itemsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: itemsCreateManyUsersInputEnvelope
    set?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    disconnect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    delete?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    connect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    update?: itemsUpdateWithWhereUniqueWithoutUsersInput | itemsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: itemsUpdateManyWithWhereWithoutUsersInput | itemsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: itemsScalarWhereInput | itemsScalarWhereInput[]
  }

  export type pay_per_view_accessUpdateManyWithoutUsersNestedInput = {
    create?: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput> | pay_per_view_accessCreateWithoutUsersInput[] | pay_per_view_accessUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutUsersInput | pay_per_view_accessCreateOrConnectWithoutUsersInput[]
    upsert?: pay_per_view_accessUpsertWithWhereUniqueWithoutUsersInput | pay_per_view_accessUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: pay_per_view_accessCreateManyUsersInputEnvelope
    set?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    disconnect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    delete?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    update?: pay_per_view_accessUpdateWithWhereUniqueWithoutUsersInput | pay_per_view_accessUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: pay_per_view_accessUpdateManyWithWhereWithoutUsersInput | pay_per_view_accessUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
  }

  export type reviewsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput> | reviewsCreateWithoutUsersInput[] | reviewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUsersInput | reviewsCreateOrConnectWithoutUsersInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutUsersInput | reviewsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reviewsCreateManyUsersInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutUsersInput | reviewsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutUsersInput | reviewsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type transactionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput> | transactionsCreateWithoutUsersInput[] | transactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUsersInput | transactionsCreateOrConnectWithoutUsersInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutUsersInput | transactionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: transactionsCreateManyUsersInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutUsersInput | transactionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutUsersInput | transactionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type password_reset_tokensUpdateManyWithoutUsersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput | password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput | password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutUsersInput | password_reset_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type user_analyticsUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_analyticsCreateOrConnectWithoutUsersInput
    upsert?: user_analyticsUpsertWithoutUsersInput
    disconnect?: user_analyticsWhereInput | boolean
    delete?: user_analyticsWhereInput | boolean
    connect?: user_analyticsWhereUniqueInput
    update?: XOR<XOR<user_analyticsUpdateToOneWithWhereWithoutUsersInput, user_analyticsUpdateWithoutUsersInput>, user_analyticsUncheckedUpdateWithoutUsersInput>
  }

  export type user_audit_logsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput> | user_audit_logsCreateWithoutUsersInput[] | user_audit_logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_audit_logsCreateOrConnectWithoutUsersInput | user_audit_logsCreateOrConnectWithoutUsersInput[]
    upsert?: user_audit_logsUpsertWithWhereUniqueWithoutUsersInput | user_audit_logsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_audit_logsCreateManyUsersInputEnvelope
    set?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    disconnect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    delete?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    connect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    update?: user_audit_logsUpdateWithWhereUniqueWithoutUsersInput | user_audit_logsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_audit_logsUpdateManyWithWhereWithoutUsersInput | user_audit_logsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_audit_logsScalarWhereInput | user_audit_logsScalarWhereInput[]
  }

  export type user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput> | user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput[] | user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput[]
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput[]
    upsert?: user_blocklistUpsertWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpsertWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput[]
    createMany?: user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInputEnvelope
    set?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    disconnect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    delete?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    connect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    update?: user_blocklistUpdateWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpdateWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput[]
    updateMany?: user_blocklistUpdateManyWithWhereWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpdateManyWithWhereWithoutUsers_user_blocklist_blocked_byTousersInput[]
    deleteMany?: user_blocklistScalarWhereInput | user_blocklistScalarWhereInput[]
  }

  export type user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_user_idTousersInput
    upsert?: user_blocklistUpsertWithoutUsers_user_blocklist_user_idTousersInput
    disconnect?: user_blocklistWhereInput | boolean
    delete?: user_blocklistWhereInput | boolean
    connect?: user_blocklistWhereUniqueInput
    update?: XOR<XOR<user_blocklistUpdateToOneWithWhereWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUpdateWithoutUsers_user_blocklist_user_idTousersInput>, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_user_idTousersInput>
  }

  export type user_certificatesUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_certificatesCreateOrConnectWithoutUsersInput
    upsert?: user_certificatesUpsertWithoutUsersInput
    disconnect?: user_certificatesWhereInput | boolean
    delete?: user_certificatesWhereInput | boolean
    connect?: user_certificatesWhereUniqueInput
    update?: XOR<XOR<user_certificatesUpdateToOneWithWhereWithoutUsersInput, user_certificatesUpdateWithoutUsersInput>, user_certificatesUncheckedUpdateWithoutUsersInput>
  }

  export type user_profileUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUsersInput
    upsert?: user_profileUpsertWithoutUsersInput
    disconnect?: user_profileWhereInput | boolean
    delete?: user_profileWhereInput | boolean
    connect?: user_profileWhereUniqueInput
    update?: XOR<XOR<user_profileUpdateToOneWithWhereWithoutUsersInput, user_profileUpdateWithoutUsersInput>, user_profileUncheckedUpdateWithoutUsersInput>
  }

  export type user_securityUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUsersInput
    upsert?: user_securityUpsertWithoutUsersInput
    disconnect?: user_securityWhereInput | boolean
    delete?: user_securityWhereInput | boolean
    connect?: user_securityWhereUniqueInput
    update?: XOR<XOR<user_securityUpdateToOneWithWhereWithoutUsersInput, user_securityUpdateWithoutUsersInput>, user_securityUncheckedUpdateWithoutUsersInput>
  }

  export type user_sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_sessionsUpsertWithWhereUniqueWithoutUsersInput | user_sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    set?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    disconnect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    delete?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    update?: user_sessionsUpdateWithWhereUniqueWithoutUsersInput | user_sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_sessionsUpdateManyWithWhereWithoutUsersInput | user_sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
  }

  export type favoritesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput> | favoritesCreateWithoutUsersInput[] | favoritesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: favoritesCreateOrConnectWithoutUsersInput | favoritesCreateOrConnectWithoutUsersInput[]
    upsert?: favoritesUpsertWithWhereUniqueWithoutUsersInput | favoritesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: favoritesCreateManyUsersInputEnvelope
    set?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    disconnect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    delete?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    connect?: favoritesWhereUniqueInput | favoritesWhereUniqueInput[]
    update?: favoritesUpdateWithWhereUniqueWithoutUsersInput | favoritesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: favoritesUpdateManyWithWhereWithoutUsersInput | favoritesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
  }

  export type itemsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput> | itemsCreateWithoutUsersInput[] | itemsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: itemsCreateOrConnectWithoutUsersInput | itemsCreateOrConnectWithoutUsersInput[]
    upsert?: itemsUpsertWithWhereUniqueWithoutUsersInput | itemsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: itemsCreateManyUsersInputEnvelope
    set?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    disconnect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    delete?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    connect?: itemsWhereUniqueInput | itemsWhereUniqueInput[]
    update?: itemsUpdateWithWhereUniqueWithoutUsersInput | itemsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: itemsUpdateManyWithWhereWithoutUsersInput | itemsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: itemsScalarWhereInput | itemsScalarWhereInput[]
  }

  export type pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput> | pay_per_view_accessCreateWithoutUsersInput[] | pay_per_view_accessUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: pay_per_view_accessCreateOrConnectWithoutUsersInput | pay_per_view_accessCreateOrConnectWithoutUsersInput[]
    upsert?: pay_per_view_accessUpsertWithWhereUniqueWithoutUsersInput | pay_per_view_accessUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: pay_per_view_accessCreateManyUsersInputEnvelope
    set?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    disconnect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    delete?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    connect?: pay_per_view_accessWhereUniqueInput | pay_per_view_accessWhereUniqueInput[]
    update?: pay_per_view_accessUpdateWithWhereUniqueWithoutUsersInput | pay_per_view_accessUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: pay_per_view_accessUpdateManyWithWhereWithoutUsersInput | pay_per_view_accessUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
  }

  export type reviewsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput> | reviewsCreateWithoutUsersInput[] | reviewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reviewsCreateOrConnectWithoutUsersInput | reviewsCreateOrConnectWithoutUsersInput[]
    upsert?: reviewsUpsertWithWhereUniqueWithoutUsersInput | reviewsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reviewsCreateManyUsersInputEnvelope
    set?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    disconnect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    delete?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    connect?: reviewsWhereUniqueInput | reviewsWhereUniqueInput[]
    update?: reviewsUpdateWithWhereUniqueWithoutUsersInput | reviewsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reviewsUpdateManyWithWhereWithoutUsersInput | reviewsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
  }

  export type transactionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput> | transactionsCreateWithoutUsersInput[] | transactionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUsersInput | transactionsCreateOrConnectWithoutUsersInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutUsersInput | transactionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: transactionsCreateManyUsersInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutUsersInput | transactionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutUsersInput | transactionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput | password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput | password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutUsersInput | password_reset_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type user_analyticsUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_analyticsCreateOrConnectWithoutUsersInput
    upsert?: user_analyticsUpsertWithoutUsersInput
    disconnect?: user_analyticsWhereInput | boolean
    delete?: user_analyticsWhereInput | boolean
    connect?: user_analyticsWhereUniqueInput
    update?: XOR<XOR<user_analyticsUpdateToOneWithWhereWithoutUsersInput, user_analyticsUpdateWithoutUsersInput>, user_analyticsUncheckedUpdateWithoutUsersInput>
  }

  export type user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput> | user_audit_logsCreateWithoutUsersInput[] | user_audit_logsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_audit_logsCreateOrConnectWithoutUsersInput | user_audit_logsCreateOrConnectWithoutUsersInput[]
    upsert?: user_audit_logsUpsertWithWhereUniqueWithoutUsersInput | user_audit_logsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_audit_logsCreateManyUsersInputEnvelope
    set?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    disconnect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    delete?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    connect?: user_audit_logsWhereUniqueInput | user_audit_logsWhereUniqueInput[]
    update?: user_audit_logsUpdateWithWhereUniqueWithoutUsersInput | user_audit_logsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_audit_logsUpdateManyWithWhereWithoutUsersInput | user_audit_logsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_audit_logsScalarWhereInput | user_audit_logsScalarWhereInput[]
  }

  export type user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput> | user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput[] | user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput[]
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput[]
    upsert?: user_blocklistUpsertWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpsertWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput[]
    createMany?: user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInputEnvelope
    set?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    disconnect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    delete?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    connect?: user_blocklistWhereUniqueInput | user_blocklistWhereUniqueInput[]
    update?: user_blocklistUpdateWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpdateWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput[]
    updateMany?: user_blocklistUpdateManyWithWhereWithoutUsers_user_blocklist_blocked_byTousersInput | user_blocklistUpdateManyWithWhereWithoutUsers_user_blocklist_blocked_byTousersInput[]
    deleteMany?: user_blocklistScalarWhereInput | user_blocklistScalarWhereInput[]
  }

  export type user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput = {
    create?: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
    connectOrCreate?: user_blocklistCreateOrConnectWithoutUsers_user_blocklist_user_idTousersInput
    upsert?: user_blocklistUpsertWithoutUsers_user_blocklist_user_idTousersInput
    disconnect?: user_blocklistWhereInput | boolean
    delete?: user_blocklistWhereInput | boolean
    connect?: user_blocklistWhereUniqueInput
    update?: XOR<XOR<user_blocklistUpdateToOneWithWhereWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUpdateWithoutUsers_user_blocklist_user_idTousersInput>, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_user_idTousersInput>
  }

  export type user_certificatesUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_certificatesCreateOrConnectWithoutUsersInput
    upsert?: user_certificatesUpsertWithoutUsersInput
    disconnect?: user_certificatesWhereInput | boolean
    delete?: user_certificatesWhereInput | boolean
    connect?: user_certificatesWhereUniqueInput
    update?: XOR<XOR<user_certificatesUpdateToOneWithWhereWithoutUsersInput, user_certificatesUpdateWithoutUsersInput>, user_certificatesUncheckedUpdateWithoutUsersInput>
  }

  export type user_profileUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_profileCreateOrConnectWithoutUsersInput
    upsert?: user_profileUpsertWithoutUsersInput
    disconnect?: user_profileWhereInput | boolean
    delete?: user_profileWhereInput | boolean
    connect?: user_profileWhereUniqueInput
    update?: XOR<XOR<user_profileUpdateToOneWithWhereWithoutUsersInput, user_profileUpdateWithoutUsersInput>, user_profileUncheckedUpdateWithoutUsersInput>
  }

  export type user_securityUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_securityCreateOrConnectWithoutUsersInput
    upsert?: user_securityUpsertWithoutUsersInput
    disconnect?: user_securityWhereInput | boolean
    delete?: user_securityWhereInput | boolean
    connect?: user_securityWhereUniqueInput
    update?: XOR<XOR<user_securityUpdateToOneWithWhereWithoutUsersInput, user_securityUpdateWithoutUsersInput>, user_securityUncheckedUpdateWithoutUsersInput>
  }

  export type user_sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_sessionsUpsertWithWhereUniqueWithoutUsersInput | user_sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    set?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    disconnect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    delete?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    update?: user_sessionsUpdateWithWhereUniqueWithoutUsersInput | user_sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_sessionsUpdateManyWithWhereWithoutUsersInput | user_sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type itemsCreateWithoutFavoritesInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutFavoritesInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutFavoritesInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutFavoritesInput, itemsUncheckedCreateWithoutFavoritesInput>
  }

  export type usersCreateWithoutFavoritesInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFavoritesInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFavoritesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFavoritesInput, usersUncheckedCreateWithoutFavoritesInput>
  }

  export type itemsUpsertWithoutFavoritesInput = {
    update: XOR<itemsUpdateWithoutFavoritesInput, itemsUncheckedUpdateWithoutFavoritesInput>
    create: XOR<itemsCreateWithoutFavoritesInput, itemsUncheckedCreateWithoutFavoritesInput>
    where?: itemsWhereInput
  }

  export type itemsUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: itemsWhereInput
    data: XOR<itemsUpdateWithoutFavoritesInput, itemsUncheckedUpdateWithoutFavoritesInput>
  }

  export type itemsUpdateWithoutFavoritesInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutFavoritesInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type usersUpsertWithoutFavoritesInput = {
    update: XOR<usersUpdateWithoutFavoritesInput, usersUncheckedUpdateWithoutFavoritesInput>
    create: XOR<usersCreateWithoutFavoritesInput, usersUncheckedCreateWithoutFavoritesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutFavoritesInput, usersUncheckedUpdateWithoutFavoritesInput>
  }

  export type usersUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type favoritesCreateWithoutItemsInput = {
    favorite_id?: string
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutFavoritesInput
  }

  export type favoritesUncheckedCreateWithoutItemsInput = {
    favorite_id?: string
    user_id: string
    created_at?: Date | string | null
  }

  export type favoritesCreateOrConnectWithoutItemsInput = {
    where: favoritesWhereUniqueInput
    create: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput>
  }

  export type favoritesCreateManyItemsInputEnvelope = {
    data: favoritesCreateManyItemsInput | favoritesCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutItemsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutItemsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutItemsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutItemsInput, usersUncheckedCreateWithoutItemsInput>
  }

  export type monetizationCreateWithoutItemsInput = {
    monetization_id?: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
  }

  export type monetizationUncheckedCreateWithoutItemsInput = {
    monetization_id?: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
  }

  export type monetizationCreateOrConnectWithoutItemsInput = {
    where: monetizationWhereUniqueInput
    create: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput>
  }

  export type monetizationCreateManyItemsInputEnvelope = {
    data: monetizationCreateManyItemsInput | monetizationCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type pay_per_view_accessCreateWithoutItemsInput = {
    access_id?: string
    access_expiry: Date | string
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutPay_per_view_accessInput
  }

  export type pay_per_view_accessUncheckedCreateWithoutItemsInput = {
    access_id?: string
    user_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type pay_per_view_accessCreateOrConnectWithoutItemsInput = {
    where: pay_per_view_accessWhereUniqueInput
    create: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput>
  }

  export type pay_per_view_accessCreateManyItemsInputEnvelope = {
    data: pay_per_view_accessCreateManyItemsInput | pay_per_view_accessCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type reviewsCreateWithoutItemsInput = {
    review_id?: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateWithoutItemsInput = {
    review_id?: string
    user_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type reviewsCreateOrConnectWithoutItemsInput = {
    where: reviewsWhereUniqueInput
    create: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput>
  }

  export type reviewsCreateManyItemsInputEnvelope = {
    data: reviewsCreateManyItemsInput | reviewsCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type transactionsCreateWithoutItemsInput = {
    transaction_id?: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
    users: usersCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateWithoutItemsInput = {
    transaction_id?: string
    buyer_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type transactionsCreateOrConnectWithoutItemsInput = {
    where: transactionsWhereUniqueInput
    create: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput>
  }

  export type transactionsCreateManyItemsInputEnvelope = {
    data: transactionsCreateManyItemsInput | transactionsCreateManyItemsInput[]
    skipDuplicates?: boolean
  }

  export type favoritesUpsertWithWhereUniqueWithoutItemsInput = {
    where: favoritesWhereUniqueInput
    update: XOR<favoritesUpdateWithoutItemsInput, favoritesUncheckedUpdateWithoutItemsInput>
    create: XOR<favoritesCreateWithoutItemsInput, favoritesUncheckedCreateWithoutItemsInput>
  }

  export type favoritesUpdateWithWhereUniqueWithoutItemsInput = {
    where: favoritesWhereUniqueInput
    data: XOR<favoritesUpdateWithoutItemsInput, favoritesUncheckedUpdateWithoutItemsInput>
  }

  export type favoritesUpdateManyWithWhereWithoutItemsInput = {
    where: favoritesScalarWhereInput
    data: XOR<favoritesUpdateManyMutationInput, favoritesUncheckedUpdateManyWithoutItemsInput>
  }

  export type favoritesScalarWhereInput = {
    AND?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
    OR?: favoritesScalarWhereInput[]
    NOT?: favoritesScalarWhereInput | favoritesScalarWhereInput[]
    favorite_id?: UuidFilter<"favorites"> | string
    user_id?: UuidFilter<"favorites"> | string
    item_id?: UuidFilter<"favorites"> | string
    created_at?: DateTimeNullableFilter<"favorites"> | Date | string | null
  }

  export type usersUpsertWithoutItemsInput = {
    update: XOR<usersUpdateWithoutItemsInput, usersUncheckedUpdateWithoutItemsInput>
    create: XOR<usersCreateWithoutItemsInput, usersUncheckedCreateWithoutItemsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutItemsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutItemsInput, usersUncheckedUpdateWithoutItemsInput>
  }

  export type usersUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type monetizationUpsertWithWhereUniqueWithoutItemsInput = {
    where: monetizationWhereUniqueInput
    update: XOR<monetizationUpdateWithoutItemsInput, monetizationUncheckedUpdateWithoutItemsInput>
    create: XOR<monetizationCreateWithoutItemsInput, monetizationUncheckedCreateWithoutItemsInput>
  }

  export type monetizationUpdateWithWhereUniqueWithoutItemsInput = {
    where: monetizationWhereUniqueInput
    data: XOR<monetizationUpdateWithoutItemsInput, monetizationUncheckedUpdateWithoutItemsInput>
  }

  export type monetizationUpdateManyWithWhereWithoutItemsInput = {
    where: monetizationScalarWhereInput
    data: XOR<monetizationUpdateManyMutationInput, monetizationUncheckedUpdateManyWithoutItemsInput>
  }

  export type monetizationScalarWhereInput = {
    AND?: monetizationScalarWhereInput | monetizationScalarWhereInput[]
    OR?: monetizationScalarWhereInput[]
    NOT?: monetizationScalarWhereInput | monetizationScalarWhereInput[]
    monetization_id?: UuidFilter<"monetization"> | string
    item_id?: UuidFilter<"monetization"> | string
    type?: StringNullableFilter<"monetization"> | string | null
    price?: DecimalNullableFilter<"monetization"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"monetization"> | string | null
    created_at?: DateTimeNullableFilter<"monetization"> | Date | string | null
  }

  export type pay_per_view_accessUpsertWithWhereUniqueWithoutItemsInput = {
    where: pay_per_view_accessWhereUniqueInput
    update: XOR<pay_per_view_accessUpdateWithoutItemsInput, pay_per_view_accessUncheckedUpdateWithoutItemsInput>
    create: XOR<pay_per_view_accessCreateWithoutItemsInput, pay_per_view_accessUncheckedCreateWithoutItemsInput>
  }

  export type pay_per_view_accessUpdateWithWhereUniqueWithoutItemsInput = {
    where: pay_per_view_accessWhereUniqueInput
    data: XOR<pay_per_view_accessUpdateWithoutItemsInput, pay_per_view_accessUncheckedUpdateWithoutItemsInput>
  }

  export type pay_per_view_accessUpdateManyWithWhereWithoutItemsInput = {
    where: pay_per_view_accessScalarWhereInput
    data: XOR<pay_per_view_accessUpdateManyMutationInput, pay_per_view_accessUncheckedUpdateManyWithoutItemsInput>
  }

  export type pay_per_view_accessScalarWhereInput = {
    AND?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
    OR?: pay_per_view_accessScalarWhereInput[]
    NOT?: pay_per_view_accessScalarWhereInput | pay_per_view_accessScalarWhereInput[]
    access_id?: UuidFilter<"pay_per_view_access"> | string
    user_id?: UuidFilter<"pay_per_view_access"> | string
    item_id?: UuidFilter<"pay_per_view_access"> | string
    access_expiry?: DateTimeFilter<"pay_per_view_access"> | Date | string
    created_at?: DateTimeNullableFilter<"pay_per_view_access"> | Date | string | null
  }

  export type reviewsUpsertWithWhereUniqueWithoutItemsInput = {
    where: reviewsWhereUniqueInput
    update: XOR<reviewsUpdateWithoutItemsInput, reviewsUncheckedUpdateWithoutItemsInput>
    create: XOR<reviewsCreateWithoutItemsInput, reviewsUncheckedCreateWithoutItemsInput>
  }

  export type reviewsUpdateWithWhereUniqueWithoutItemsInput = {
    where: reviewsWhereUniqueInput
    data: XOR<reviewsUpdateWithoutItemsInput, reviewsUncheckedUpdateWithoutItemsInput>
  }

  export type reviewsUpdateManyWithWhereWithoutItemsInput = {
    where: reviewsScalarWhereInput
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyWithoutItemsInput>
  }

  export type reviewsScalarWhereInput = {
    AND?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
    OR?: reviewsScalarWhereInput[]
    NOT?: reviewsScalarWhereInput | reviewsScalarWhereInput[]
    review_id?: UuidFilter<"reviews"> | string
    user_id?: UuidFilter<"reviews"> | string
    item_id?: UuidFilter<"reviews"> | string
    rating?: IntNullableFilter<"reviews"> | number | null
    review_text?: StringNullableFilter<"reviews"> | string | null
    created_at?: DateTimeNullableFilter<"reviews"> | Date | string | null
  }

  export type transactionsUpsertWithWhereUniqueWithoutItemsInput = {
    where: transactionsWhereUniqueInput
    update: XOR<transactionsUpdateWithoutItemsInput, transactionsUncheckedUpdateWithoutItemsInput>
    create: XOR<transactionsCreateWithoutItemsInput, transactionsUncheckedCreateWithoutItemsInput>
  }

  export type transactionsUpdateWithWhereUniqueWithoutItemsInput = {
    where: transactionsWhereUniqueInput
    data: XOR<transactionsUpdateWithoutItemsInput, transactionsUncheckedUpdateWithoutItemsInput>
  }

  export type transactionsUpdateManyWithWhereWithoutItemsInput = {
    where: transactionsScalarWhereInput
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyWithoutItemsInput>
  }

  export type transactionsScalarWhereInput = {
    AND?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
    OR?: transactionsScalarWhereInput[]
    NOT?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
    transaction_id?: UuidFilter<"transactions"> | string
    buyer_id?: UuidFilter<"transactions"> | string
    item_id?: UuidFilter<"transactions"> | string
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    payment_status?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
  }

  export type itemsCreateWithoutMonetizationInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    users: usersCreateNestedOneWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutMonetizationInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutMonetizationInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutMonetizationInput, itemsUncheckedCreateWithoutMonetizationInput>
  }

  export type itemsUpsertWithoutMonetizationInput = {
    update: XOR<itemsUpdateWithoutMonetizationInput, itemsUncheckedUpdateWithoutMonetizationInput>
    create: XOR<itemsCreateWithoutMonetizationInput, itemsUncheckedCreateWithoutMonetizationInput>
    where?: itemsWhereInput
  }

  export type itemsUpdateToOneWithWhereWithoutMonetizationInput = {
    where?: itemsWhereInput
    data: XOR<itemsUpdateWithoutMonetizationInput, itemsUncheckedUpdateWithoutMonetizationInput>
  }

  export type itemsUpdateWithoutMonetizationInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutMonetizationInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type itemsCreateWithoutPay_per_view_accessInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    users: usersCreateNestedOneWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutPay_per_view_accessInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutPay_per_view_accessInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutPay_per_view_accessInput, itemsUncheckedCreateWithoutPay_per_view_accessInput>
  }

  export type usersCreateWithoutPay_per_view_accessInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPay_per_view_accessInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPay_per_view_accessInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPay_per_view_accessInput, usersUncheckedCreateWithoutPay_per_view_accessInput>
  }

  export type itemsUpsertWithoutPay_per_view_accessInput = {
    update: XOR<itemsUpdateWithoutPay_per_view_accessInput, itemsUncheckedUpdateWithoutPay_per_view_accessInput>
    create: XOR<itemsCreateWithoutPay_per_view_accessInput, itemsUncheckedCreateWithoutPay_per_view_accessInput>
    where?: itemsWhereInput
  }

  export type itemsUpdateToOneWithWhereWithoutPay_per_view_accessInput = {
    where?: itemsWhereInput
    data: XOR<itemsUpdateWithoutPay_per_view_accessInput, itemsUncheckedUpdateWithoutPay_per_view_accessInput>
  }

  export type itemsUpdateWithoutPay_per_view_accessInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutPay_per_view_accessInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type usersUpsertWithoutPay_per_view_accessInput = {
    update: XOR<usersUpdateWithoutPay_per_view_accessInput, usersUncheckedUpdateWithoutPay_per_view_accessInput>
    create: XOR<usersCreateWithoutPay_per_view_accessInput, usersUncheckedCreateWithoutPay_per_view_accessInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPay_per_view_accessInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPay_per_view_accessInput, usersUncheckedUpdateWithoutPay_per_view_accessInput>
  }

  export type usersUpdateWithoutPay_per_view_accessInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPay_per_view_accessInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type itemsCreateWithoutReviewsInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    users: usersCreateNestedOneWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutReviewsInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutReviewsInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutReviewsInput, itemsUncheckedCreateWithoutReviewsInput>
  }

  export type usersCreateWithoutReviewsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReviewsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReviewsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
  }

  export type itemsUpsertWithoutReviewsInput = {
    update: XOR<itemsUpdateWithoutReviewsInput, itemsUncheckedUpdateWithoutReviewsInput>
    create: XOR<itemsCreateWithoutReviewsInput, itemsUncheckedCreateWithoutReviewsInput>
    where?: itemsWhereInput
  }

  export type itemsUpdateToOneWithWhereWithoutReviewsInput = {
    where?: itemsWhereInput
    data: XOR<itemsUpdateWithoutReviewsInput, itemsUncheckedUpdateWithoutReviewsInput>
  }

  export type itemsUpdateWithoutReviewsInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutReviewsInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type usersUpsertWithoutReviewsInput = {
    update: XOR<usersUpdateWithoutReviewsInput, usersUncheckedUpdateWithoutReviewsInput>
    create: XOR<usersCreateWithoutReviewsInput, usersUncheckedCreateWithoutReviewsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReviewsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReviewsInput, usersUncheckedUpdateWithoutReviewsInput>
  }

  export type usersUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutTransactionsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutTransactionsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutTransactionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutTransactionsInput, usersUncheckedCreateWithoutTransactionsInput>
  }

  export type itemsCreateWithoutTransactionsInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    users: usersCreateNestedOneWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutTransactionsInput = {
    item_id?: string
    user_id: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutTransactionsInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutTransactionsInput, itemsUncheckedCreateWithoutTransactionsInput>
  }

  export type usersUpsertWithoutTransactionsInput = {
    update: XOR<usersUpdateWithoutTransactionsInput, usersUncheckedUpdateWithoutTransactionsInput>
    create: XOR<usersCreateWithoutTransactionsInput, usersUncheckedCreateWithoutTransactionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutTransactionsInput, usersUncheckedUpdateWithoutTransactionsInput>
  }

  export type usersUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type itemsUpsertWithoutTransactionsInput = {
    update: XOR<itemsUpdateWithoutTransactionsInput, itemsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<itemsCreateWithoutTransactionsInput, itemsUncheckedCreateWithoutTransactionsInput>
    where?: itemsWhereInput
  }

  export type itemsUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: itemsWhereInput
    data: XOR<itemsUpdateWithoutTransactionsInput, itemsUncheckedUpdateWithoutTransactionsInput>
  }

  export type itemsUpdateWithoutTransactionsInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    users?: usersUpdateOneRequiredWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutTransactionsInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type usersCreateWithoutPassword_reset_tokensInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPassword_reset_tokensInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPassword_reset_tokensInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
  }

  export type usersUpsertWithoutPassword_reset_tokensInput = {
    update: XOR<usersUpdateWithoutPassword_reset_tokensInput, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
    create: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPassword_reset_tokensInput, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type usersUpdateWithoutPassword_reset_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPassword_reset_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_analyticsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_analyticsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_analyticsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_analyticsInput, usersUncheckedCreateWithoutUser_analyticsInput>
  }

  export type usersUpsertWithoutUser_analyticsInput = {
    update: XOR<usersUpdateWithoutUser_analyticsInput, usersUncheckedUpdateWithoutUser_analyticsInput>
    create: XOR<usersCreateWithoutUser_analyticsInput, usersUncheckedCreateWithoutUser_analyticsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_analyticsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_analyticsInput, usersUncheckedUpdateWithoutUser_analyticsInput>
  }

  export type usersUpdateWithoutUser_analyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_analyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_audit_logsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_audit_logsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_audit_logsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_audit_logsInput, usersUncheckedCreateWithoutUser_audit_logsInput>
  }

  export type usersUpsertWithoutUser_audit_logsInput = {
    update: XOR<usersUpdateWithoutUser_audit_logsInput, usersUncheckedUpdateWithoutUser_audit_logsInput>
    create: XOR<usersCreateWithoutUser_audit_logsInput, usersUncheckedCreateWithoutUser_audit_logsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_audit_logsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_audit_logsInput, usersUncheckedUpdateWithoutUser_audit_logsInput>
  }

  export type usersUpdateWithoutUser_audit_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_audit_logsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
  }

  export type usersCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
  }

  export type usersUpsertWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    update: XOR<usersUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
    create: XOR<usersCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput>
  }

  export type usersUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_blocked_byTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    update: XOR<usersUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
    create: XOR<usersCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedCreateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput, usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput>
  }

  export type usersUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_blocklist_user_blocklist_user_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_certificatesInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_certificatesInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_certificatesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_certificatesInput, usersUncheckedCreateWithoutUser_certificatesInput>
  }

  export type usersUpsertWithoutUser_certificatesInput = {
    update: XOR<usersUpdateWithoutUser_certificatesInput, usersUncheckedUpdateWithoutUser_certificatesInput>
    create: XOR<usersCreateWithoutUser_certificatesInput, usersUncheckedCreateWithoutUser_certificatesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_certificatesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_certificatesInput, usersUncheckedUpdateWithoutUser_certificatesInput>
  }

  export type usersUpdateWithoutUser_certificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_certificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_profileInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_profileInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_profileInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_profileInput, usersUncheckedCreateWithoutUser_profileInput>
  }

  export type usersUpsertWithoutUser_profileInput = {
    update: XOR<usersUpdateWithoutUser_profileInput, usersUncheckedUpdateWithoutUser_profileInput>
    create: XOR<usersCreateWithoutUser_profileInput, usersUncheckedCreateWithoutUser_profileInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_profileInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_profileInput, usersUncheckedUpdateWithoutUser_profileInput>
  }

  export type usersUpdateWithoutUser_profileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_profileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_securityInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_securityInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_securityInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_securityInput, usersUncheckedCreateWithoutUser_securityInput>
  }

  export type usersUpsertWithoutUser_securityInput = {
    update: XOR<usersUpdateWithoutUser_securityInput, usersUncheckedUpdateWithoutUser_securityInput>
    create: XOR<usersCreateWithoutUser_securityInput, usersUncheckedCreateWithoutUser_securityInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_securityInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_securityInput, usersUncheckedUpdateWithoutUser_securityInput>
  }

  export type usersUpdateWithoutUser_securityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_securityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_sessionsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesCreateNestedManyWithoutUsersInput
    items?: itemsCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutUsersInput
    reviews?: reviewsCreateNestedManyWithoutUsersInput
    transactions?: transactionsCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesCreateNestedOneWithoutUsersInput
    user_profile?: user_profileCreateNestedOneWithoutUsersInput
    user_security?: user_securityCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_sessionsInput = {
    id?: string
    email: string
    phone?: string | null
    password_hash: string
    role?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_verified?: boolean | null
    is_active?: boolean | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutUsersInput
    items?: itemsUncheckedCreateNestedManyWithoutUsersInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutUsersInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutUsersInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUsersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    user_analytics?: user_analyticsUncheckedCreateNestedOneWithoutUsersInput
    user_audit_logs?: user_audit_logsUncheckedCreateNestedManyWithoutUsersInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedCreateNestedManyWithoutUsers_user_blocklist_blocked_byTousersInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedCreateNestedOneWithoutUsers_user_blocklist_user_idTousersInput
    user_certificates?: user_certificatesUncheckedCreateNestedOneWithoutUsersInput
    user_profile?: user_profileUncheckedCreateNestedOneWithoutUsersInput
    user_security?: user_securityUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_sessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
  }

  export type usersUpsertWithoutUser_sessionsInput = {
    update: XOR<usersUpdateWithoutUser_sessionsInput, usersUncheckedUpdateWithoutUser_sessionsInput>
    create: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_sessionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_sessionsInput, usersUncheckedUpdateWithoutUser_sessionsInput>
  }

  export type usersUpdateWithoutUser_sessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUpdateManyWithoutUsersNestedInput
    items?: itemsUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_sessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    favorites?: favoritesUncheckedUpdateManyWithoutUsersNestedInput
    items?: itemsUncheckedUpdateManyWithoutUsersNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutUsersNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutUsersNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUsersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    user_analytics?: user_analyticsUncheckedUpdateOneWithoutUsersNestedInput
    user_audit_logs?: user_audit_logsUncheckedUpdateManyWithoutUsersNestedInput
    user_blocklist_user_blocklist_blocked_byTousers?: user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersNestedInput
    user_blocklist_user_blocklist_user_idTousers?: user_blocklistUncheckedUpdateOneWithoutUsers_user_blocklist_user_idTousersNestedInput
    user_certificates?: user_certificatesUncheckedUpdateOneWithoutUsersNestedInput
    user_profile?: user_profileUncheckedUpdateOneWithoutUsersNestedInput
    user_security?: user_securityUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type favoritesCreateWithoutUsersInput = {
    favorite_id?: string
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutFavoritesInput
  }

  export type favoritesUncheckedCreateWithoutUsersInput = {
    favorite_id?: string
    item_id: string
    created_at?: Date | string | null
  }

  export type favoritesCreateOrConnectWithoutUsersInput = {
    where: favoritesWhereUniqueInput
    create: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput>
  }

  export type favoritesCreateManyUsersInputEnvelope = {
    data: favoritesCreateManyUsersInput | favoritesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type itemsCreateWithoutUsersInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesCreateNestedManyWithoutItemsInput
    monetization?: monetizationCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessCreateNestedManyWithoutItemsInput
    reviews?: reviewsCreateNestedManyWithoutItemsInput
    transactions?: transactionsCreateNestedManyWithoutItemsInput
  }

  export type itemsUncheckedCreateWithoutUsersInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
    favorites?: favoritesUncheckedCreateNestedManyWithoutItemsInput
    monetization?: monetizationUncheckedCreateNestedManyWithoutItemsInput
    pay_per_view_access?: pay_per_view_accessUncheckedCreateNestedManyWithoutItemsInput
    reviews?: reviewsUncheckedCreateNestedManyWithoutItemsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutItemsInput
  }

  export type itemsCreateOrConnectWithoutUsersInput = {
    where: itemsWhereUniqueInput
    create: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput>
  }

  export type itemsCreateManyUsersInputEnvelope = {
    data: itemsCreateManyUsersInput | itemsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type pay_per_view_accessCreateWithoutUsersInput = {
    access_id?: string
    access_expiry: Date | string
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutPay_per_view_accessInput
  }

  export type pay_per_view_accessUncheckedCreateWithoutUsersInput = {
    access_id?: string
    item_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type pay_per_view_accessCreateOrConnectWithoutUsersInput = {
    where: pay_per_view_accessWhereUniqueInput
    create: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput>
  }

  export type pay_per_view_accessCreateManyUsersInputEnvelope = {
    data: pay_per_view_accessCreateManyUsersInput | pay_per_view_accessCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type reviewsCreateWithoutUsersInput = {
    review_id?: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
    items: itemsCreateNestedOneWithoutReviewsInput
  }

  export type reviewsUncheckedCreateWithoutUsersInput = {
    review_id?: string
    item_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type reviewsCreateOrConnectWithoutUsersInput = {
    where: reviewsWhereUniqueInput
    create: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput>
  }

  export type reviewsCreateManyUsersInputEnvelope = {
    data: reviewsCreateManyUsersInput | reviewsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type transactionsCreateWithoutUsersInput = {
    transaction_id?: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
    items: itemsCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateWithoutUsersInput = {
    transaction_id?: string
    item_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type transactionsCreateOrConnectWithoutUsersInput = {
    where: transactionsWhereUniqueInput
    create: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput>
  }

  export type transactionsCreateManyUsersInputEnvelope = {
    data: transactionsCreateManyUsersInput | transactionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type password_reset_tokensCreateWithoutUsersInput = {
    token?: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
  }

  export type password_reset_tokensUncheckedCreateWithoutUsersInput = {
    token?: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
  }

  export type password_reset_tokensCreateOrConnectWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    create: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput>
  }

  export type password_reset_tokensCreateManyUsersInputEnvelope = {
    data: password_reset_tokensCreateManyUsersInput | password_reset_tokensCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_analyticsCreateWithoutUsersInput = {
    posts_count?: number | null
    likes_received?: number | null
    followers_count?: number | null
    following_count?: number | null
    last_login?: Date | string | null
    activity_score?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsUncheckedCreateWithoutUsersInput = {
    posts_count?: number | null
    likes_received?: number | null
    followers_count?: number | null
    following_count?: number | null
    last_login?: Date | string | null
    activity_score?: Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsCreateOrConnectWithoutUsersInput = {
    where: user_analyticsWhereUniqueInput
    create: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
  }

  export type user_audit_logsCreateWithoutUsersInput = {
    audit_id?: string
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
  }

  export type user_audit_logsUncheckedCreateWithoutUsersInput = {
    audit_id?: string
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
  }

  export type user_audit_logsCreateOrConnectWithoutUsersInput = {
    where: user_audit_logsWhereUniqueInput
    create: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput>
  }

  export type user_audit_logsCreateManyUsersInputEnvelope = {
    data: user_audit_logsCreateManyUsersInput | user_audit_logsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: string
    reason: string
    blocked_at?: Date | string
    users_user_blocklist_user_idTousers?: usersCreateNestedOneWithoutUser_blocklist_user_blocklist_user_idTousersInput
  }

  export type user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: string
    user_id?: string | null
    reason: string
    blocked_at?: Date | string
  }

  export type user_blocklistCreateOrConnectWithoutUsers_user_blocklist_blocked_byTousersInput = {
    where: user_blocklistWhereUniqueInput
    create: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput>
  }

  export type user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInputEnvelope = {
    data: user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInput | user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInput[]
    skipDuplicates?: boolean
  }

  export type user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput = {
    block_id?: string
    reason: string
    blocked_at?: Date | string
    users_user_blocklist_blocked_byTousers?: usersCreateNestedOneWithoutUser_blocklist_user_blocklist_blocked_byTousersInput
  }

  export type user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput = {
    block_id?: string
    reason: string
    blocked_by?: string | null
    blocked_at?: Date | string
  }

  export type user_blocklistCreateOrConnectWithoutUsers_user_blocklist_user_idTousersInput = {
    where: user_blocklistWhereUniqueInput
    create: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
  }

  export type user_certificatesCreateWithoutUsersInput = {
    public_key: string
    certificate?: string | null
    created_at?: Date | string
  }

  export type user_certificatesUncheckedCreateWithoutUsersInput = {
    public_key: string
    certificate?: string | null
    created_at?: Date | string
  }

  export type user_certificatesCreateOrConnectWithoutUsersInput = {
    where: user_certificatesWhereUniqueInput
    create: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
  }

  export type user_profileCreateWithoutUsersInput = {
    username: string
    display_name?: string | null
    bio?: string | null
    avatar_url?: string | null
    website?: string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: Date | string
  }

  export type user_profileUncheckedCreateWithoutUsersInput = {
    username: string
    display_name?: string | null
    bio?: string | null
    avatar_url?: string | null
    website?: string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: Date | string
  }

  export type user_profileCreateOrConnectWithoutUsersInput = {
    where: user_profileWhereUniqueInput
    create: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
  }

  export type user_securityCreateWithoutUsersInput = {
    failed_attempts?: number | null
    last_failed_login?: Date | string | null
    two_factor_enabled?: boolean | null
    otp_code?: string | null
    otp_expires_at?: Date | string | null
    recovery_codes?: user_securityCreaterecovery_codesInput | string[]
    updated_at?: Date | string
  }

  export type user_securityUncheckedCreateWithoutUsersInput = {
    failed_attempts?: number | null
    last_failed_login?: Date | string | null
    two_factor_enabled?: boolean | null
    otp_code?: string | null
    otp_expires_at?: Date | string | null
    recovery_codes?: user_securityCreaterecovery_codesInput | string[]
    updated_at?: Date | string
  }

  export type user_securityCreateOrConnectWithoutUsersInput = {
    where: user_securityWhereUniqueInput
    create: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
  }

  export type user_sessionsCreateWithoutUsersInput = {
    session_id?: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
  }

  export type user_sessionsUncheckedCreateWithoutUsersInput = {
    session_id?: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
  }

  export type user_sessionsCreateOrConnectWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    create: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput>
  }

  export type user_sessionsCreateManyUsersInputEnvelope = {
    data: user_sessionsCreateManyUsersInput | user_sessionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type favoritesUpsertWithWhereUniqueWithoutUsersInput = {
    where: favoritesWhereUniqueInput
    update: XOR<favoritesUpdateWithoutUsersInput, favoritesUncheckedUpdateWithoutUsersInput>
    create: XOR<favoritesCreateWithoutUsersInput, favoritesUncheckedCreateWithoutUsersInput>
  }

  export type favoritesUpdateWithWhereUniqueWithoutUsersInput = {
    where: favoritesWhereUniqueInput
    data: XOR<favoritesUpdateWithoutUsersInput, favoritesUncheckedUpdateWithoutUsersInput>
  }

  export type favoritesUpdateManyWithWhereWithoutUsersInput = {
    where: favoritesScalarWhereInput
    data: XOR<favoritesUpdateManyMutationInput, favoritesUncheckedUpdateManyWithoutUsersInput>
  }

  export type itemsUpsertWithWhereUniqueWithoutUsersInput = {
    where: itemsWhereUniqueInput
    update: XOR<itemsUpdateWithoutUsersInput, itemsUncheckedUpdateWithoutUsersInput>
    create: XOR<itemsCreateWithoutUsersInput, itemsUncheckedCreateWithoutUsersInput>
  }

  export type itemsUpdateWithWhereUniqueWithoutUsersInput = {
    where: itemsWhereUniqueInput
    data: XOR<itemsUpdateWithoutUsersInput, itemsUncheckedUpdateWithoutUsersInput>
  }

  export type itemsUpdateManyWithWhereWithoutUsersInput = {
    where: itemsScalarWhereInput
    data: XOR<itemsUpdateManyMutationInput, itemsUncheckedUpdateManyWithoutUsersInput>
  }

  export type itemsScalarWhereInput = {
    AND?: itemsScalarWhereInput | itemsScalarWhereInput[]
    OR?: itemsScalarWhereInput[]
    NOT?: itemsScalarWhereInput | itemsScalarWhereInput[]
    item_id?: UuidFilter<"items"> | string
    user_id?: UuidFilter<"items"> | string
    title?: StringFilter<"items"> | string
    description?: StringNullableFilter<"items"> | string | null
    media_url?: StringNullableFilter<"items"> | string | null
    category?: StringNullableFilter<"items"> | string | null
    price?: DecimalNullableFilter<"items"> | Decimal | DecimalJsLike | number | string | null
    monetization_type?: StringNullableFilter<"items"> | string | null
    availability?: BoolNullableFilter<"items"> | boolean | null
    created_at?: DateTimeNullableFilter<"items"> | Date | string | null
  }

  export type pay_per_view_accessUpsertWithWhereUniqueWithoutUsersInput = {
    where: pay_per_view_accessWhereUniqueInput
    update: XOR<pay_per_view_accessUpdateWithoutUsersInput, pay_per_view_accessUncheckedUpdateWithoutUsersInput>
    create: XOR<pay_per_view_accessCreateWithoutUsersInput, pay_per_view_accessUncheckedCreateWithoutUsersInput>
  }

  export type pay_per_view_accessUpdateWithWhereUniqueWithoutUsersInput = {
    where: pay_per_view_accessWhereUniqueInput
    data: XOR<pay_per_view_accessUpdateWithoutUsersInput, pay_per_view_accessUncheckedUpdateWithoutUsersInput>
  }

  export type pay_per_view_accessUpdateManyWithWhereWithoutUsersInput = {
    where: pay_per_view_accessScalarWhereInput
    data: XOR<pay_per_view_accessUpdateManyMutationInput, pay_per_view_accessUncheckedUpdateManyWithoutUsersInput>
  }

  export type reviewsUpsertWithWhereUniqueWithoutUsersInput = {
    where: reviewsWhereUniqueInput
    update: XOR<reviewsUpdateWithoutUsersInput, reviewsUncheckedUpdateWithoutUsersInput>
    create: XOR<reviewsCreateWithoutUsersInput, reviewsUncheckedCreateWithoutUsersInput>
  }

  export type reviewsUpdateWithWhereUniqueWithoutUsersInput = {
    where: reviewsWhereUniqueInput
    data: XOR<reviewsUpdateWithoutUsersInput, reviewsUncheckedUpdateWithoutUsersInput>
  }

  export type reviewsUpdateManyWithWhereWithoutUsersInput = {
    where: reviewsScalarWhereInput
    data: XOR<reviewsUpdateManyMutationInput, reviewsUncheckedUpdateManyWithoutUsersInput>
  }

  export type transactionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: transactionsWhereUniqueInput
    update: XOR<transactionsUpdateWithoutUsersInput, transactionsUncheckedUpdateWithoutUsersInput>
    create: XOR<transactionsCreateWithoutUsersInput, transactionsUncheckedCreateWithoutUsersInput>
  }

  export type transactionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: transactionsWhereUniqueInput
    data: XOR<transactionsUpdateWithoutUsersInput, transactionsUncheckedUpdateWithoutUsersInput>
  }

  export type transactionsUpdateManyWithWhereWithoutUsersInput = {
    where: transactionsScalarWhereInput
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    update: XOR<password_reset_tokensUpdateWithoutUsersInput, password_reset_tokensUncheckedUpdateWithoutUsersInput>
    create: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput>
  }

  export type password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    data: XOR<password_reset_tokensUpdateWithoutUsersInput, password_reset_tokensUncheckedUpdateWithoutUsersInput>
  }

  export type password_reset_tokensUpdateManyWithWhereWithoutUsersInput = {
    where: password_reset_tokensScalarWhereInput
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyWithoutUsersInput>
  }

  export type password_reset_tokensScalarWhereInput = {
    AND?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
    OR?: password_reset_tokensScalarWhereInput[]
    NOT?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
    token?: UuidFilter<"password_reset_tokens"> | string
    user_id?: UuidFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    used?: BoolNullableFilter<"password_reset_tokens"> | boolean | null
  }

  export type user_analyticsUpsertWithoutUsersInput = {
    update: XOR<user_analyticsUpdateWithoutUsersInput, user_analyticsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_analyticsCreateWithoutUsersInput, user_analyticsUncheckedCreateWithoutUsersInput>
    where?: user_analyticsWhereInput
  }

  export type user_analyticsUpdateToOneWithWhereWithoutUsersInput = {
    where?: user_analyticsWhereInput
    data: XOR<user_analyticsUpdateWithoutUsersInput, user_analyticsUncheckedUpdateWithoutUsersInput>
  }

  export type user_analyticsUpdateWithoutUsersInput = {
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_analyticsUncheckedUpdateWithoutUsersInput = {
    posts_count?: NullableIntFieldUpdateOperationsInput | number | null
    likes_received?: NullableIntFieldUpdateOperationsInput | number | null
    followers_count?: NullableIntFieldUpdateOperationsInput | number | null
    following_count?: NullableIntFieldUpdateOperationsInput | number | null
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type user_audit_logsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_audit_logsWhereUniqueInput
    update: XOR<user_audit_logsUpdateWithoutUsersInput, user_audit_logsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_audit_logsCreateWithoutUsersInput, user_audit_logsUncheckedCreateWithoutUsersInput>
  }

  export type user_audit_logsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_audit_logsWhereUniqueInput
    data: XOR<user_audit_logsUpdateWithoutUsersInput, user_audit_logsUncheckedUpdateWithoutUsersInput>
  }

  export type user_audit_logsUpdateManyWithWhereWithoutUsersInput = {
    where: user_audit_logsScalarWhereInput
    data: XOR<user_audit_logsUpdateManyMutationInput, user_audit_logsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_audit_logsScalarWhereInput = {
    AND?: user_audit_logsScalarWhereInput | user_audit_logsScalarWhereInput[]
    OR?: user_audit_logsScalarWhereInput[]
    NOT?: user_audit_logsScalarWhereInput | user_audit_logsScalarWhereInput[]
    audit_id?: UuidFilter<"user_audit_logs"> | string
    user_id?: UuidNullableFilter<"user_audit_logs"> | string | null
    action_type?: StringFilter<"user_audit_logs"> | string
    details?: JsonNullableFilter<"user_audit_logs">
    performed_by?: UuidNullableFilter<"user_audit_logs"> | string | null
    event_time?: DateTimeFilter<"user_audit_logs"> | Date | string
  }

  export type user_blocklistUpsertWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput = {
    where: user_blocklistWhereUniqueInput
    update: XOR<user_blocklistUpdateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_blocked_byTousersInput>
    create: XOR<user_blocklistCreateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_blocked_byTousersInput>
  }

  export type user_blocklistUpdateWithWhereUniqueWithoutUsers_user_blocklist_blocked_byTousersInput = {
    where: user_blocklistWhereUniqueInput
    data: XOR<user_blocklistUpdateWithoutUsers_user_blocklist_blocked_byTousersInput, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_blocked_byTousersInput>
  }

  export type user_blocklistUpdateManyWithWhereWithoutUsers_user_blocklist_blocked_byTousersInput = {
    where: user_blocklistScalarWhereInput
    data: XOR<user_blocklistUpdateManyMutationInput, user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersInput>
  }

  export type user_blocklistScalarWhereInput = {
    AND?: user_blocklistScalarWhereInput | user_blocklistScalarWhereInput[]
    OR?: user_blocklistScalarWhereInput[]
    NOT?: user_blocklistScalarWhereInput | user_blocklistScalarWhereInput[]
    block_id?: UuidFilter<"user_blocklist"> | string
    user_id?: UuidNullableFilter<"user_blocklist"> | string | null
    reason?: StringFilter<"user_blocklist"> | string
    blocked_by?: UuidNullableFilter<"user_blocklist"> | string | null
    blocked_at?: DateTimeFilter<"user_blocklist"> | Date | string
  }

  export type user_blocklistUpsertWithoutUsers_user_blocklist_user_idTousersInput = {
    update: XOR<user_blocklistUpdateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_user_idTousersInput>
    create: XOR<user_blocklistCreateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedCreateWithoutUsers_user_blocklist_user_idTousersInput>
    where?: user_blocklistWhereInput
  }

  export type user_blocklistUpdateToOneWithWhereWithoutUsers_user_blocklist_user_idTousersInput = {
    where?: user_blocklistWhereInput
    data: XOR<user_blocklistUpdateWithoutUsers_user_blocklist_user_idTousersInput, user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_user_idTousersInput>
  }

  export type user_blocklistUpdateWithoutUsers_user_blocklist_user_idTousersInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users_user_blocklist_blocked_byTousers?: usersUpdateOneWithoutUser_blocklist_user_blocklist_blocked_byTousersNestedInput
  }

  export type user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_user_idTousersInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    blocked_by?: NullableStringFieldUpdateOperationsInput | string | null
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_certificatesUpsertWithoutUsersInput = {
    update: XOR<user_certificatesUpdateWithoutUsersInput, user_certificatesUncheckedUpdateWithoutUsersInput>
    create: XOR<user_certificatesCreateWithoutUsersInput, user_certificatesUncheckedCreateWithoutUsersInput>
    where?: user_certificatesWhereInput
  }

  export type user_certificatesUpdateToOneWithWhereWithoutUsersInput = {
    where?: user_certificatesWhereInput
    data: XOR<user_certificatesUpdateWithoutUsersInput, user_certificatesUncheckedUpdateWithoutUsersInput>
  }

  export type user_certificatesUpdateWithoutUsersInput = {
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_certificatesUncheckedUpdateWithoutUsersInput = {
    public_key?: StringFieldUpdateOperationsInput | string
    certificate?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_profileUpsertWithoutUsersInput = {
    update: XOR<user_profileUpdateWithoutUsersInput, user_profileUncheckedUpdateWithoutUsersInput>
    create: XOR<user_profileCreateWithoutUsersInput, user_profileUncheckedCreateWithoutUsersInput>
    where?: user_profileWhereInput
  }

  export type user_profileUpdateToOneWithWhereWithoutUsersInput = {
    where?: user_profileWhereInput
    data: XOR<user_profileUpdateWithoutUsersInput, user_profileUncheckedUpdateWithoutUsersInput>
  }

  export type user_profileUpdateWithoutUsersInput = {
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_profileUncheckedUpdateWithoutUsersInput = {
    username?: StringFieldUpdateOperationsInput | string
    display_name?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    social_links?: NullableJsonNullValueInput | InputJsonValue
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_securityUpsertWithoutUsersInput = {
    update: XOR<user_securityUpdateWithoutUsersInput, user_securityUncheckedUpdateWithoutUsersInput>
    create: XOR<user_securityCreateWithoutUsersInput, user_securityUncheckedCreateWithoutUsersInput>
    where?: user_securityWhereInput
  }

  export type user_securityUpdateToOneWithWhereWithoutUsersInput = {
    where?: user_securityWhereInput
    data: XOR<user_securityUpdateWithoutUsersInput, user_securityUncheckedUpdateWithoutUsersInput>
  }

  export type user_securityUpdateWithoutUsersInput = {
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_securityUncheckedUpdateWithoutUsersInput = {
    failed_attempts?: NullableIntFieldUpdateOperationsInput | number | null
    last_failed_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    two_factor_enabled?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_codes?: user_securityUpdaterecovery_codesInput | string[]
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    update: XOR<user_sessionsUpdateWithoutUsersInput, user_sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput>
  }

  export type user_sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    data: XOR<user_sessionsUpdateWithoutUsersInput, user_sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type user_sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: user_sessionsScalarWhereInput
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_sessionsScalarWhereInput = {
    AND?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
    OR?: user_sessionsScalarWhereInput[]
    NOT?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
    session_id?: UuidFilter<"user_sessions"> | string
    user_id?: UuidFilter<"user_sessions"> | string
    token?: StringFilter<"user_sessions"> | string
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    expires_at?: DateTimeFilter<"user_sessions"> | Date | string
    is_revoked?: BoolNullableFilter<"user_sessions"> | boolean | null
  }

  export type favoritesCreateManyItemsInput = {
    favorite_id?: string
    user_id: string
    created_at?: Date | string | null
  }

  export type monetizationCreateManyItemsInput = {
    monetization_id?: string
    type?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    created_at?: Date | string | null
  }

  export type pay_per_view_accessCreateManyItemsInput = {
    access_id?: string
    user_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type reviewsCreateManyItemsInput = {
    review_id?: string
    user_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type transactionsCreateManyItemsInput = {
    transaction_id?: string
    buyer_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type favoritesUpdateWithoutItemsInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type favoritesUncheckedUpdateWithoutItemsInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritesUncheckedUpdateManyWithoutItemsInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationUpdateWithoutItemsInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationUncheckedUpdateWithoutItemsInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type monetizationUncheckedUpdateManyWithoutItemsInput = {
    monetization_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessUpdateWithoutItemsInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutPay_per_view_accessNestedInput
  }

  export type pay_per_view_accessUncheckedUpdateWithoutItemsInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessUncheckedUpdateManyWithoutItemsInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsUpdateWithoutItemsInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateWithoutItemsInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsUncheckedUpdateManyWithoutItemsInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUpdateWithoutItemsInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateWithoutItemsInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUncheckedUpdateManyWithoutItemsInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritesCreateManyUsersInput = {
    favorite_id?: string
    item_id: string
    created_at?: Date | string | null
  }

  export type itemsCreateManyUsersInput = {
    item_id?: string
    title: string
    description?: string | null
    media_url?: string | null
    category?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    monetization_type?: string | null
    availability?: boolean | null
    created_at?: Date | string | null
  }

  export type pay_per_view_accessCreateManyUsersInput = {
    access_id?: string
    item_id: string
    access_expiry: Date | string
    created_at?: Date | string | null
  }

  export type reviewsCreateManyUsersInput = {
    review_id?: string
    item_id: string
    rating?: number | null
    review_text?: string | null
    created_at?: Date | string | null
  }

  export type transactionsCreateManyUsersInput = {
    transaction_id?: string
    item_id: string
    amount: Decimal | DecimalJsLike | number | string
    payment_status?: string | null
    transaction_date?: Date | string | null
  }

  export type password_reset_tokensCreateManyUsersInput = {
    token?: string
    expires_at: Date | string
    created_at?: Date | string
    used?: boolean | null
  }

  export type user_audit_logsCreateManyUsersInput = {
    audit_id?: string
    action_type: string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: string | null
    event_time?: Date | string
  }

  export type user_blocklistCreateManyUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: string
    user_id?: string | null
    reason: string
    blocked_at?: Date | string
  }

  export type user_sessionsCreateManyUsersInput = {
    session_id?: string
    token: string
    created_at?: Date | string
    expires_at: Date | string
    is_revoked?: boolean | null
  }

  export type favoritesUpdateWithoutUsersInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type favoritesUncheckedUpdateWithoutUsersInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type favoritesUncheckedUpdateManyWithoutUsersInput = {
    favorite_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type itemsUpdateWithoutUsersInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateWithoutUsersInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    favorites?: favoritesUncheckedUpdateManyWithoutItemsNestedInput
    monetization?: monetizationUncheckedUpdateManyWithoutItemsNestedInput
    pay_per_view_access?: pay_per_view_accessUncheckedUpdateManyWithoutItemsNestedInput
    reviews?: reviewsUncheckedUpdateManyWithoutItemsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutItemsNestedInput
  }

  export type itemsUncheckedUpdateManyWithoutUsersInput = {
    item_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monetization_type?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessUpdateWithoutUsersInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutPay_per_view_accessNestedInput
  }

  export type pay_per_view_accessUncheckedUpdateWithoutUsersInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pay_per_view_accessUncheckedUpdateManyWithoutUsersInput = {
    access_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    access_expiry?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsUpdateWithoutUsersInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type reviewsUncheckedUpdateWithoutUsersInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reviewsUncheckedUpdateManyWithoutUsersInput = {
    review_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    review_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUpdateWithoutUsersInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    items?: itemsUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateWithoutUsersInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUncheckedUpdateManyWithoutUsersInput = {
    transaction_id?: StringFieldUpdateOperationsInput | string
    item_id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_status?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type password_reset_tokensUpdateWithoutUsersInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type password_reset_tokensUncheckedUpdateWithoutUsersInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutUsersInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    used?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_audit_logsUpdateWithoutUsersInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_audit_logsUncheckedUpdateWithoutUsersInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_audit_logsUncheckedUpdateManyWithoutUsersInput = {
    audit_id?: StringFieldUpdateOperationsInput | string
    action_type?: StringFieldUpdateOperationsInput | string
    details?: NullableJsonNullValueInput | InputJsonValue
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    event_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blocklistUpdateWithoutUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users_user_blocklist_user_idTousers?: usersUpdateOneWithoutUser_blocklist_user_blocklist_user_idTousersNestedInput
  }

  export type user_blocklistUncheckedUpdateWithoutUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_blocklistUncheckedUpdateManyWithoutUsers_user_blocklist_blocked_byTousersInput = {
    block_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    reason?: StringFieldUpdateOperationsInput | string
    blocked_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsUpdateWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_sessionsUncheckedUpdateWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_sessionsUncheckedUpdateManyWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}